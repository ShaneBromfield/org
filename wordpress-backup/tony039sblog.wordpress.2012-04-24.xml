<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.3.1" created="2012-04-24 13:02" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Tony&#039;s blog</title>
	<link>http://adumont.fr/blog</link>
	<description>Yet another geek&#039;s blog</description>
	<pubDate>Tue, 24 Apr 2012 13:02:22 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://adumont.fr/blog</wp:base_site_url>
	<wp:base_blog_url>http://adumont.fr/blog</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>eniotna.t@gmail.com</wp:author_email><wp:author_display_name><![CDATA[tony]]></wp:author_display_name><wp:author_first_name><![CDATA[Antoine, Romain]]></wp:author_first_name><wp:author_last_name><![CDATA[Romain]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>aide-memoire</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[aide mémoire]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>au-secours</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[au secours]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>culture</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[culture]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>geek</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[geek]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>guitare</wp:category_nicename><wp:category_parent>culture</wp:category_parent><wp:cat_name><![CDATA[guitare]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>informatique</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[info]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>ma-vie</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ma vie]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>programmation-developpement</wp:category_nicename><wp:category_parent>informatique</wp:category_parent><wp:cat_name><![CDATA[prog]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>projectionreloaded</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ProjectionReloaded]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>tuto</wp:category_nicename><wp:category_parent>informatique</wp:category_parent><wp:cat_name><![CDATA[tuto]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>21</wp:term_id><wp:category_nicename>clojure</wp:category_nicename><wp:category_parent>informatique</wp:category_parent><wp:cat_name><![CDATA[clojure]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>git</wp:category_nicename><wp:category_parent>informatique</wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>culture</wp:tag_slug><wp:tag_name><![CDATA[culture]]></wp:tag_name><wp:tag_description><![CDATA[Lié à la culture en général (politique, musique, film, etc...)]]></wp:tag_description></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[Git]]></wp:tag_name><wp:tag_description><![CDATA[DCVS Git]]></wp:tag_description></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>guitare</wp:tag_slug><wp:tag_name><![CDATA[guitare]]></wp:tag_name><wp:tag_description><![CDATA[Ma petite gratte chérie]]></wp:tag_description></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>informatique</wp:tag_slug><wp:tag_name><![CDATA[info]]></wp:tag_name><wp:tag_description><![CDATA[Informatique en général, aussi bien des articles concernant une technologie en particulier, un os ou bien encore un buzz autour d'un sujet lié à l'info]]></wp:tag_description></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>musique</wp:tag_slug><wp:tag_name><![CDATA[musique]]></wp:tag_name><wp:tag_description><![CDATA[De la sique]]></wp:tag_description></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>programmation-developpement</wp:tag_slug><wp:tag_name><![CDATA[prog]]></wp:tag_name><wp:tag_description><![CDATA[Pour des tutoriels ou des sujets fortement liés au développement]]></wp:tag_description></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>tuto</wp:tag_slug><wp:tag_name><![CDATA[tuto]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.3.1</generator>

	<item>
		<title>About</title>
		<link>http://adumont.fr/blog/about/</link>
		<pubDate>Fri, 10 Dec 2010 18:48:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog//?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color: #add8e6; font-weight:normal }
  .target { }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  {margin-left:auto; margin-right:0px;  text-align:right;}
  .left   {margin-left:0px;  margin-right:auto; text-align:left;}
  .center {margin-left:auto; margin-right:auto; text-align:center;}
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top;  }
  th.right  { text-align:center;  }
  th.left   { text-align:center;   }
  th.center { text-align:center; }
  td.right  { text-align:right;  }
  td.left   { text-align:left;   }
  td.center { text-align:center; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  textarea { overflow-x: auto; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>

</head>
<body>

<div id="preamble">

</div>

<div id="content">
<h1 class="title">About me</h1>


<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Personally </a></li>
<li><a href="#sec-2">2 Rapid resume </a>
<ul>
<li><a href="#sec-2-1">2.1 Once upon a time, i was a student </a></li>
<li><a href="#sec-2-2">2.2 Then i started working </a></li>
<li><a href="#sec-2-3">2.3 Now </a></li>
</ul>
</li>
<li><a href="#sec-3">3 Where can you found me if you ever were interested </a>
<ul>
<li><a href="#sec-3-1">3.1 github </a></li>
<li><a href="#sec-3-2">3.2 blog </a></li>
<li><a href="#sec-3-3">3.3 viadeo </a></li>
<li><a href="#sec-3-4">3.4 linkedin </a></li>
<li><a href="#sec-3-5">3.5 My student resume (Need to be updated some day) </a></li>
</ul>
</li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Personally </h2>
<div class="outline-text-2" id="text-1">

<p>I'm just a linux fan boy geek (GNU/Linux, *BSD, Android and Free Software etc&hellip;).
Also, completely development addict (Clojure, C, Java, PHP, *sh, Perl, Python, html, etc&hellip;)
</p>
<p>
I'm trying to share the little computer knowledge with the rest of the
world because i had this completely amazingly utopist dream of free knowledge (as in free speech).
</p>
<p>
Trying to share when i'm not too busy playing with my kids or coding
to solve some problems (<a href="http://projecteuler.net">Project Euler</a>,<a href="http://4clojure.com"> 4clojure.com</a>) or playing with
my guitar (then again trying) 
or losing my precious time in some bull&hellip; means of transportation.
</p>
<p>
Anyway, here is my rapid resume.
</p></div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Rapid resume </h2>
<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Once upon a time, i was a student </h3>
<div class="outline-text-3" id="text-2-1">

<p>Master's degree in Networks and systems at the <a href="http://www.univ-paris-diderot.fr/">Denis Diderot College Paris VII</a>.
</p></div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> Then i started working </h3>
<div class="outline-text-3" id="text-2-2">

<p>Software engineer for 4 years at <a href="http://www.sopragroup.com"">Sopra Group</a>.
Some technologies i came across : JEE4/5, PHP4/5, Oracle, Hibernate, Spring, Ant, Maven, etc&hellip;
</p></div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> Now </h3>
<div class="outline-text-3" id="text-2-3">

<p>I'm still a software engineer but i like to call it simply developer as i really really enjoy coding.
I'm working with <a href="http://www.sfeir.com/">Sfeir</a>.
The technologies are very innovative : GWT, Android, NoSQL, etc&hellip;
</p></div>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Where can you found me if you ever were interested </h2>
<div class="outline-text-2" id="text-3">


</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> <a href="https://github.com/ardumont">github</a> </h3>
<div class="outline-text-3" id="text-3-1">

</div>

</div>

<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> <a href="http://j.mp/hevpPB">blog</a> </h3>
<div class="outline-text-3" id="text-3-2">

</div>

</div>

<div id="outline-container-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> <a href="http://j.mp/ibIAVM">viadeo</a> </h3>
<div class="outline-text-3" id="text-3-3">

</div>

</div>

<div id="outline-container-3-4" class="outline-3">
<h3 id="sec-3-4"><span class="section-number-3">3.4</span> <a href="http://j.mp/dWMPPr">linkedin</a> </h3>
<div class="outline-text-3" id="text-3-4">

</div>

</div>

<div id="outline-container-3-5" class="outline-3">
<h3 id="sec-3-5"><span class="section-number-3">3.5</span> <a href="http://j.mp/gkImOH">My student resume</a> (Need to be updated some day) </h3>
<div class="outline-text-3" id="text-3-5">

</div>
</div>
</div>
</div>

</div>
</body>
</html>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2010-12-10 18:48:19</wp:post_date>
		<wp:post_date_gmt>2010-12-10 18:48:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bonjour à tous</title>
		<link>http://adumont.fr/blog/bonjour-a-tous/</link>
		<pubDate>Fri, 10 Dec 2010 22:15:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[Bonjour à toutes et à tous qui auront le courage de lire ce post, soyez les bienvenu(e)s sur mon blog.

Je ne vais pas être original pour mes débuts le temps que tout se mette en place et que j'arrive à trouver une structure qui me parle bien.

J'ai une idée du secteur principal autour duquel travailler.
En tant que geek (un peu dilué dans la masse d'informations), ce sera surtout lié à mon monde de prédilection, l'informatique principalement orientée programmation, logiciels libres, etc...
Je le dis sans cesse, ce qui m'a fait choisir l'informatique, c'est la programmation! Et cela n'a pas changé après quelques années dans le métier ! Pour moi, <b>coder est un art</b> !

Dans un deuxième temps, peut être que je mettrai également des exercices de guitare.
Histoire de référencer et si ca peut aider d'autres gens, c'est encore mieux !

En résumé, pour démarrer, je pense faire une structure qui ressemblera à ceci :
<ol>
	<li>Informatique (pense bêtes, tuto, référencer des vidéos de tech, des articles sympas, etc...)</li>
	<li>Guitare (exercices diverses, référencer des vidéos sympa, etc...)</li>
</ol>

Voilà, cela me parait pas mal pour commencer.

A plus]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date>2010-12-10 23:15:39</wp:post_date>
		<wp:post_date_gmt>2010-12-10 22:15:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bonjour-a-tous</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ma-vie"><![CDATA[ma vie]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_views</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Thierry]]></wp:comment_author>
			<wp:comment_author_email>thierlau@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>87.91.46.178</wp:comment_author_IP>
			<wp:comment_date>2010-12-11 22:00:17</wp:comment_date>
			<wp:comment_date_gmt>2010-12-11 21:00:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yo.

Bon courage pour ce projet ! Tu as mon soutien.

Thierry]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1292101217.5371";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1292102156.1481";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.86.232.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-09 10:22:11</wp:comment_date>
			<wp:comment_date_gmt>2011-04-09 08:22:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thx!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302337331.8074";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Vidéos conférences 1</title>
		<link>http://adumont.fr/blog/videos-conferences-2-2/</link>
		<pubDate>Fri, 10 Dec 2010 22:53:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[Voici quelques vidéos de techno sympas que j'ai pu voir récemment et qui m'ont plues.
Elles concernent principalement Android, Gwt, le projet Jigsaw.
<ul>
	<li> <a href=" http://www.youtube.com/watch?v=IY3U2GXhz44&amp;feature=channel">Google I/O 2010 - Keynote Day 2 Android Demo - Full Length</a></li>
	<li> <a href="http://www.youtube.com/watch?v=yqCj83leYRE&amp;feature=player_embedded">Google I/O 2010 - A beginner's guide to Android</a></li>
	<li> <a href="http://www.youtube.com/watch?v=-F-3E8pyjFo">Google I/O 2008 - Open Source Projects and Poisonous People</a></li>
	<li> <a href="http://blog.ippon.fr/2010/12/02/java-module-ou-la-disparition-du-classpath/">Java Jigsaw ou la disparition du CLASSPATH</a></li>
</ul>
Certaines datent un peu mais vaut mieux tard que jamais!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2010-12-10 23:53:59</wp:post_date>
		<wp:post_date_gmt>2010-12-10 22:53:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>videos-conferences-2-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="culture"><![CDATA[culture]]></category>
		<category domain="post_tag" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[videos-variees]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Importer un dépôt svn chez code.google.com</title>
		<link>http://adumont.fr/blog/importer-un-depot-svn-chez-code-google-com/</link>
		<pubDate>Sat, 11 Dec 2010 13:44:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[Bonjour, 

Voici un post concernant l'import d'un dépôt svn existant chez <a href="http://code.google.com/hosting">Google</a> !

<h3>Contexte</h3>
J'ai vu récemment une vidéo conférence de <a href="http://www.youtube.com/watch?v=0SARbwvhupQ">Messieurs SVN Ben Collins-Sussman et Brian Fitzpatrick</a> dans laquelle ils abordent le mythe du génie informatique et cela m'a fait réaliser des choses !
En gros, le mythe du génie dans son garage qui va révolutionner le monde est tellement répandu dans notre culture que les développeurs en général attendent que leur code soit "parfait" avant de le relâcher. Or, clairement, la somme des compétences du monde est plus forte que juste nos compétences individuelles alors pourquoi se priver de laisser des personnes vous aider à corriger vos erreurs ?
Par ailleurs, une question simple, qu'est-ce qui a modelé notre paysage de logiciels ces 20 dernières années ? Celui qui me répond les logiciels propriétaires feraient mieux de sortir de sa cave. Pour moi, la réponse est "les logiciels libres et les communautés open-source à l'origine de ces logiciels" (et cela s'étend au dehors de l'info, c'est magnifique) !?

Anyway, back to the subject at hand.

<h3>Pré-requis</h3>
<ul>
    <li>Avoir l'accès à votre dépôt source svn</li>
    <li>Avoir Subversion installé sur votre machine</li>
    <li>Avoir une connexion internet (aussi lente soit-elle)</li>
    <li>Avoir créé un projet sur <a href="http://code.google.com/hosting">google code</a></li>
    <li>Etre l'administrateur de ce dépôt.</li>
    <li>Connaître le <a href="https://code.google.com/hosting/settings">googledeveloper code</a> généré à la création du projet.</li>
    <li>Après la création du projet un dépôt svn a été créé. Il faut lancer un reset de celui-ci pour permettre un svnsync (import de l'ancien vers le nouveau)! Pour lancer un reset, se connecter sur l'interface web du projet / onglet "Administer" / sous-onglet "Sources" / partie "dépôt" / Lien "Reset this project's dépôt".</li>
</ul>

<h3>Commande</h3>
<ol>
<li>
En rapide, voici la commande pour initialiser le dépôt destination (chez google) :
<code>SYNC_USERNAME</code> L'utilisateur du dépôt svn destination (chez google)
<code>SYNC_PASSWORD</code> Le mot de passe de cet utilisateur (en l'occurence celui généré à la création du projet)
<code>REPOS_SRC</code> Le dépôt à partir duquel envoyer les sources (local à chez moi pour l'instant)
<code>REPOS_DEST</code> Le dépôt destination (chez google pour moi)

Voici un exemple générique :
<pre class="brush: bash;">tony@dagobah:~$ svnsync init \
	--no-auth-cache \
	--sync-username $SYNC_USERNAME \
	--sync-password $SYNC_PASSWORD \
	$REPOS_DEST $REPOS_SRC</pre>

Voici un exemple concret :
<pre class="brush: bash;">tony@dagobah:~$ svnsync init \
	--no-auth-cache \
	--sync-username compte_admin \
	--sync-password loremipsum \
	https://gestioneleves.googlecode.com/svn \
	file:///home/tony/depots/gestion_eleves</pre>

Concernant le dépôt d'origine (file://...), les différents protocoles supportés par svn peuvent être utilisés :
<ul>
<li><code>file://</code> pour les répertoires ou fichiers locaux (dans l'exemple, je suis directement parti du serveur svn donc j'étais local à mon dépôt)</li>
<li><code>svn://</code>accès via svnserve</li>
<li><code>svn+ssh://</code> svn over ssh</li>
<li>etc...</li>
</ul>

</li>
<li>
On lance ensuite la synchronisation entre le dépôt source et le dépôt destination :
Générique :
<pre class="brush: bash;">tony@dagobah:~$ svnsync synchronize \
	--no-auth-cache \
	--sync-username $SYNC_USERNAME \
	--sync-password $SYNC_PASSWORD \
	$REPOS_DEST</pre>
Exemple :
<pre class="brush: bash;">tony@dagobah:~$ svnsync synchronize \
	--no-auth-cache \
	--sync-username admin_compte \
	--sync-password loremipsum \
	https://gestioneleves.googlecode.com/svn</pre>

Une fois la commande lancée, vous pouvez aller prendre un café (deux ou trois si, comme moi, vous avez une connexion internet de poulpe).
Remarque : Si votre dépôt svn contenait beaucoup d'historique, vous feriez mieux de laisser tourner la nuit car c'est plutôt long. En effet, svnsync rejoue l'ensemble des révisions dans l'ordre dans lesquelles elles ont été jouées historiquement.
</li>
</ol>

<h3>Bash</h3>
<ol>
<li>my_svnsync_init.sh :
<pre class="brush: bash;">#!/bin/bash
# pré-requis :
# - subversion installé sur votre machine
### Déclaration des variables
export SYNC_USERNAME=#saisir votre login
export SYNC_PASSWORD=#saisir votre mdp
export REPOS_SRC=#saisir votre dépôt src
# (dans mon exemple, celui chez moi)
export REPOS_DEST=#saisir votre dépôt dest
#(dans mon exemple, celui chez google)

### Lancement de la commande d'initialisation
svnsync init --no-auth-cache \
	--sync-username $SYNC_USERNAME \
	--sync-password $SYNC_PASSWORD \
	$REPOS_DEST $REPOS_SRC
</pre>
<ol>
<li>Copier-coller le contenu suivant dans un fichier</li>
<li>Enregistrer le sous le nom my_svnsync_init.sh (par exemple)</li>
<li>Donner les droits d'exécution :
<pre class="brush: bash;">tony@dagobah:~$ chmod +x my_svnsync_init.sh</pre></li>
<li>Lancer l'exécution du programme : 
<pre class="brush: bash;">tony@dagobah:~$ ./my_svnsync_init.sh</pre>
</li>
</ol>
</li>
<li>
my_svnsync_sync.sh :
<pre class="brush: bash;">#!/bin/bash 
# pré-requis :
# - subversion installé sur votre machine
# - avoir initialiser "svnsync init"
### Déclaration des variables
export SYNC_USERNAME=#saisir votre login
export SYNC_PASSWORD=#saisir votre mdp
export REPOS_DEST=#saisir votre dépôt
# dest (ici celui chez google)

### Lancement de la commande de synchronisation
svnsync synchronize \
	--no-auth-cache \
	--sync-username $SYNC_USERNAME \
	--sync-password $SYNC_PASSWORD \
	$REPOS_DEST
</pre>
<ol>
<li>Copier-coller le contenu suivant dans un fichier</li>
<li>Enregistrer le sous le nom my_svnsync_sync.sh</li>
<li>Donner les droits d'exécution :
<pre class="brush: bash;">tony@dagobah:~$ chmod +x my_svnsync_sync.sh</pre></li>
<li>Lancer l'exécution du programme : 
<pre class="brush: bash;">tony@dagobah:~$ ./my_svnsync_sync.sh</pre>
</li>
</ol>
</li>
</ol>

Ah oui, pour les trolls velus qui passeraient par là. Je sais qu'en ce moment, le gestionnaire de versions qui monte en puissance est <a href="http://git-scm.com/">GIT</a>. Je l'ai déjà utilisé localement et j'aime.
Toutefois, Je n'ai pas encore l'envie de migrer ce projet sous <a href="http://git-scm.com/">GIT</a> donc je suis resté avec <a href="http://svncorp.org/">SVN</a> qui pour moi me suffit.
Par ailleurs, j'avais envie de voir comment fonctionnait l'hosting chez google (on a le choix entre <a href="http://mercurial.selenic.com/">Mercurial</a> et <a href="http://svncorp.org/">Subversion</a>) donc voilà.
Un autre de mes projets(<a href="http://projectsion.sf.net">ProjectSion</a>) est déjà hébergé chez <a href="http://sourceforge.net">Sourceforge</a>, peut être que le prochain projet sera chez <a href="http://github.com">Github</a>, pourquoi pas

<h3>Sources</h3>
<ul>
<li><a href="https://code.google.com/hosting/settings">Vos paramètres google</a></li>
<li><a href="http://code.google.com/p/support/wiki/SubversionFAQ#How_do_I_import_an_existing_Subversion_dépôt?">FAQ google</a></li>
<li><a href="http://svnbook.red-bean.com/en/1.4/svn.ref.svnsync.html">svnsync manuel</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2010-12-11 14:44:52</wp:post_date>
		<wp:post_date_gmt>2010-12-11 13:44:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>importer-un-depot-svn-chez-code-google-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="informatique"><![CDATA[info]]></category>
		<category domain="post_tag" nicename="tuto"><![CDATA[tuto]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_graphene_slider_imgurl</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_graphene_slider_img</wp:meta_key>
			<wp:meta_value><![CDATA[global]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_graphene_show_addthis</wp:meta_key>
			<wp:meta_value><![CDATA[global]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a82bddd75b0aed33a52f8ac056d8f4ef</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[comment-importer-un-repository-svn-existant-chez-code-google-com]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_83f25eec3b91a700688670bcf86fb4c9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a696ff0cfa461fed1bc59b6c5ef06864</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7f76fb6e8a8fa7776aad92be0d7f95a5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5a1d814fb219a25fb13716641ea8330e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_00b4da7f52696454c59ce6b44f617431</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vidéos conférences 2</title>
		<link>http://adumont.fr/blog/videos-conferences-2/</link>
		<pubDate>Sat, 11 Dec 2010 14:44:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Voila d'autres conférences des gens de google qui m'ont bien plu (encore!).
Elles datent un peu mais pas tant que ca au final (1 an ou 2 pas plus) !

Google I/O 2009 - The Myth of the Genius Programmer 
http://www.youtube.com/watch?v=0SARbwvhupQ

Google I/O 2009 - Big Modular Java with Guice 
http://www.youtube.com/watch?v=hBVJbzAagfs&feature=channel]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2010-12-11 15:44:33</wp:post_date>
		<wp:post_date_gmt>2010-12-11 14:44:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>videos-conferences-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="culture"><![CDATA[culture]]></category>
		<category domain="post_tag" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="post_tag" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_6b1dce24e2e76dcf319789e49cf030d4</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="586" height="465"><param name="movie" value="http://www.youtube.com/e/0SARbwvhupQ"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/e/0SARbwvhupQ" type="application/x-shockwave-flash" width="586" height="465" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_graphene_slider_img</wp:meta_key>
			<wp:meta_value><![CDATA[global]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_graphene_slider_imgurl</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_graphene_show_addthis</wp:meta_key>
			<wp:meta_value><![CDATA[global]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3cbf514f53cf0f06fb54c6c01c91c415</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="500" height="400"><param name="movie" value="http://www.youtube.com/v/hBVJbzAagfs?fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/hBVJbzAagfs?fs=1" type="application/x-shockwave-flash" width="500" height="400" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6f85b9c7f8e05793b5758f042d7147f1</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="500" height="400"><param name="movie" value="http://www.youtube.com/v/0SARbwvhupQ?fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0SARbwvhupQ?fs=1" type="application/x-shockwave-flash" width="500" height="400" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_648b6c3f654c391cdafa558a9aecc73a</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="510" height="408"><param name="movie" value="http://www.youtube.com/v/0SARbwvhupQ?fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0SARbwvhupQ?fs=1" type="application/x-shockwave-flash" width="510" height="408" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6d198518cac1e0f71a6f611fbebd3dbe</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="510" height="408"><param name="movie" value="http://www.youtube.com/v/hBVJbzAagfs?fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/hBVJbzAagfs?fs=1" type="application/x-shockwave-flash" width="510" height="408" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_062a2fb7cc76594fa514ab1bc15812c2</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="640" height="505"><param name="movie" value="http://www.youtube.com/v/0SARbwvhupQ?fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0SARbwvhupQ?fs=1" type="application/x-shockwave-flash" width="640" height="505" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e5d809fdb617ae746b9ae7b3d30b4511</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="640" height="505"><param name="movie" value="http://www.youtube.com/v/hBVJbzAagfs?fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/hBVJbzAagfs?fs=1" type="application/x-shockwave-flash" width="640" height="505" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8163d494d320bcab112bcfe99d45614e</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="586" height="465"><param name="movie" value="http://www.youtube.com/e/hBVJbzAagfs"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/e/hBVJbzAagfs" type="application/x-shockwave-flash" width="586" height="465" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d197c5c8d2baac2ba80b06b6b1c7863d</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="767" height="600"><param name="movie" value="http://www.youtube.com/v/0SARbwvhupQ?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0SARbwvhupQ?version=3" type="application/x-shockwave-flash" width="767" height="600" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2a387d3984ad82713d3553e465d08dea</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="767" height="600"><param name="movie" value="http://www.youtube.com/v/hBVJbzAagfs?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/hBVJbzAagfs?version=3" type="application/x-shockwave-flash" width="767" height="600" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1f2416afaf4a8bda35eedaa62077d6f2</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="570" height="453"><param name="movie" value="http://www.youtube.com/v/0SARbwvhupQ?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0SARbwvhupQ?version=3" type="application/x-shockwave-flash" width="570" height="453" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_182e7ba23bb808ebf0610cb898383198</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="570" height="453"><param name="movie" value="http://www.youtube.com/v/hBVJbzAagfs?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/hBVJbzAagfs?version=3" type="application/x-shockwave-flash" width="570" height="453" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b3765ab32a1cc3e66890d4046f48a7e4</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="590" height="468"><param name="movie" value="http://www.youtube.com/v/0SARbwvhupQ?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0SARbwvhupQ?version=3" type="application/x-shockwave-flash" width="590" height="468" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_410370fed9600f0c3daf34b65275d993</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="590" height="468"><param name="movie" value="http://www.youtube.com/v/hBVJbzAagfs?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/hBVJbzAagfs?version=3" type="application/x-shockwave-flash" width="590" height="468" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_50b5be2ff5b4afa1fa67aeb04870aae0</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="620" height="465" src="http://www.youtube.com/embed/0SARbwvhupQ?fs=1&feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3ea72f393faee8990a0b3d0d60174e40</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="620" height="465" src="http://www.youtube.com/embed/hBVJbzAagfs?fs=1&feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introduction à Git - partie 1</title>
		<link>http://adumont.fr/blog/introduction-a-git/</link>
		<pubDate>Fri, 01 Apr 2011 23:55:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[<ol>
<strong>Première rencontre/pratique avec <a href="http://git-scm.com/">Git</a></strong>

<strong>Introduction</strong>

Ceci est une ébauche sur <a href="http://git-scm.com/">Git</a> et ça me permettra d'asseoir les connaissances acquises.

<strong>Contexte</strong>

2 sessions 6 à 8 ont eu lieu le mardi et mercredi 29-30/03/2011 dans les locaux de ma nouvelle boîte <a href="http://www.sfeir.com/">Sfeir</a>. Ambiance super bonne et décontractée avec plein de sfeiriens motivés.

Je n'ai pu assister qu'à la première session de Fabrice Sznajderman (<a href="https://twitter.com/#!/fsznajderman">@fsznajderman</a>).
La 2ème session était, paraît-il, encore mieux que la première et était présentée par Frédéric Menou (<a href="https://twitter.com/#!/ptit_fred">@ptit_fred</a>).
Je vais synthétiser ce que nous avons abordé lors de la première session.

<strong>Git, l'outil</strong>

<a href="http://git-scm.com/">Git</a> est un gestionnaire de configuration distribuée (DVCS Distributed Version Control System).
Par rapport aux premier VCS (<a href="http://savannah.nongnu.org/projects/cvs">CVS</a>, <a href="http://subversion.tigris.org/">SVN</a>), <a href="http://git-scm.com/">Git</a> ajoute une nouvelle notion de distribution des modifications réalisées sur le réseau (concurrent : <a href="http://bazaar.canonical.com/">Bazaar</a>, <a href="http://mercurial.selenic.com/">Mercurial</a>).

<strong>Intérêts</strong>

Le meilleur intérêt que l'on peut trouver à cet outil est le fait de pouvoir travailler sur un dépôt localement.
Ce dépôt est un clone d'un autre dépôt publique et on peut y faire ce que l'on veut (commit, merge, etc...).

Dans le cadre d'un projet open source, c'est le must.
En effet, plus besoin de gérer de droit sur un dépôt central.
On créé un dépôt publique auquel tout le monde a accès.
Il faut bien comprendre que tout le monde peut alors cloner sur sa machine un dépôt et développer les fonctionnalités qu'il veut ajouter mais en conservant la gestion de configuration locale (tout ce que permet alors <a href="http://savannah.nongnu.org/projects/cvs">CVS</a> ou <a href="http://subversion.tigris.org/">SVN</a>, mais localement et a priori en mieux. Ainsi, le renommage des fichiers est enfin géré sans douleur).

Puis se garder jalousement un dépôt principal dans lequel on pushera les modifications souhaitées selon ce qu'on trouve judicieux ou non.
Du fait de son extrême souplesse sur le clonage de dépôts, de nombreuses organisations sont possibles.

<strong>Avantages</strong>

- la gestion de l'espace mémoire sur disque est meilleure (meilleure compression et le fait que <a href="http://git-scm.com/">Git</a> ne stocke que les deltas de modifications). On gagne donc en place (plus trop un pb de nos jours mais c'est toujours ça de pris).
- La rapidité. En effet, on ne passe pas par le réseau car on se fait un dépôt clone en local.
- Du fait qu'on a un dépôt en local, on peut développer partout!
- Les performances, <a href="http://git-scm.com/">Git</a> est reconnu pour aller globalement plus vite sur les opérations habituelles.

<strong>Inconvénients</strong>

- Je dirais que l'élite convaincue de la puissance de Git reproche l'absence d'interface graphique digne de ce nom et préfère l'invite de commandes. Ça ne me choque pas plus que ça mais ça peut en rebuter pas mal. Tous les windows et apple fans pourraient être perturbés.
- Du fait de son extrême souplesse, la mise en place du process de développement peut être assez complexe dans les phases de démarrage d'un projet. Il faut potentiellement l'aide de maîtres Geeki (contraction de geek et jedi) sur la mise en place ou alors consacrer du temps à se former.

<strong>Commandes basiques</strong>

Voici une compression des commandes utiles :
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git clone$depot</pre>
où$depot est le dépôt distant (c'est d'ailleurs ici qu'est déterminé la méthode de connexion au dépôt ssh, ftp, http, etc... par exemple,$depot_distant de la forme ssh://tony@dnsmachine:/home/tony/repos/machine/distante)

Initialiser un dépôt (nom du dépôt git, test)
<pre class="brush: bash;">tony@debian-mi178:~/depots$ git init test
Initialized empty Git repository in ~/depots/test/.git
</pre>

Connaître le statut courant des fichiers à committer sur le dépôt local.
Il est intéressant de noter que les messages que cette commande nous donne est contextuel à l'état des fichiers.
Si un fichier est modifié mais n'est pas flaggé pour commit, cette commande vous le signalera (attention donc à lire correctement ces messages).
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git status</pre>

Ainsi pour ajouter un fichier dans la liste des fichiers à commiter (nommé index), on fait comme ceci :
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git add toto.fichier</pre>

Pour retirer un fichier que l'on a ajouté à l'index mais pour x raisons, on n'en veut plus :
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git rm --cached toto.fichier</pre>

Enfin, on commite sur le dépôt local tous les fichiers ajoutés
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git commit</pre>

Une étape supplémentaire, on envoie les modifications commités localement (donc dans le dépôt local) vers le dépôt référent (celui qui m'a servit à cloner) 
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git push</pre>
Ainsi on pousse nos modifications du dépôt local vers le dépôt dont est issu le local.

A l'inverse, maintenant qu'on a envoyé nos modifications sur le dépôt d'origine, il faut que les autres dépôts issus du (donc des clones) même dépôt se synchronisent.

Pour cela, on a plusieurs commandes :

Permet uniquement la synchronisation du clone et de son parent.
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git fetch</pre>

Ici, on synchronise les sources (donc dans le workspace) avec le dépôt local
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git merge</pre>

Enfin, voici la commande pour faire les 2 dans le bon ordre (fetch puis merge)
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git pull</pre>
Il s'agit d'un fetch suivi d'un merge pour synchroniser à la fois le dépôt local et les sources du workspaces.

Ainsi donc dans notre cas, si nous savons que Bob a pushé de son dépôt A' clone de A sur le dépôt A et que le dépôt A'' d'Alice est un clone de A alors Alice doit se synchroniser avec la commande pull pour tirer sur A'' les modifications de Bob.

Configuration globale
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git --config \ 
user.name "Antoine R. Dumont"
tony@debian-mi178:~/depots/test$ git --config \
user.email "adresse@email.com"
</pre>

Connaitre la liste des variables
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git config --list</pre>

Trace les logs des actions réalisés
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git log</pre>

Effectue un delta entre le fichier désiré et son équivalent dans le dépôt local
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git diff toto.txt</pre>

Un point important, l'affichage qui sera meilleur avec des couleurs :
<pre class="brush: bash;">tony@debian-mi178:~/depots/test$ git config --global color.ui auto</pre>

<strong>aide</strong>
<ol>
<li><a href="http://help.github.com">help.github.com</a></li>
<li><a href="http://git-scm.com">git-scm.com</a></li>
<li><a href="http://gitready.com">gitready.com</a></ol></li>
</ol>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2011-04-02 01:55:10</wp:post_date>
		<wp:post_date_gmt>2011-04-01 23:55:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-a-git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aide-memoire"><![CDATA[aide mémoire]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_views</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Récupérer ses fichiers windows avec un livecd GNU/Linux</title>
		<link>http://adumont.fr/blog/recuperer-ses-fichiers-windows-avec-un-livecd-gnulinux/</link>
		<pubDate>Fri, 01 Apr 2011 21:16:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[On peut faire des choses magnifiques avec un livecd.
Notamment pour tous les gens qui perdent leur windows (ca arrive peut être de moins en moins maintenant).

Imaginons que votre windows est mort et vous avez décidé qu'il fallait le réinstaller mais avant il faut récupérer des fichiers.

Booter sur votre live-cd.
Lancer l’invite de commande.
Connectez-vous en root (debian, gentoo, etc…)
<pre class="brush: bash;">tony@debian:~$ su -</pre>
ou en super user avec sudo (ubuntu par exemple) :
<pre class="brush: bash;">tony@debian:~$ sudo -s</pre>
En fonction de l’arborescence que vous avez sur votre disque, il va falloir recréer la même arborescence.
Pour connaître son arborescence (/dev/sd*) :
- invite de commande : <a href="http://doc.ubuntu-fr.org/fdisk">fdisk</a>, <a href="http://manpages.ubuntu.com/manpages/gutsy/fr/man8/cfdisk.8.html">cfdisk</a>, etc…
- graphique : <a href="http://gparted.sourceforge.net/">gparted</a>, <a href="http://doc.ubuntu-fr.org/gnome-disk-utility">palimpsest</a>

Vous déterminez les partitions windows à l'aide des systèmes de fichiers ; tout ce qui est en NTFS et ou fat (fat16, fat32) est du windows.
Une fois que vous avez déterminé que vos fichiers sont dans la partie /dev/sdaX, monter la partition de cette manière.

<pre class="brush: bash;"># Création du répertoire tampon et monte la partition 
# windows (/dev/sdbX représente une telle partition) 
# sur ce répertoire
root@debian:~$  mkdir win
root@debian:~$  mount /dev/sdaX /mnt/win
# monter le stick usb (/dev/sdbY représente la clé usb)
root@debian:~$  mkdir /mnt/usb
root@debian:~$  mount /dev/sdbY /mnt/usb
</pre>

Vous pouvez désormais lancer la copie du répertoire à sauver de votre win dans votre périphérique amovible (clé usb ou disque dur usb).
<pre class="brush: bash;">root@debian:~$  mkdir -p /mnt/usb/win
root@debian:~$  cp -ra /mnt/win/rep/* /mnt/usb/win</pre>

Voilà, vous avez les grandes lignes.

J'ai tout explicité en invite de commandes mais avec un live-cd usb qui boote et qui possède un gestionnaire de fenêtres du style de <a href="http://www.gnome.org/">Gnome</a> ou autre, c'est encore plus simple.
En effet, des icônes apparaissent sur le bureau, vous pouvez alors effectuer les mêmes manipulations graphiquement.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2011-04-01 23:16:38</wp:post_date>
		<wp:post_date_gmt>2011-04-01 21:16:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>recuperer-ses-fichiers-windows-avec-un-livecd-gnulinux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="au-secours"><![CDATA[au secours]]></category>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>00.master-branch-without-pull-on-master</title>
		<link>http://adumont.fr/blog/possible-team-workflow-with-git/00-master-branch-without-pull-on-master/</link>
		<pubDate>Sun, 07 Aug 2011 22:26:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2011/08/00.master-branch-without-pull-on-master.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>369</wp:post_id>
		<wp:post_date>2011-08-08 00:26:03</wp:post_date>
		<wp:post_date_gmt>2011-08-07 22:26:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>00-master-branch-without-pull-on-master</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>353</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2011/08/00.master-branch-without-pull-on-master.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/00.master-branch-without-pull-on-master.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"388";s:6:"height";s:3:"226";s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:51:"2011/08/00.master-branch-without-pull-on-master.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:51:"00.master-branch-without-pull-on-master-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:51:"00.master-branch-without-pull-on-master-300x174.png";s:5:"width";s:3:"300";s:6:"height";s:3:"174";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>0.master-branch-before-merge</title>
		<link>http://adumont.fr/blog/possible-team-workflow-with-git/0-master-branch-before-merge/</link>
		<pubDate>Sun, 07 Aug 2011 22:27:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2011/08/0.master-branch-before-merge.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date>2011-08-08 00:27:54</wp:post_date>
		<wp:post_date_gmt>2011-08-07 22:27:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0-master-branch-before-merge</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>353</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2011/08/0.master-branch-before-merge.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/0.master-branch-before-merge.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"474";s:6:"height";s:3:"309";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:40:"2011/08/0.master-branch-before-merge.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:40:"0.master-branch-before-merge-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:40:"0.master-branch-before-merge-300x195.png";s:5:"width";s:3:"300";s:6:"height";s:3:"195";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.merge-master-into-branch</title>
		<link>http://adumont.fr/blog/possible-team-workflow-with-git/1-merge-master-into-branch/</link>
		<pubDate>Sun, 07 Aug 2011 22:29:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date>2011-08-08 00:29:03</wp:post_date>
		<wp:post_date_gmt>2011-08-07 22:29:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-merge-master-into-branch</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>353</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/1.merge-master-into-branch.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"593";s:6:"height";s:3:"311";s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:38:"2011/08/1.merge-master-into-branch.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:38:"1.merge-master-into-branch-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:38:"1.merge-master-into-branch-300x157.png";s:5:"width";s:3:"300";s:6:"height";s:3:"157";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2.master-branch-after-second-merge-branchA-into-master</title>
		<link>http://adumont.fr/blog/possible-team-workflow-with-git/2-master-branch-after-second-merge-brancha-into-master/</link>
		<pubDate>Sun, 07 Aug 2011 22:30:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2011/08/2.master-branch-after-second-merge-branchA-into-master.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date>2011-08-08 00:30:49</wp:post_date>
		<wp:post_date_gmt>2011-08-07 22:30:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-master-branch-after-second-merge-brancha-into-master</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>353</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2011/08/2.master-branch-after-second-merge-branchA-into-master.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/2.master-branch-after-second-merge-branchA-into-master.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"593";s:6:"height";s:3:"323";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:66:"2011/08/2.master-branch-after-second-merge-branchA-into-master.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:66:"2.master-branch-after-second-merge-branchA-into-master-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:66:"2.master-branch-after-second-merge-branchA-into-master-300x163.png";s:5:"width";s:3:"300";s:6:"height";s:3:"163";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.merge-master-into-branch</title>
		<link>http://adumont.fr/blog/possible-team-workflow-with-git/1-merge-master-into-branch-2/</link>
		<pubDate>Sun, 07 Aug 2011 22:31:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>375</wp:post_id>
		<wp:post_date>2011-08-08 00:31:35</wp:post_date>
		<wp:post_date_gmt>2011-08-07 22:31:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-merge-master-into-branch-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>353</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/1.merge-master-into-branch1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"593";s:6:"height";s:3:"311";s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:39:"2011/08/1.merge-master-into-branch1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:39:"1.merge-master-into-branch1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:39:"1.merge-master-into-branch1-300x157.png";s:5:"width";s:3:"300";s:6:"height";s:3:"157";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>frame-11</title>
		<link>http://adumont.fr/blog/?attachment_id=419</link>
		<pubDate>Sun, 08 Apr 2012 08:04:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/frame-11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2012-04-08 10:04:07</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:04:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frame-11</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/frame-11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/frame-11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:20:"2012/04/frame-11.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"frame-11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"frame-11-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:21:"frame-11-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:20:"frame-11-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"frame-11-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[First frame]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>frame-12</title>
		<link>http://adumont.fr/blog/?attachment_id=420</link>
		<pubDate>Sun, 08 Apr 2012 08:05:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/frame-12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date>2012-04-08 10:05:11</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:05:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frame-12</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/frame-12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/frame-12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:20:"2012/04/frame-12.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"frame-12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"frame-12-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:21:"frame-12-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:20:"frame-12-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"frame-12-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>frame-clojure</title>
		<link>http://adumont.fr/blog/?attachment_id=421</link>
		<pubDate>Sun, 08 Apr 2012 08:05:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/frame-clojure.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date>2012-04-08 10:05:14</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:05:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frame-clojure</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/frame-clojure.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/frame-clojure.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:25:"2012/04/frame-clojure.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"frame-clojure-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"frame-clojure-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:26:"frame-clojure-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:25:"frame-clojure-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:25:"frame-clojure-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>frame-emacs</title>
		<link>http://adumont.fr/blog/?attachment_id=422</link>
		<pubDate>Sun, 08 Apr 2012 08:05:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/frame-emacs.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2012-04-08 10:05:17</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:05:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frame-emacs</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/frame-emacs.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/frame-emacs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:23:"2012/04/frame-emacs.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"frame-emacs-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"frame-emacs-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:24:"frame-emacs-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:23:"frame-emacs-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:23:"frame-emacs-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>frame-org</title>
		<link>http://adumont.fr/blog/?attachment_id=423</link>
		<pubDate>Sun, 08 Apr 2012 08:05:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/frame-org.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date>2012-04-08 10:05:21</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:05:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frame-org</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/frame-org.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/frame-org.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:21:"2012/04/frame-org.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"frame-org-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"frame-org-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:22:"frame-org-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:21:"frame-org-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"frame-org-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>front-page</title>
		<link>http://adumont.fr/blog/?attachment_id=424</link>
		<pubDate>Sun, 08 Apr 2012 08:05:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/front-page.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2012-04-08 10:05:24</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:05:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>front-page</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/front-page.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/front-page.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:22:"2012/04/front-page.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"front-page-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"front-page-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:23:"front-page-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:22:"front-page-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"front-page-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>outline</title>
		<link>http://adumont.fr/blog/?attachment_id=425</link>
		<pubDate>Sun, 08 Apr 2012 08:05:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/outline.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date>2012-04-08 10:05:26</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:05:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>outline</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/outline.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/outline.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:19:"2012/04/outline.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"outline-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"outline-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:20:"outline-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:20:"extra-featured-image";a:3:{s:4:"file";s:19:"outline-620x200.png";s:5:"width";s:3:"620";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"outline-950x180.png";s:5:"width";s:3:"950";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>full-example</title>
		<link>http://adumont.fr/blog/?attachment_id=432</link>
		<pubDate>Sun, 08 Apr 2012 08:24:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/wp-content/uploads/2012/04/example0.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2012-04-08 10:24:55</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:24:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>example0</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://adumont.fr/blog/wp-content/uploads/2012/04/example0.pdf</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/example0.pdf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mes débuts chez Sfeir - 1er jour</title>
		<link>http://adumont.fr/blog/mes-debuts-chez-sfeir-1er-jour/</link>
		<pubDate>Sat, 02 Apr 2011 10:17:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[Ca y est, j'ai franchi le cap.
J'ai intégré <a href="http://www.sfeir.com">Sfeir</a> lundi 28/03/2011 dans les locaux de Suresnes.

Pas mal d'appréhension car ma première intégration avait eu lieu, il y a exactement 4 ans aujourd'hui.

J'y suis allé rempli de doutes concernant l'arrivée.
Habitant malheureusement loin, j'ai eu le temps de ressasser (pas terrible donc) toutes ces questions pendant le trajet.
- Qu'est-ce que je fais là ? La couette, c'est bien aussi.
- J 'ai déjà trop chaud, le costard c'était obligé? Je ne suis pas un grand fan du dressing code international qui nous fait croire à un coefficient de proportionnalité entre la cravate et la productivité.
- Pourquoi je suis là déjà ? Ah oui, j'ai changé de boulot et c'est le premier jour...
- Qui dois-je voir ? Je sonne, on verra.
- Qu'est-ce qu'on peut bien faire la première journée ?

Je sonne, prends ma respiration et entre.
Et là, je suis bien accueilli par Mme <a href="http://fr.linkedin.com/pub/sylvie-belze/21/a7a/65b">Sylvie Belze</a>, Directrice des Ressources Humaines d'une amabilité à toute épreuve qui m'explique tout, me présente les personnes présentes et je reconnais quelques têtes (en fait 1, la demoiselle RH, Anaïs Havard qui m'a embauché avec l'aide de <a href="https://twitter.com/#!/DidierGirard">Didier Girard</a>, <a href="http://aheritier.net">Arnaud Héritier</a> m'ayant mis en relation).

Résultat, je me détends.
Je rencontre beaucoup de monde et ne retiens pas les prénoms mais c'est très encourageant, l'ambiance est bonne et chaleureuse.

On me précise que tout va bien se passer, que je dois rencontrer un ingénieur commercial qui m'a déjà trouvé une mission (super, je ferai pas d'intercontrat, j'en ai jamais fait avant et ça me va bien de continuer dans cette voie).

Finalement, 5 minutes après, j'intègre directement l'équipe du projet sans passer par le commercial que je verrai finalement dans la semaine.
On me présente rapidement l'équipe.

<strong>L'équipe</strong>
<a href="https://twitter.com/#!/guedes_b">Bruno Guedes</a>
<a href="https://twitter.com/#!/daboulkheir">David Aboulkheir</a>
<a href="https://twitter.com/#!/DidierGirard">Didier Girard</a>
<a href="https://twitter.com/#!/jidylle">Jérôme Idylle</a>
<a href="http://www.viadeo.com/fr/profile/thierry.trepied1">Thierry Trépied</a>

Et je rencontre le client, <a href="https://twitter.com/#!/cyril_lakech">Cyril Lakech</a> dont j'apprends plus tard qu'il est le Ch'ti Jug Leader...
Des hommes techniques expérimentés voire très!

Je vais pouvoir confronter mes connaissances aux leurs et apprendre, apprendre, apprendre!!! Yes, pour l'éternel étudiant que je suis et serai toujours, ça ne peut que m'aller. 

<strong>Le projet</strong>

On me présente également rapidement le projet.
Je ne le présente pas parce que je ne connais pas encore la politique concernant la communication.
Je peux au moins dire que c'est un projet ambitieux, technique et innovant!

Dans la mesure où je suis avec des développeurs (comme moi), que je me sens à l'aise, j'en profite pour poser des questions qui me tiennent à coeur :
- On nous donne un portable ? <strong>oui</strong>
- On est admin de sa machine ? <strong>Oui</strong>
- Comme je vois <a href="https://twitter.com/#!/patoudss">une personne</a> avec une <a href="http://www.ubuntu.com/">ubuntu</a>, je pose la question fatidique "On peut installer n'importe quel os (operating system, système d'exploitation)" ? <strong>OUI</strong>
- Y a-t-il des quotas internet ? "des quoi ?" me répond-on et là je comprends que la réponse est non. <strong>Génial</strong>
- On utilise quoi comme client email professionnel ? <strong>Gmail!</strong>
- Y a-t-il du wifi ? <strong>oui</strong>
<strong>Bref, que du bon! Je suis super content, un sans faute.</strong>

Un bémol, le wifi n'est pas top mais il va bientôt être amélioré. Et puis, il y a des câbles éthernet et le réseau y est meilleur.

Bref, chez Sfeir, on ne se fiche pas de vous. 
Vous avez tous les outils à votre disposition pour travailler.
Et si point faible il y a, il est de toute façon en cours d'amélioration.

J'apprends d'ailleurs qu'il est tout à fait judicieux d'être force de propositions. Bonne nouvelle, j'avais moi-même été moteur avec un collègue d'un outil <a href="http://www.fsf.org/">libre</a> de <a href="http://projectsion.sf.net">gestion de projets</a> dans mon <a href="http://www.sopragroup.com">ancienne boîte</a>.

Ca s'annonce très bien!

On enchaîne sur une journée de formation <a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm">REST</a> et <a href="http://www.restlet.org">Restlet</a>.
Formateur, <a href="http://www.restlet.org/">Jérôme Louvel</a> de <a href="http://www.noelios.com/">Noelios Technologies</a>, rien que ça.

La formation est très intéressante et je découvre un nouveau point de vue sur ce que je manipule depuis un moment, le web.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2011-04-02 12:17:02</wp:post_date>
		<wp:post_date_gmt>2011-04-02 10:17:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mes-debuts-chez-sfeir-1er-jour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ma-vie"><![CDATA[ma vie]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_views</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Cyril Lakech]]></wp:comment_author>
			<wp:comment_author_email>cyril.lakech@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.65.8.226</wp:comment_author_IP>
			<wp:comment_date>2011-04-04 10:25:45</wp:comment_date>
			<wp:comment_date_gmt>2011-04-04 08:25:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Lakech sans E à la fin ;-)

Sympa ton intégration chez Sfeir, ca donnera envie à ceux qui s'ennuis dans les SSII qui ne donnent pas d'importance au collaborateur et à la technique.

Pour la politique de communication, on peut en parler sans en parler, rien de stratégique ne doit filtrer par contre on peut parler de ce qui est tactique et technologique. Par exemple, les articles GWT sur le blog de Sfeir ont été créés à partir du projet: www.insideit.fr]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301905545.5104";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301907276.0744";s:7:"message";s:52:"admin a changé le statut du commentaire en approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[loic]]></wp:comment_author>
			<wp:comment_author_email>loicknuchel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.114.85.15</wp:comment_author_IP>
			<wp:comment_date>2011-04-04 10:51:27</wp:comment_date>
			<wp:comment_date_gmt>2011-04-04 08:51:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bienvenue chez Sfeir :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301907087.5373";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301907283.5857";s:7:"message";s:52:"admin a changé le statut du commentaire en approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>195.114.85.15</wp:comment_author_IP>
			<wp:comment_date>2011-04-04 12:13:15</wp:comment_date>
			<wp:comment_date_gmt>2011-04-04 10:13:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[merci]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>17</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301911995.9171";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Nicolas Martignole]]></wp:comment_author>
			<wp:comment_author_email>nicolas@touilleur-express.fr</wp:comment_author_email>
			<wp:comment_author_url>http://www.express-board.fr/</wp:comment_author_url>
			<wp:comment_author_IP>80.118.162.126</wp:comment_author_IP>
			<wp:comment_date>2011-04-04 14:38:15</wp:comment_date>
			<wp:comment_date_gmt>2011-04-04 12:38:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sympa de voir un témoignage comme le tiens. Il y a pleins de bonnes boites, il faut juste savoir les trouver. Parle de l'eXpress-Board à Sylvie Belze ou Didier, ils te raconteront l'aventure de 2 SFEIR arrivés quelques mois aussi avant toi.
:-) 
Cool

Nicolas Martignole]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301920695.3258";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301920795.9842";s:7:"message";s:52:"admin a changé le statut du commentaire en approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.86.232.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-09 10:21:42</wp:comment_date>
			<wp:comment_date_gmt>2011-04-09 08:21:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merci, j'en parlerai avec Didier.
J'ai déjà utilisé l'express-board mais ca n'a pas aboutit (de mon fait).
Ton outil est top. Bravo pour tes efforts.
Bonne continuation.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>21</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302337302.3122";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.86.232.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-09 10:21:58</wp:comment_date>
			<wp:comment_date_gmt>2011-04-09 08:21:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Cyril Lakech Pardon pour la typo sur ton nom, j’ai corrigé.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>15</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302337318.4555";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Mes débuts chez Sfeir - 2ème jour</title>
		<link>http://adumont.fr/blog/mes-debuts-chez-sfeir-2eme-jour/</link>
		<pubDate>Sun, 03 Apr 2011 18:54:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[Mes tribulations chez Sfeir, le deuxième jour commence très bien.

Je reçois mon portable installé avec windows 7, bon, il faut bien une base sur laquelle s'appuyer et j'ai appris à faire avec le fait que ce soit Microsoft le choix de base.
Je ne suis pas un fan de Microsoft mais c'est l'occasion de l'utiliser et de découvrir.
Bonne surprise, ils ont comblé tous les problèmes de Windows XP et après XP, "7" vient naturellement.
Il est fluide (sûrement aidé par la puissance de la machine) et semble stable.
Bref, on peut l'utiliser pour développer!

Ça fonctionne donc je suis content. 

<strong>Aparté</strong>

De toute façon, ses jours sont comptés car je vais forcément y mettre un <a href="http://www.gnu.org/gnu/linux-and-gnu.fr.html">GNU/Linux</a> (depuis le temps que je voulais pouvoir bosser avec au boulot, à la maison, c'est déjà le cas depuis ...). J'étais pas fixé sur quel Gnou, j'ai finalement opté pour Debian Squeeze qui est sorti récemment, ça me permet de voir les mises à jour au niveau de l'installeur. (Une fonctionnalité vraiment bien de 7, dans le gestionnaire de disque intégré, ils ont ajouté le redimensionnement d'une partition primaire, opé., ça m'a bien aidé).

<strong>Le projet</strong>

Bref, on me rappelle les détails du projet et on me donne mes premières tâches qui sont pour l'instant de la documentation liée à l'installation de plateformes sur un wiki (enfin, depuis le temps que ça existe et que ça a fait ses preuves... J'avais essayé de pousser ça sans succès précédemment).
C'est une façon douce de montrer que je sais manipuler les outils et que tout ce que j'ai pu dire jusque là n'est pas du flan!

Une bonne nouvelle, on va manipuler <a href="http://git-scm.com/">Git</a> dont j'ai écrit une <a href="http://adumont.fr/blog/?p=54">ébauche</a>. J'ai lu et pratiqué dans mon coin il y a environ un an et ça va me permettre de me dépoussiérer l'esprit.
Une bonne nouvelle n'arrivant jamais seule, il m'est annoncé qu'il y a un 6 à 8 <a href="http://git-scm.com/">Git</a> avec <a href="https://twitter.com/#!/fsznajderman">Fabrice Sznajderman</a> après le travail dans les locaux de <a href="www.sfeir2010.com">Sfeir</a>.

Décidément, j'ai eu le <a href="http://fr.wiktionary.org/wiki/avoir_le_nez_creux">nez creux</a>.

Je me sens vraiment à ma place où la connaissance est partagée, ce qui rejoint complètement ma vision du monde : encore une fois la philosophie du libre.
J'ai rencontré cette philosophie au travers de <a href="http://www.gnu.org/gnu/linux-and-gnu.fr.html">GNU/Linux</a>.
Philosophie qui a été renforcée par la rencontre avec mes professeurs de plein de choses dont les logiciels libres, <a href="http://www.dicosmo.org/">Roberto DiCosmo</a>, <a href="http://www.liafa.jussieu.fr/~yunes/">Jean-Baptiste Yunès</a>, <a href="http://www.pps.jussieu.fr/~rifflet/">Jean-Marie Rifflet</a>).

En conclusion, le deuxième jour est du même acabit que le premier.
Je me sens à l'aise, je n'ai vraiment aucun regret.

C'est super.

<strong>Fin de journée, 6 à 8 (... enfin dans les faits, 7 à 9)</strong>

Je ne vais pas épiloguer mais fournir un lien vers <a href="http://adumont.fr/blog/?p=54">cet article où je parle de ce que j'ai retenu de Git</a>.

Voilà c'est tout pour aujourd'hui.
Bonne journée à tous.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2011-04-03 20:54:03</wp:post_date>
		<wp:post_date_gmt>2011-04-03 18:54:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mes-debuts-chez-sfeir-2eme-jour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ma-vie"><![CDATA[ma vie]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_views</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Chroot pour sauver son GNU/Linux</title>
		<link>http://adumont.fr/blog/chroot-pour-sauver-son-gnulinux/</link>
		<pubDate>Sun, 03 Apr 2011 10:18:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[Je viens de changer de boîte et chez <a href="http://www.sfeir.com/">Sfeir</a>, j'ai reçu un portable sur lequel je peux faire ce que je veux.
Naturellement, après avoir été frustré pendant 4 ans à utiliser windows xp, je ne vais pas me contenter de windows 7. J'ai un peu joué avec pour découvrir.
Cela étant, je préfère retourner à mes vils instincts de geek et me suis installé ma <a href="http://www.debian.org/index.html">debian</a>.

AHHHHH <a href="http://www.gnu.org/gnu/linux-and-gnu.fr.html">GNU/Linux</a>, que du bonheur.
Mais quand on fait une connerie et que l'os ne boote plus...
Par exemple, dans mon cas, à l'installation, j'ai mal dimensionné ma racine /.
Donc, confronté au problème de place assez rapidement sur / (/opt et /boot peuvent prendre pas mal de place, /opt avec les applications externes et /boot avec les mises à jour du noyau), j'ai essayé de redimensionner une autre partition (celle de swap) pour créer ma partition /boot histoire de gagner de l'espace sur /.
Et puis, j'ai oublié de flagger /boot comme bootable et surtout, j'ai oublié de réinstaller grub dans le MBR.
Bref, le résultat, grub ne trouve pas l'image à booter.)

Le vieux réflexe issu du préhistorique windows, réinstaller...
Alors qu'il est possible de sauver le bouzin grâce à <a href="http://www.bash-linux.com/unix-man-chroot.html">chroot</a> et un live-cd ou un live-usb <a href="http://www.gnu.org/gnu/linux-and-gnu.fr.html">GNU/Linux</a> (<a href="http://www.gentoo.org/">gentoo</a>, <a href="http://www.knoppix.org/">knoppix</a>, <a href="http://www.ubuntu.com/">ubuntu</a>, <a href="http://puppylinux.org/main/Overview%20and%20Getting%20Started.htm">puppylinux</a>, etc... Je suis presque sûr qu'un live-cd ou usb <a href="freebsd">freebsd</a> (ou *bsd) ferait l'affaire mais j'avoue avoir la flemme, là maintenant, cette nuit, de vérifier).

Bon, on va me dire que c'est pour les barbus...
Je suis pas d'accord, ça marche aussi pour les imberbes ;d

<strong>Premières étapes</strong>

Boote sur ton live-cd.
Lance l'invite de commande.
Connecte-toi en root (debian, gentoo, etc...)
<pre class="brush: bash;">ubuntu@ubuntu:~$ su -</pre>
ou en super user avec sudo (ubuntu par exemple) :
<pre class="brush: bash;">ubuntu@ubuntu:~$ sudo -s</pre>

En fonction de l'arborescence que tu as sur ton disque, il va falloir recréer la même arborescence.
Pour cela, il faut que tu connaisses ton arborescence (/dev/sd*), 2 choix s'offrent à toi :
- invite de commandes : <a href="http://doc.ubuntu-fr.org/fdisk">fdisk</a>, <a href="http://manpages.ubuntu.com/manpages/gutsy/fr/man8/cfdisk.8.html">cfdisk</a>, etc…
- graphique : <a href="http://gparted.sourceforge.net/">gparted</a>, <a href="http://doc.ubuntu-fr.org/gnome-disk-utility">palimpsest</a>

Dans mon cas, ca donne ceci (l'ordre est important, enfin pour la racine / qui doit être faite avant le reste) :
<pre class="brush: bash;"># Création du répertoire dans lequel je vais monter 
# mon linux
root@ubuntu:~$ mkdir /mnt/linux
# monte la racine (/) du filesystem
root@ubuntu:~$ mount /dev/sda5 /mnt/linux
# monte le répertoire /boot qui contient le noyau 
# et grub
root@ubuntu:~$ mount /dev/sda11 /mnt/linux/boot
# et les autres qui permettent de faire fonctionner 
# le système (lib, bin, etc...)
root@ubuntu:~$ mount /dev/sda9 /mnt/linux/tmp/
root@ubuntu:~$ mount /dev/sda6 /mnt/linux/usr/
root@ubuntu:~$ mount /dev/sda7 /mnt/linux/var
</pre>

Bon, pour la suite, dans la mesure où l'eau chaude existe déjà, je me contente de la verser et d'y ajouter du sucre pour que ca passe mieux.
Bref, voici la partie de la documentation géniale de <a href="http://www.gentoo.org/doc/fr/handbook/handbook-x86.xml?part=1&amp;chap=6">Gentoo</a> mais ca reste vrai pour toute distribution car pas de spécificités liées à gentoo.

<strong>Copier l'information DNS</strong>

Il reste une dernière chose à faire avant d'entrer dans le nouvel environnement. Il s'agit de copier l'information DNS de /etc/resolv.conf. Vous devez le faire afin d'assurer le bon fonctionnement du réseau dans le nouvel environnement. /etc/resolv.conf contient les serveurs de noms pour votre réseau.

Exemple de code 1.3 : Copier l'information DNS
(L'option -L garantit qu'on ne copie pas un lien symbolique.)
<pre class="brush: bash;">root@ubuntu:~$ cp -L /etc/resolv.conf /mnt/linux/etc/</pre>

<strong>Monter /proc et /dev</strong>

Montez le système de fichiers /proc dans /mnt/linux/proc permet à l'installation d'utiliser les informations fournies par le noyau, même lorsqu'on se trouve dans l'environnement chroot ainsi que /dev.

Exemple de code 1.4 : Monter /proc et /dev
<pre class="brush: bash;">root@ubuntu:~$ mount -t proc none /mnt/linux/proc
root@ubuntu:~$ mount -o bind /dev /mnt/linux/dev
</pre>

<strong>Entrer dans le nouvel environnement</strong>

Maintenant que toutes les partitions sont initialisées et que l'environnement de base est installé, il est temps d'entrer dans notre nouvel environnement d'installation. Cela signifie que l'on passe de l'environnement d'installation actuel (CD d'installation ou autre environnement d'installation) à l'environnement de votre système (soit les partitions initialisées).

L'entrée se fait en trois étapes. D'abord, on change la racine de / (sur l'environnement d'installation) en /mnt/linux (sur vos partitions) en utilisant chroot. Ensuite, on créé un nouvel environnement en utilisant env-update dont l'effet est essentiellement de créer les variables d'environnement. Finalement, ces variables sont chargées en mémoire en utilisant source.

Exemple de code 1.5 : Entrer dans le nouvel environnement
<pre class="brush: bash;">root@ubuntu:~$ chroot /mnt/linux /bin/bash</pre>

Voilà, maintenant, vous êtes dans votre environnement en tant que root.
Pour le vérifier, vous pouvez pas exemple chercher le fichier qui donne le nom de votre release.
<pre class="brush: bash;">root@ubuntu:~$ cat /etc/debian_version
6.0.1
</pre>

Yes, c'est bien ma debian.

<strong>Réparations</strong>

A partir de maintenant, tu peux essayer de rattraper tes conneries cher lecteur.
Tu as l'invite de commandes pour faire tes réparations (si tu sais d'où vient le problème bien sûr).

En l'occurence, pour moi, commet précisé plus haut, c'est juste un problème de mise à jour de grub. 
Ca a planté car j'ai créé une nouvelle partition /boot et j'avais oublié de rendre bootable la partition (flag "a" dans fdisk) et une autre petite chose (réinstaller grub dans le <a href="http://fr.wikipedia.org/wiki/Master_boot_record">MBR</a>) :
<pre class="brush: bash;">root@ubuntu:~$ grub-install /dev/sda</pre>

C'est réparé.
La preuve, ca boote!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2011-04-03 12:18:53</wp:post_date>
		<wp:post_date_gmt>2011-04-03 10:18:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chroot-pour-sauver-son-gnulinux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aide-memoire"><![CDATA[aide mémoire]]></category>
		<category domain="category" nicename="au-secours"><![CDATA[au secours]]></category>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[chroot-ou-comment-sauver-son-gnulinux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_views</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mes débuts chez Sfeir - fin de semaine</title>
		<link>http://adumont.fr/blog/mes-debuts-chez-sfeir-fin-de-semaine/</link>
		<pubDate>Sun, 03 Apr 2011 18:55:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[Bonjour, dans ce billet, je vais juste présenter ma fin de semaine qui s'est déroulée au sein de <a href="http://www.sfeir.com">ma nouvelle entreprise</a>.

D'avance, tout s'est très bien passé.
Ceux qui veulent couper court à mes divagations peuvent directement se rendre sur cette page qui parle du <a href="http://adumont.fr/blog/bof-sfeir-01042010">BOF chez Sfeir</a>.

Pour moi, ce billet sera l'occasion de clôturer la série d'articles que j'ai ouverte sur mes débuts à <a href="http://www.sfeir.com">Sfeir</a>.

Donc, après les 2 premières journées (<a href="http://adumont.fr/blog/mes-debuts-chez-sfeir-1er-jour/">journée 1</a>, <a href="http://adumont.fr/blog/mes-debuts-che…feir-2eme-jour/">journée 2</a>) où j'ai découvert qu'on pouvait adapter sa façon de travailler (entendre au sens des outils) vers son bureau (contrairement à ce que j'avais connu jusque là où j'avais du adapter mes habitudes de linuxien), j'ai continué mon travail.

<strong>Ce que j'ai fait</strong>

J'ai continué ma transition à savoir, du paramétrage de mon poste de développeur et la documentation qui va avec histoire de capitaliser pour les futurs membres de l'équipe.
Rien de déconnant, c'est ce que je fais naturellement depuis un certain temps. L'avantage est que cela a été réalisé sur un wiki!
Une fois terminé, j'ai lu la documentation existante pour commencer ma mise à niveau avec l'existant.
Bref, de la montée en compétences.

Le plus palpitant fut mon dernier jour au <strong><a href="http://adumont.fr/blog/bof-sfeir-01042010">BOF</a></strong>.

<strong>Conclusion</strong>

En conclusion, tout le monde, il est beau, tout le monde, il est gentil.
A tempérer car je sais bien qu'il s'agit de la première semaine et que, dans la mesure où tout s'est bien passé, l'effet du neuf est renforcé.

Toutefois, avec une tentative de recul, ça a vraiment été une bonne semaine.

J'ai rencontré énormément de monde que j'ai vu au <a href="http://www.parisjug.org/xwiki/bin/view/Main/WebHome">JUG</a> sans connaître leur nom.

De part les petites réunions techniques ou BOF, je sens que tous les sfeiriens sont des techniques et que donc, on ne m'a pas juste fait un speech commercial pour me vendre Sfeir comme étant leader technique.

Le seul point négatif est (comme pour tout le monde en région parisienne), les transports en commun dont le service est vraiment inégal.
D'une journée à l'autre, en faisant la même route, j'ai eu entre 15 et 20 minutes d'écart.

Cela dit, je m'étais préparé pendant ma période de préavis à subir les foudres du dieu Transport que j'avais réussi à éviter pendant 3 ans (vive le vélo).

Maintenant, quand je suis au bureau, je suis content d'être là, c'est pour moi l'essentiel!
Donc, pour le moment, la transition est bonne.

A bientôt.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2011-04-03 20:55:02</wp:post_date>
		<wp:post_date_gmt>2011-04-03 18:55:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mes-debuts-chez-sfeir-fin-de-semaine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ma-vie"><![CDATA[ma vie]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BOF @Sfeir - 01/04/2010</title>
		<link>http://adumont.fr/blog/bof-sfeir-01042010/</link>
		<pubDate>Sun, 03 Apr 2011 18:54:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[Ce n'est pas un poisson d'avril ;d

Mon premier <a href="http://en.wikipedia.org/wiki/Birds_of_a_Feather_(computing)">BOF</a>.

<strong>Mais qu'est-ce que c'est ?</strong>

Pour les sfeiriens habitués, certainement une pécadille, broutille habituelle. Juste une réunion mensuelle interne chez <a href="http://www.sfeir.com">Sfeir</a> qui existe depuis un moment et qui regroupe tous les passionnés de l'entreprise autour de sujets techniques.

Pour moi, juste une révolution.
Un partage des connaissances au bureau pendant les heures du bureau.
Enfin des gens qui ont compris qu'il y a un investissement dans le partage des connaissances pendant le travail!
(Sfeir n'est pas la seule entreprise, d'autres entreprises le font certainement également mais personnellement, ça change!)

<strong>Organisation au poil</strong>
Merci entres autres à <a href="https://twitter.com/#!/fbaligand">Fabien Baligand</a>.

Ce qui est super, c'est qu'en amont, il est mis à disposition : 
- un <a href="http://www.doodle.com/">doodle</a> pour s'inscrire
- un <a href="http://www.google.com/moderator/#0">google moderator</a> pour faire un sondage sur les sujets qui intéressent les gens et qui permet de déterminer l'ordre des présentations.

Et comme on a une adresse gmail comme boite pro, on n'a pas besoin d'utiliser ses identifiants perso ou de s'inscrire si on n'utilise pas les services.

<strong>Avantages</strong>

L'avantage supplémentaire, c'est qu'on rencontre en dehors du cadre du client les membres de son entreprise (donc pour commencer, c'est pas mal, on fait un tour de table et on se présente chacun notre tour).
On profite de l'expérience de quelqu'un pour connaître une techno que l'on mettrait potentiellement du temps à assimiler et tout ça dans une ambiance décontractée (mais quand même professionnelle).

<strong>Le programme</strong>

<ul>
<li><a href="http://www.benois.fr/">Jérôme Benois</a> (<a href="http://twitter.com/jeromebenois">son tweet</a>) de la société <a href="http://obeo.fr/">Obeo</a>, qui nous a présenté les <a href="http://en.wikipedia.org/wiki/Domain-specific_language">Domain Specific Languages</a> (<a href="http://www.slideshare.net/jerome.benois/20100629-dslpoitoucharentesjug">sa présentation</a>).</li>
<li><a href="https://docs.google.com/a/sfeir.com/present/view?id=dhkcrstb_11gpdmgnzk&revision=_latest&start=0&theme=blank&cwj=true">Introduction à PhoneGap</a> et démonstration sur Android (projet Eclipse de démo Android) par <a href="https://twitter.com/#!/n_benbourahla">Nazim Benbourahla</a> (<a href="http://www.tutos-android.com/">son blog</a>)</li>
<li>Google SQL Services, MySQL sur Google App Engine (lien retiré car confidentiel, désolé) par <a href="https://twitter.com/#!/patoudss">Patrice De Saint Steban</a></li>
<li><a href="https://docs.google.com/a/sfeir.com/present/view?id=d4ws5pj_158dzwmxpm5&revision=_latest&start=0&theme=blank&authkey=CL_K9_sI&cwj=true">Utilisation du SDK Facebook</a> pour Android par <a href="https://twitter.com/#!/nicofrancois">Nicolas Francois</a></li>
</ul>

Ce fut très intéressant!

<a href="http://www.sfeir.com/2011/04/birds-of-feather-avril-2011/">Sur le site de sfeir!</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date>2011-04-03 20:54:44</wp:post_date>
		<wp:post_date_gmt>2011-04-03 18:54:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bof-sfeir-01042010</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="culture"><![CDATA[culture]]></category>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Wadael]]></wp:comment_author>
			<wp:comment_author_email>wadael@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.98.87.222</wp:comment_author_IP>
			<wp:comment_date>2011-04-04 10:46:49</wp:comment_date>
			<wp:comment_date_gmt>2011-04-04 08:46:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Salut,

Si il y a moyen d'ouvrir les docs au monde, ce serait sympa.
Là, c'est un peu frustrant de ne pas être autorisé

Merci]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301906809.3143";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1301917334.5351";s:7:"message";s:52:"admin a changé le statut du commentaire en approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.86.232.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-09 10:19:45</wp:comment_date>
			<wp:comment_date_gmt>2011-04-09 08:19:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Wadael Je n’avais pas vu que ce n’était pas ouvert au monde.
Désolé pour cette frustration, je me renseigne.
Merci pour ta patience.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>16</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302337185.1503";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.86.232.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-10 10:20:32</wp:comment_date>
			<wp:comment_date_gmt>2011-04-10 08:20:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Wadael Toujours pas de nouvelle, je vais relancer.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>24</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302423633.0644";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>eniotna.t@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://adumont.fr/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.86.232.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-15 22:55:44</wp:comment_date>
			<wp:comment_date_gmt>2011-04-15 20:55:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Wadael A priori, tout n'est pas ouvert mais certains le sont. J'ai également redirigé vers la page du blog de sfeir sur lequel ils parlent également de l'évènement.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>28</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302900944.3196";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Génération clé privée/publique</title>
		<link>http://adumont.fr/blog/generation-cle-priveepublique/</link>
		<pubDate>Sun, 10 Apr 2011 09:07:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[Par les temps qui courent, nous autres développeurs, nous avons souvent besoin d'une paire de clé privée/publique pour s'identifier sur des <a href="http://blog.cloudbees.com/2011/03/what-is-paas-after-all.html">plateformes de développement</a> (<a href="http://www.cloudbees.com/">cloudbees</a>, <a href="https://github.com/">github</a>, <a href="http://sourceforge.net/">sourceforge</a>, <a href="http://code.google.com/hosting/">google project hosting</a> etc...).

<strong>Pourquoi faire ?</strong>
Pour s'authentifier sans systématiquement saisir son login/mot de passe.
Imaginer par exemple, un développeur, à chaque commit saisir un mot de passe plutôt sécurisé par exemple!!!
Nous avons déjà suffisamment à faire avec les développements et les commentaires de commit.

Toutefois, s'authentifier reste indispensable, question de sécurité!

L'idée derrière l'article est donc de faire une description rapide de comment : 
<ol>
<li>générer une paire de clé privée/publique</li>
<li>et paramétrer sa plateforme pour faciliter ce processus d'authentification</li>
</ol>

<strong>Pré-requis</strong>

Avoir les outils ssh installés sur sa machine. Je suis plutôt GNU/Linux voire Mac OS X (après tout, leur shell ressemble à quelque chose, à eux). Pour Windows, s'orienter vers <a href="http://www.cygwin.com/">Cygwin</a> ou <a href="http://getgnuwin32.sourceforge.net/">GNUWin32</a> la suite des logiciels GNU portés sur windows.

<strong>Les étapes</strong>

<ol>
	<li>
		Tout d'abord, on va éventuellement sauvegarder une paire de clés déjà présente sur sa machine.
		<pre class="brush: bash;">tony@debian:~$ cd .ssh</pre>
		Si le répertoire n'existe pas, tout va bien, pas de backup nécessaire (goto étape 3°).
	</li>
	<li>
		Dans cette étape, tu as déjà au moins une paire de clés privée/publique.
		Alors 2 choix se proposent à toi, soit :
		<ul>
			<li>tu en profites pour utiliser la même paire de clé. Dans ce cas, étape 4°.</li>
			<li>tu veux générer une nouvelle clé (pour x raisons) :
				<pre class="brush: bash;">tony@debian:~/.ssh$ mkdir backup && mv id_rsa* backup/</pre>
<blockquote>Attention, si tu prends ce choix, soit conscient qu'il est possible que du coup, certaines plateformes qui se basaient sur ton couple de clés publique/privée (celles que tu as déplacées dans le répertoire backup dans mon exemple) ne fonctionnent plus.</blockquote>
			</li>
		</ul>
	</li>
	<li>
		Génération de la nouvelle paire de clé.
		Saisir une phrase de sécurité contenant entre au moins 10 et 30 caractères alphanumériques (question de sécurité, cf. <a href="http://www.delafond.org/traducmanfr/man/man1/ssh-keygen.1.html">page man</a>)
<pre class="brush: bash;">tony@debian:~/.ssh$ ssh-keygen -t rsa -C "adresse@email.fr"
Generating public/private rsa key pair.
Enter file in which to save the key (/home/tony/.ssh/id_rsa):
	/home/tony/.ssh/id_rsa
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in 
	/home/tony/.ssh/id_rsa.
Your public key has been saved in 
	/home/tony/.ssh/id_rsa.pub.
The key fingerprint is:
	d0:6b:42:bb:ec:a8:7e:61:dc:88:65:ea:2a:67:1e:49 adresse@email.fr
The key's randomart image is:
+--[ RSA 2048]----+
|        .        |
|       o..       |
|      . +        |
|       o +o      |
|        S* o     |
|       ooo E .   |
|       ..o.o     |
|    . o .o+      |
|     +.++o       |
+-----------------+
</pre>
<blockquote><strong>-t rsa</strong> pour désigner que la clé sera utilisée avec authentification <a href="http://fr.wikipedia.org/wiki/Rivest_Shamir_Adleman">RSA</a> (ssh 2)</blockquote>
</li>

<li>Dernière étape, référencer ta clé publique sur le serveur distant auquel tu veux te connecter (cloudbees, github, machine distante, etc...).
	<ul>
		<li>
			En général, les plateformes de développement distantes fournissent un accès http et donc une interface web concernant les clés. 
			Identifier une telle interface et copier le contenu intégral de votre fichier id_rsa.pub (clé publique partageable, l'autre fichier id_rsa est une clé privée à absolument garder secrète) dans la zone de texte adéquate et valider.
		</li>
		<li>
			Concernant une machine distante, il s'agit de copier le contenu de votre clé publique dans le fichier $HOME/.ssh/authorized_keys
			Par exemple :
			Copie ta clé publique sur ton serveur distant :
			<pre class="brush: bash;">tony@debian:~/$ scp $HOME/.ssh/id_rsa.pub \
remote_user@remote_server:/home/remote_user/</pre>

			Se connecter à distance sur le serveur distant en utilisant le login/mot de passe.
			<pre class="brush: bash;">tony@debian:~/$ ssh remote_user@remote_server</pre>
			Une fois connecté, copier le contenu dans le fichier d'autorisation du serveur distant.
			<pre class="brush: bash;">remote_user@remote_:~/ $ cat id_rsa.pub >> .ssh/authorized_keys</pre>

			Se déconnecter.
			Maintenant, pour tester, il suffit de relancer la connexion ssh. On ne te demande plus ton mot de passe mais la <a href="http://en.wikipedia.org/wiki/Passphrase">passphrase</a> liée à la clé.
			<pre class="brush: bash;">tony@debian:~/$ ssh remote_user@remote_server</pre>
		</li>
		<li>
			La dernière étape, enregistrer la <a href="http://en.wikipedia.org/wiki/Passphrase">passphrase</a> dans un <a href="http://en.wikipedia.org/wiki/Password_manager">gestionnaire de mots de passe</a> via l'<a href="http://fr.wikipedia.org/wiki/Environnement_de_d%C3%A9veloppement_int%C3%A9gr%C3%A9">IDE</a> par exemple.

			Pour ceux qui ne trouve pas cela sécurisé, il est toujours possible de saisir un mot de passe principal (master password) pour sécuriser l'entrée dans le gestionnaire de mots de passe.
			Ils peuvent aussi se passer de l'enregistrement de la <a href="http://en.wikipedia.org/wiki/Passphrase">passphrase</a> et la ressaisir à chaque fois.
		</li>
	</ul>
</li>

Voilà.
Toutes remarques sont les bienvenues.
</ol>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2011-04-10 11:07:12</wp:post_date>
		<wp:post_date_gmt>2011-04-10 09:07:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generation-cle-priveepublique</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aide-memoire"><![CDATA[aide mémoire]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Possible team workflow with git</title>
		<link>http://adumont.fr/blog/possible-team-workflow-with-git/</link>
		<pubDate>Sun, 07 Aug 2011 22:33:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="content">
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
	<li><a href="#sec-1">1 Introduction </a></li>
	<li><a href="#sec-2">2 One possible workflow </a>
<ul>
	<li><a href="#sec-2.1">2.1 Retrieve the repository needed </a></li>
	<li><a href="#sec-2.2">2.2 Clone this repository </a>
<ul>
	<li><a href="#sec-2.2.1">2.2.1 Go to the desired folder to receive the clone of the repository </a></li>
	<li><a href="#sec-2.2.2">2.2.2 Then clone the repository </a></li>
</ul>
</li>
	<li><a href="#sec-2.3">2.3 We create a branch from master to develop our fix or our functionality. </a></li>
	<li><a href="#sec-2.4">2.4 You do your dev regularly, add the files and commit. </a></li>
	<li><a href="#sec-2.5">2.5 Regularly, return to master to synchronize the source. </a></li>
	<li><a href="#sec-2.6">2.6 Why does git refuse to checkout my branch? </a></li>
	<li><a href="#sec-2.7">2.7 Now, we're synchronized with master, we return to our branch and merge these changes inside our branch. </a>
<ul>
	<li><a href="#sec-2.7.1">2.7.1 Return to our branch </a></li>
	<li><a href="#sec-2.7.2">2.7.2 Merge the content of master into our branch </a></li>
</ul>
</li>
	<li><a href="#sec-2.8">2.8 There were conflicts, what do i do? </a>
<ul>
	<li><a href="#sec-2.8.1">2.8.1 Why must i merge master into my branch ? </a></li>
	<li><a href="#sec-2.8.2">2.8.2 What if master is broken ? </a></li>
</ul>
</li>
	<li><a href="#sec-2.9">2.9 I've done my dev, what do i do ? </a>
<ul>
	<li><a href="#sec-2.9.1">2.9.1 Check these assertions : </a></li>
</ul>
</li>
	<li><a href="#sec-2.10">2.10 Ok then, it's time to merge into master. </a>
<ul>
	<li><a href="#sec-2.10.1">2.10.1 Return to master </a></li>
	<li><a href="#sec-2.10.2">2.10.2 To avoid some later merging, check you're up-to-date with master </a></li>
</ul>
</li>
	<li><a href="#sec-2.11">2.11 Merge the content of the "merging branch" into master </a></li>
	<li><a href="#sec-2.12">2.12 Send your modifications to master! </a></li>
	<li><a href="#sec-2.13">2.13 What if there are problems ? </a></li>
	<li><a href="#sec-2.14">2.14 Now, you're done!!! </a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Introduction</h2>
<div id="text-1" class="outline-text-2">

Here is one possible team workflow!
I'm not saying it's the ultimate way and those that do not follow will
burn! Feel free to discuss it and/or patch it!

For simplicity's readings, i talk about master as of the final branch
we need to merge into. It's just to simplify and give a name.
You can, of course, translate this by replacing master by a release branch.

</div>
</div>
<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> One possible workflow</h2>
<div id="outline-container-2.1" class="outline-3">
<h3 id="sec-2.1"><span class="section-number-3">2.1</span> Retrieve the repository needed</h3>
</div>
<div id="outline-container-2.2" class="outline-3">
<h3 id="sec-2.2"><span class="section-number-3">2.2</span> Clone this repository</h3>
<div id="outline-container-2.2.1" class="outline-4">
<h4 id="sec-2.2.1"><span class="section-number-4">2.2.1</span> Go to the desired folder to receive the clone of the repository</h4>
<div id="text-2.2.1" class="outline-text-4">

Exemple :
<pre class="src src-sh"><span style="color: #b0c4de;">cd</span> ~/repositories/pro/</pre>
</div>
</div>
<div id="outline-container-2.2.2" class="outline-4">
<h4 id="sec-2.2.2"><span class="section-number-4">2.2.2</span> Then clone the repository</h4>
<div id="text-2.2.2" class="outline-text-4">
<pre class="src src-sh">git clone adress-of-the-repository</pre>
Example:
<pre class="src src-sh">git clone https://ardumont@github.com/ardumont/my-org-files.git</pre>
</div>
</div>
</div>
<div id="outline-container-2.3" class="outline-3">
<h3 id="sec-2.3"><span class="section-number-3">2.3</span> We create a branch from master to develop our fix or our functionality.</h3>
<div id="text-2.3" class="outline-text-3">
<pre class="src src-sh">git checkout -b trigram-user/branch-name</pre>
Example :
<pre class="src src-sh">git checkout -b adu/doSomeStuff</pre>
</div>
</div>
<div id="outline-container-2.4" class="outline-3">
<h3 id="sec-2.4"><span class="section-number-3">2.4</span> You do your dev regularly, add the files and commit.</h3>
<div id="text-2.4" class="outline-text-3">

The graph will look like something like this:
<p style="text-align: center;"><a href="http://adumont.fr/blog/wp-content/uploads/2011/08/00.master-branch-without-pull-on-master.png"><img class="size-full wp-image-369 aligncenter" title="00.master-branch-without-pull-on-master" src="http://adumont.fr/blog/wp-content/uploads/2011/08/00.master-branch-without-pull-on-master.png" alt="" width="388" height="226" /></a></p>

</div>
</div>
<div id="outline-container-2.5" class="outline-3">
<h3 id="sec-2.5"><span class="section-number-3">2.5</span> Regularly, return to master to synchronize the source.</h3>
<div id="text-2.5" class="outline-text-3">
<pre class="src src-sh"><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">Return to master
</span>git checkout master
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">Synchronize your local repository and your workspace
</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">with the content of the distant repository
</span>git pull</pre>
If there were some changes inside the remote master (origin/master), the graph will evolve like this:
<p style="text-align: center;"><a href="http://adumont.fr/blog/wp-content/uploads/2011/08/0.master-branch-before-merge.png"><img class="size-full wp-image-371 aligncenter" title="0.master-branch-before-merge" src="http://adumont.fr/blog/wp-content/uploads/2011/08/0.master-branch-before-merge.png" alt="" width="474" height="309" /></a></p>

</div>
</div>
<div id="outline-container-2.6" class="outline-3">
<h3 id="sec-2.6"><span class="section-number-3">2.6</span> Why does git refuse to checkout my branch?</h3>
<div id="text-2.6" class="outline-text-3">

If it refuses (git explains everything it does and also why it refuses), you may have forgotten one
step. You may, for example, have changes locally that you did not
commit to your index.

So, before returning to master, make sure that :
<ul>
	<li> you have commited everything in your index for your branch</li>
</ul>
<pre class="src src-sh">git add the-thing-you-wanna-commit-but-unstable another-thing-to-commit-but-unstable ...
git commit -m <span style="color: #ffa07a;">"Filthy commit not stable, need to amend it later"</span>
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">later, when everything is ok

</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">git add the-thing-you-wanna-commit-stable \
</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">another-thing-to-commit-stable ...
</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">amend the commit
</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">git commit --amend
</span></pre>
<ul>
	<li> or dropped it if it is useless to you</li>
</ul>
<pre class="src src-sh">rm the-thing-you-wanna-commit-but-unstable another-thing-to-commit-but-unstable ...</pre>
<ul>
	<li> or another option, stash it!</li>
</ul>
<pre class="src src-sh">git stash
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">and later when everything is ok, just unstash it

</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">git stash pop
</span></pre>
Remark 2:
These commands are your best friends, ask them to help you out!
<pre class="src src-sh">git status</pre>
and/or
<pre class="src src-sh">gitk --all</pre>
and/or
<pre class="src src-sh">git log</pre>
</div>
</div>
<div id="outline-container-2.7" class="outline-3">
<h3 id="sec-2.7"><span class="section-number-3">2.7</span> Now, we're synchronized with master, we return to our branch and merge these changes inside our branch.</h3>
<div id="outline-container-2.7.1" class="outline-4">
<h4 id="sec-2.7.1"><span class="section-number-4">2.7.1</span> Return to our branch</h4>
<div id="text-2.7.1" class="outline-text-4">
<pre class="src src-sh">git checkout trigram-user/branch-name</pre>
</div>
</div>
<div id="outline-container-2.7.2" class="outline-4">
<h4 id="sec-2.7.2"><span class="section-number-4">2.7.2</span> Merge the content of master into our branch</h4>
<div id="text-2.7.2" class="outline-text-4">
<pre class="src src-sh">git merge master</pre>
Everything ok ?
If everything is merging without problems, the graph will look like this:
<p style="text-align: center;"><a href="http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch.png"></a><a href="http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch.png"><img class="alignnone size-full wp-image-373" title="1.merge-master-into-branch" src="http://adumont.fr/blog/wp-content/uploads/2011/08/1.merge-master-into-branch.png" alt="" width="593" height="311" /></a></p>

</div>
</div>
</div>
<div id="outline-container-2.8" class="outline-3">
<h3 id="sec-2.8"><span class="section-number-3">2.8</span> There were conflicts, what do i do?</h3>
<div id="text-2.8" class="outline-text-3">

So there were conflits during merge, we must fix these conflicts manually.

Either you use the tool git offers you
<pre class="src src-sh">git mergetool</pre>
(I do not detail because i didn't try yet!)

Or, you open your favourite editor or ide and choose what you want to keep or not depending on the situation.
When all conflicts are resolved and that all your tests are ok, add
all the files modified to the index, commit and that's all folks!
<pre class="src src-sh">git status
git add yourFileModified yourFile2Modified
git commit</pre>
In either case of conflict or not, the branch will look like
previously.

</div>
<div id="outline-container-2.8.1" class="outline-4">
<h4 id="sec-2.8.1"><span class="section-number-4">2.8.1</span> Why must i merge master into my branch ?</h4>
<div id="text-2.8.1" class="outline-text-4">
<ul>
	<li id="sec-2.8.1.1">To make sure that what you're doing is still compatible with the latest code!</li>
	<li id="sec-2.8.1.2">If you do not, you may break the code from master when you merge your fix or dev of the branch into master! It's what i think can protect the master!</li>
</ul>
</div>
</div>
<div id="outline-container-2.8.2" class="outline-4">
<h4 id="sec-2.8.2"><span class="section-number-4">2.8.2</span> What if master is broken ?</h4>
<div id="text-2.8.2" class="outline-text-4">
<ul>
	<li id="sec-2.8.2.1">It depends on the policy of your project.</li>
	<li id="sec-2.8.2.2">If your policy is "Every commit is stable (all tests ok)" then it's not possible… or not!
<ul>
	<li id="sec-2.8.2.2.1">Very strong assertion : Master must be stable! (It is mine!)
<ul>
	<li id="sec-2.8.2.2.1.1">How can we be sure of such assertion ?
<ul>
	<li id="sec-2.8.2.2.1.1.1">Continous integration !</li>
	<li id="sec-2.8.2.2.1.1.2">Code review tool such as Gerrit!</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-2.9" class="outline-3">
<h3 id="sec-2.9"><span class="section-number-3">2.9</span> I've done my dev, what do i do ?</h3>
<div id="outline-container-2.9.1" class="outline-4">
<h4 id="sec-2.9.1"><span class="section-number-4">2.9.1</span> Check these assertions :</h4>
<div id="text-2.9.1" class="outline-text-4">
<ul>
	<li id="sec-2.9.1.1">Is all your code commited to your branch?</li>
	<li id="sec-2.9.1.2">Is your dev done?</li>
	<li id="sec-2.9.1.3">Are all your unit-tests ok?</li>
	<li id="sec-2.9.1.4">Are all your functional-tests or integration-tests ok?</li>
	<li id="sec-2.9.1.5">Does your app deploy and work as expected?</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-2.10" class="outline-3">
<h3 id="sec-2.10"><span class="section-number-3">2.10</span> Ok then, it's time to merge into master.</h3>
<div id="outline-container-2.10.1" class="outline-4">
<h4 id="sec-2.10.1"><span class="section-number-4">2.10.1</span> Return to master</h4>
<div id="text-2.10.1" class="outline-text-4">
<pre class="src src-sh">git checkout master</pre>
</div>
</div>
<div id="outline-container-2.10.2" class="outline-4">
<h4 id="sec-2.10.2"><span class="section-number-4">2.10.2</span> To avoid some later merging, check you're up-to-date with master</h4>
<div id="text-2.10.2" class="outline-text-4">
<pre class="src src-sh">git pull</pre>
If everything is already up-to-date, then pass to the next step.
Else, return to the previous step of merging master into your branch.

</div>
</div>
</div>
<div id="outline-container-2.11" class="outline-3">
<h3 id="sec-2.11"><span class="section-number-3">2.11</span> Merge the content of the "merging branch" into master</h3>
<div id="text-2.11" class="outline-text-3">
<pre class="src src-sh">git merge trigram-user/branch-name</pre>
At this point, it will only do a fast forward, that's just a moving
forward the master pointer to the last commit of your branch (because
your master branch did not advance between your checkout and the merge
command).

So the graph will look like this:
<p style="text-align: center;"><a href="http://adumont.fr/blog/wp-content/uploads/2011/08/2.master-branch-after-second-merge-branchA-into-master.png"><img class="size-full wp-image-374 aligncenter" title="2.master-branch-after-second-merge-branchA-into-master" src="http://adumont.fr/blog/wp-content/uploads/2011/08/2.master-branch-after-second-merge-branchA-into-master.png" alt="" width="593" height="323" /></a></p>

</div>
</div>
<div id="outline-container-2.12" class="outline-3">
<h3 id="sec-2.12"><span class="section-number-3">2.12</span> Send your modifications to master!</h3>
<div id="text-2.12" class="outline-text-3">
<pre class="src src-sh">git push</pre>
</div>
</div>
<div id="outline-container-2.13" class="outline-3">
<h3 id="sec-2.13"><span class="section-number-3">2.13</span> What if there are problems ?</h3>
<div id="text-2.13" class="outline-text-3">

It's not a real problem, it just means "somebody, somebody put something in your drink"!
It means really that someone pushed something before you did finish
your merge.

You must once again merge. But this time, it will be fast.
As your branch and the master are already merged, when you will pull
some code, git will automagically merge what it can from master and
leave you eventuals conflicts to resolve.
<pre class="src src-sh"><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">synchronize with everybody... (needs somebody to love!)
</span>git pull
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">fix eventual merge conflicts and check your tests
</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">add the merged files to the index (git add)
</span><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">and commit (git commit)
</span>git push</pre>
</div>
</div>
<div id="outline-container-2.14" class="outline-3">
<h3 id="sec-2.14"><span class="section-number-3">2.14</span> Now, you're done!!!</h3>
</div>
</div>
<div id="postamble">
<p class="author">Author: Antoine Romain Dumont
<a href="mailto:tony@linux-mi178">&lt;tony@linux-mi178&gt;</a></p>
<p class="date">Date: 2011-08-08 00:03:29 CEST</p>
<p class="creator">HTML generated by org-mode 6.33x in emacs 23</p>

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2011-08-08 00:33:37</wp:post_date>
		<wp:post_date_gmt>2011-08-07 22:33:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>possible-team-workflow-with-git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Fsznajderman]]></wp:comment_author>
			<wp:comment_author_email>fabszn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.fsznajderman.fr</wp:comment_author_url>
			<wp:comment_author_IP>82.238.174.17</wp:comment_author_IP>
			<wp:comment_date>2011-08-10 14:56:01</wp:comment_date>
			<wp:comment_date_gmt>2011-08-10 12:56:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,

Très intéressant!


Merci]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312982098.8902";s:7:"message";s:52:"admin a changé le statut du commentaire en approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1312980961.073";s:7:"message";s:48:"Akismet a re-vérifié et validé ce commentaire";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Video - Rich Hikey - Are we there yet?</title>
		<link>http://adumont.fr/blog/video-rich-hikey-are-we-there-yet/</link>
		<pubDate>Thu, 15 Dec 2011 23:20:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=378</guid>
		<description></description>
		<content:encoded><![CDATA[<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color: #add8e6; font-weight:normal }
  .target { }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  {margin-left:auto; margin-right:0px;  text-align:right;}
  .left   {margin-left:0px;  margin-right:auto; text-align:left;}
  .center {margin-left:auto; margin-right:auto; text-align:center;}
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top;  }
  th.right  { text-align:center;  }
  th.left   { text-align:center;   }
  th.center { text-align:center; }
  td.right  { text-align:right;  }
  td.left   { text-align:left;   }
  td.center { text-align:center; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  textarea { overflow-x: auto; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>

</head>
<body>

<div id="preamble">

</div>

<div id="content">

<p>Completely mind blowing video from Rich Hikey (<a href="http://clojure.org/">Clojure</a>'s creator) where he exposes the limitations of the overall most popular actual languages.
</p>
<p>
Here's the link. I do not enter much in the details here as Rich Hikey himself is so good at explaining.
</p>
<p>
It's not about <a href="http://clojure.org/">Clojure</a>, which is the mere implementation of what this video is all about.
</p>
<p>
Be open-minded, sit back and enjoy!
</p>
<p>
<a href="http://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey">Are we there yet?</a>
</p></div>
</body>
</html>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>378</wp:post_id>
		<wp:post_date>2011-12-16 00:20:08</wp:post_date>
		<wp:post_date_gmt>2011-12-15 23:20:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>video-rich-hikey-are-we-there-yet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Howto install stumpwm and little more</title>
		<link>http://adumont.fr/blog/howto-install-stumpwm-and-little-more/</link>
		<pubDate>Sat, 13 Aug 2011 11:44:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=380</guid>
		<description></description>
		<content:encoded><![CDATA[<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color: #add8e6; font-weight:normal }
  .target { }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>
<div id="content">
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Introduction </a>
<ul>
<li><a href="#sec-1.1">1.1 For just install, skip the intro </a></li>

<li><a href="#sec-1.2">1.2 What is stumpwm? </a></li>
<li><a href="#sec-1.3">1.3 Why? </a></li>
<li><a href="#sec-1.4">1.4 How i use it? </a></li>
<li><a href="#sec-1.5">1.5 Goal of the article </a></li>
<li><a href="#sec-1.6">1.6 Limits of the article </a>
<ul>
<li><a href="#sec-1.6.1">1.6.1 Targeted platform </a></li>
<li><a href="#sec-1.6.2">1.6.2 Targeted audience </a></li>
<li><a href="#sec-1.6.3">1.6.3 What is stumpwm in details. </a></li>

</ul></li>
</ul>
</li>
<li><a href="#sec-2">2 How to install </a>
<ul>
<li><a href="#sec-2.1">2.1 Install stumpwm from CLI </a></li>
<li><a href="#sec-2.2">2.2 Add a new entry to gdm </a></li>
<li><a href="#sec-2.3">2.3 `Logout from gdm </a></li>
<li><a href="#sec-2.4">2.4 Stumpwm starts </a></li>
</ul>
</li>
<li><a href="#sec-3">3 How to improve it </a>

<ul>
<li><a href="#sec-3.1">3.1 Some simple commands </a>
<ul>
<li><a href="#sec-3.1.1">3.1.1 Syntax </a></li>
<li><a href="#sec-3.1.2">3.1.2 C-t ? </a></li>
<li><a href="#sec-3.1.3">3.1.3 C-t c </a></li>
<li><a href="#sec-3.1.4">3.1.4 C-t e </a></li>
<li><a href="#sec-3.1.5">3.1.5 C-t t </a></li>
<li><a href="#sec-3.1.6">3.1.6 C-t s </a></li>
<li><a href="#sec-3.1.7">3.1.7 C-t Q </a></li>

<li><a href="#sec-3.1.8">3.1.8 C-t k </a></li>
<li><a href="#sec-3.1.9">3.1.9 C-t ! </a></li>
<li><a href="#sec-3.1.10">3.1.10 etc&hellip; </a></li>
</ul>
</li>
<li><a href="#sec-3.2">3.2 Stumpwm is really cool </a></li>
<li><a href="#sec-3.3">3.3 My setup </a>
<ul>
<li><a href="#sec-3.3.1">3.3.1 C-t f </a></li>
<li><a href="#sec-3.3.2">3.3.2 C-t b </a></li>

<li><a href="#sec-3.3.3">3.3.3 C-t i </a></li>
<li><a href="#sec-3.3.4">3.3.4 C-t j </a></li>
<li><a href="#sec-3.3.5">3.3.5 C-t x </a></li>
<li><a href="#sec-3.3.6">3.3.6 C-t d </a></li>
<li><a href="#sec-3.3.7">3.3.7 C-t o </a></li>
</ul>
</li>
<li><a href="#sec-3.4">3.4 My setup file corresponding </a></li>
</ul>
</li>
<li><a href="#sec-4">4 Last points </a></li>

</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Introduction </h2>
<div class="outline-text-2" id="text-1">


</div>

<div id="outline-container-1.1" class="outline-3">
<h3 id="sec-1.1"><span class="section-number-3">1.1</span> For just install, skip the intro </h3>

<div class="outline-text-3" id="text-1.1">

</div>

</div>

<div id="outline-container-1.2" class="outline-3">
<h3 id="sec-1.2"><span class="section-number-3">1.2</span> What is stumpwm? </h3>
<div class="outline-text-3" id="text-1.2">

<p>A tiling, keyboard driven X11 window manager.
Simply put, it permits you to choose what you do at any given time with key-bindings.
Another simple way to sum up: Less is more :d.
</p></div>

</div>

<div id="outline-container-1.3" class="outline-3">
<h3 id="sec-1.3"><span class="section-number-3">1.3</span> Why? </h3>
<div class="outline-text-3" id="text-1.3">

<p>I was lost with all the shining catch-eyes effects everywhere.
</p>
<p>
With a friend, <a href="https://twitter.com/#!/denislab">Denis Labaye</a>, we search for simpler.
We found stumpwm and it was mind blowing.
</p></div>

</div>

<div id="outline-container-1.4" class="outline-3">
<h3 id="sec-1.4"><span class="section-number-3">1.4</span> How i use it? </h3>
<div class="outline-text-3" id="text-1.4">

<p>Personally, i choose to work with only one window at a time and ask for the one i want when i want it.
It's my way of seeing it but stumpwm does not limit you in this way.
</p>
<p>
For me, stump empowers you with the choice of doing anything you want your way.
</p>
<p>
The small price to pay is learning key-bindings.
Small price because you can override them so the sky is really the limit.
</p>
<p>

It's the computer that adapts to you and not the other way around.
</p></div>

</div>

<div id="outline-container-1.5" class="outline-3">
<h3 id="sec-1.5"><span class="section-number-3">1.5</span> Goal of the article </h3>
<div class="outline-text-3" id="text-1.5">

<p>This howto explains how to install stumpwm and the little things you have to do to login with it in the gnome display manager.
</p></div>

</div>

<div id="outline-container-1.6" class="outline-3">
<h3 id="sec-1.6"><span class="section-number-3">1.6</span> Limits of the article </h3>
<div class="outline-text-3" id="text-1.6">


</div>

<div id="outline-container-1.6.1" class="outline-4">
<h4 id="sec-1.6.1"><span class="section-number-4">1.6.1</span> Targeted platform </h4>
<div class="outline-text-4" id="text-1.6.1">

<p>This article is clearly oriented for a debian based distribution using a gnome display manager as the login manager.
You may use some part with other distribution but i do not know how because i didn't have the problem to solve.
</p></div>

</div>

<div id="outline-container-1.6.2" class="outline-4">
<h4 id="sec-1.6.2"><span class="section-number-4">1.6.2</span> Targeted audience </h4>
<div class="outline-text-4" id="text-1.6.2">

<p>Geeky/Nerdy people who likes to make computer adapts to them and not the other way around.
</p></div>

</div>

<div id="outline-container-1.6.3" class="outline-4">
<h4 id="sec-1.6.3"><span class="section-number-4">1.6.3</span> What is stumpwm in details. </h4>
<div class="outline-text-4" id="text-1.6.3">

<p><a href="http://www.nongnu.org/stumpwm/">What is it?</a>
</p></div>
</div>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> How to install </h2>

<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2.1" class="outline-3">
<h3 id="sec-2.1"><span class="section-number-3">2.1</span> Install stumpwm from CLI </h3>
<div class="outline-text-3" id="text-2.1">




<pre class="example">sudo apt-get install stumpwm
</pre>



</div>

</div>

<div id="outline-container-2.2" class="outline-3">
<h3 id="sec-2.2"><span class="section-number-3">2.2</span> Add a new entry to gdm </h3>
<div class="outline-text-3" id="text-2.2">

<p>We need to add an entry menu to gdm for stumpwm so that we can log in with it.
</p>
<p>

For this we add the file /usr/share/xsessions/stumpwm.desktop
</p>


<pre class="example">sudo emacs -nw /usr/share/xsessions/stumpwm.desktop
</pre>




<p>
Content of the file:
</p>


<pre class="example">[Desktop Entry]
        Exec=stumpwm
        TryExec=stumpwm
        Name=stumpwm
        Comment=The Mouseless Window Manager!
</pre>




<p>
Here is a simple script to do that in one shot (feel free to patch):
</p>


<pre class="example">#!/bin/bash

# Install stumpwm
sudo apt-get install stumpwm

# Create the file
sudo touch /usr/share/xsessions/stumpwm.desktop

# Add the entry for gdm
(cat &lt;&lt;EOF
[Desktop Entry]
Exec=stumpwm
TryExec=stumpwm
Name=stumpwm
Comment=The Mouseless Window Manager!
EOF
)&gt; stumpwm.buffer

sudo cp stumpwm.buffer /usr/share/xsessions/stumpwm.desktop

rm stumpwm.buffer
</pre>



<p>
src: <a href="https://github.com/ardumont/slash-my-home-slash-bin/blob/master/deploy-stumpwm.sh">deploy-stumpwm.sh</a>
</p></div>

</div>

<div id="outline-container-2.3" class="outline-3">
<h3 id="sec-2.3"><span class="section-number-3">2.3</span> `Logout from gdm </h3>
<div class="outline-text-3" id="text-2.3">

<p>Gdm will reload.
At next login, when you'll choose your user to log in, you will be proposed a new entry "stumpwm" at the bottom of the screen (it may depend on your theme).
Choose it and log in.

</p></div>

</div>

<div id="outline-container-2.4" class="outline-3">
<h3 id="sec-2.4"><span class="section-number-3">2.4</span> Stumpwm starts </h3>
<div class="outline-text-3" id="text-2.4">

<p>At the top right corner, you'll only see a help message inviting you to type "CTRL-t ?" (Control and t pressed at the same time followed by a pressure on 't') for a presentation of all the simple commands you need to start.
</p></div>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> How to improve it </h2>
<div class="outline-text-2" id="text-3">


</div>

<div id="outline-container-3.1" class="outline-3">
<h3 id="sec-3.1"><span class="section-number-3">3.1</span> Some simple commands </h3>
<div class="outline-text-3" id="text-3.1">

</div>

<div id="outline-container-3.1.1" class="outline-4">
<h4 id="sec-3.1.1"><span class="section-number-4">3.1.1</span> Syntax </h4>
<div class="outline-text-4" id="text-3.1.1">

<ul>
<li id="sec-3.1.1.1">C for Control <br/>
</li>
<li id="sec-3.1.1.2">&lt;l&gt; for a letter <br/>

</li>
<li id="sec-3.1.1.3">combination C-t for Control + t pressed together <br/>
</li>
<li id="sec-3.1.1.4">C-t x for Control+t pressed together followed by a pressure on x. <br/>
</li>
</ul>
</div>

</div>

<div id="outline-container-3.1.2" class="outline-4">
<h4 id="sec-3.1.2"><span class="section-number-4">3.1.2</span> C-t ? </h4>

<div class="outline-text-4" id="text-3.1.2">

<p>List the basic commands
</p></div>

</div>

<div id="outline-container-3.1.3" class="outline-4">
<h4 id="sec-3.1.3"><span class="section-number-4">3.1.3</span> C-t c </h4>
<div class="outline-text-4" id="text-3.1.3">

<p>To launch a terminal instance (xterm or gnome-terminal)
</p></div>

</div>

<div id="outline-container-3.1.4" class="outline-4">
<h4 id="sec-3.1.4"><span class="section-number-4">3.1.4</span> C-t e </h4>
<div class="outline-text-4" id="text-3.1.4">

<p>To launch emacs or if it is already launched, call it to display before every other window.
</p></div>

</div>

<div id="outline-container-3.1.5" class="outline-4">
<h4 id="sec-3.1.5"><span class="section-number-4">3.1.5</span> C-t t </h4>

<div class="outline-text-4" id="text-3.1.5">

<p>To make the window behind the current one pass before and vice-versa
Inside the browser, you need to escape the t to add a tab (i gives a C-t t t).
</p></div>

</div>

<div id="outline-container-3.1.6" class="outline-4">
<h4 id="sec-3.1.6"><span class="section-number-4">3.1.6</span> C-t s </h4>
<div class="outline-text-4" id="text-3.1.6">

<p>Split the screen horizontally in two frames of equal size (emacs way).
You can move the window inside each frame the same way that when you have only one frame.
</p></div>

</div>

<div id="outline-container-3.1.7" class="outline-4">
<h4 id="sec-3.1.7"><span class="section-number-4">3.1.7</span> C-t Q </h4>
<div class="outline-text-4" id="text-3.1.7">

<p>Cancel all the split screen.
</p></div>

</div>

<div id="outline-container-3.1.8" class="outline-4">
<h4 id="sec-3.1.8"><span class="section-number-4">3.1.8</span> C-t k </h4>

<div class="outline-text-4" id="text-3.1.8">

<p>To kill a window not responding
</p></div>

</div>

<div id="outline-container-3.1.9" class="outline-4">
<h4 id="sec-3.1.9"><span class="section-number-4">3.1.9</span> C-t ! </h4>
<div class="outline-text-4" id="text-3.1.9">

<p>To launch a shell command not mapped yet on any binding.
</p></div>

</div>

<div id="outline-container-3.1.10" class="outline-4">
<h4 id="sec-3.1.10"><span class="section-number-4">3.1.10</span> etc&hellip; </h4>
<div class="outline-text-4" id="text-3.1.10">

<p>cf. C-t ?
</p></div>
</div>

</div>

<div id="outline-container-3.2" class="outline-3">

<h3 id="sec-3.2"><span class="section-number-3">3.2</span> Stumpwm is really cool </h3>
<div class="outline-text-3" id="text-3.2">

<p>You can override commands simply by putting a '.stumpwmrc' at the root of your home.
</p>
<p>
Granted, the file is in lisp.
But you can understand it anyway.
</p>
<p>
Plus you can search the web for solution to your problems.
You will find some geek who already has the answer.
</p></div>

</div>

<div id="outline-container-3.3" class="outline-3">
<h3 id="sec-3.3"><span class="section-number-3">3.3</span> My setup </h3>
<div class="outline-text-3" id="text-3.3">

<p>The run or raise means that it only turns with one instance which is sufficient.
</p>
</div>

<div id="outline-container-3.3.1" class="outline-4">
<h4 id="sec-3.3.1"><span class="section-number-4">3.3.1</span> C-t f </h4>
<div class="outline-text-4" id="text-3.3.1">

<p>Run or raise (only one instance at a time) firefox (f stands for firefox).
</p></div>

</div>

<div id="outline-container-3.3.2" class="outline-4">
<h4 id="sec-3.3.2"><span class="section-number-4">3.3.2</span> C-t b </h4>
<div class="outline-text-4" id="text-3.3.2">

<p>Run or raise chromium (b stands for browser).
</p></div>

</div>

<div id="outline-container-3.3.3" class="outline-4">
<h4 id="sec-3.3.3"><span class="section-number-4">3.3.3</span> C-t i </h4>
<div class="outline-text-4" id="text-3.3.3">

<p>Run or raise eclipse (i for ide)
</p></div>

</div>

<div id="outline-container-3.3.4" class="outline-4">
<h4 id="sec-3.3.4"><span class="section-number-4">3.3.4</span> C-t j </h4>

<div class="outline-text-4" id="text-3.3.4">

<p>Run or raise intellij idea (j for the j inside intellij)
</p></div>

</div>

<div id="outline-container-3.3.5" class="outline-4">
<h4 id="sec-3.3.5"><span class="section-number-4">3.3.5</span> C-t x </h4>
<div class="outline-text-4" id="text-3.3.5">

<p>Run or raise gnome-terminal (x stands for xterm or any x terminal)
</p></div>

</div>

<div id="outline-container-3.3.6" class="outline-4">
<h4 id="sec-3.3.6"><span class="section-number-4">3.3.6</span> C-t d </h4>
<div class="outline-text-4" id="text-3.3.6">

<p>Run or raise squirrel-sql - a sql client software (d stands for database)
</p></div>

</div>

<div id="outline-container-3.3.7" class="outline-4">
<h4 id="sec-3.3.7"><span class="section-number-4">3.3.7</span> C-t o </h4>

<div class="outline-text-4" id="text-3.3.7">

<p>To add a label (a letter) to each frame to move directly to this frame by typing the lett
</p></div>
</div>

</div>

<div id="outline-container-3.4" class="outline-3">
<h3 id="sec-3.4"><span class="section-number-3">3.4</span> My setup file corresponding </h3>
<div class="outline-text-3" id="text-3.4">

<p>~/.stumpwmrc
</p>


<pre class="example">;; Hey, Emacs! This is a -*- lisp -*- file!

(setf *frame-number-map* "abcdefghijklmnopqrst")

(setf *window-format* "%m%n%s nm=%50t cl=%c id=%i")

;;(run-commands "restore-from-file ~/.stumpwm.screendump")

(defcommand xterm-1 () ()
  "run an xterm instance or switch to it, if it is already running."
  (run-or-raise "gnome-terminal --title=xterm1 --hide-menubar -x byobu" '(:class "Gnome-terminal")))
(define-key *root-map* (kbd "x") "xterm-1")

;; Frame selection
(define-key *root-map* (kbd "o") "fselect")

;; Emacs command
(defcommand emacs () ()
  "Start Emacs or switch to it, if it is already running."
  (run-or-raise "emacs -rv" '(:class "Emacs")))

;; Firefox
(defprogram-shortcut :firefox :command "firefox" 
                     :props '(:class "Firefox")
                     :map *root-map* :key (kbd "f"))

;; Another way to declare a shortcut for launching google-chrome
(defprogram-shortcut :chromium :command "chromium-browser"
                     :props '(:class "Chromium")
                     :map *root-map* :key (kbd "b"))

;; Another way to declare a shortcut for launching google-chrome
(defprogram-shortcut :chrome :command "google-chrome"
                     :props '(:instance "google-chrome")
                     :map *root-map* :key (stumpwm:kbd "C-b"))

;; Conkeror - keyboard-driven navigator - C-t c
(defprogram-shortcut :conkeror :command "conkeror" 
                     :props '(:class "Conkeror")
                     :map *root-map* :key (kbd "c"))

;; IDE to the keybinding i (C-t i)
(defprogram-shortcut :eclipse :command "~/bin/ide-eclipse.sh"
                     :props '(:class "Eclipse")
                     :map *root-map* :key (kbd "i"))

;; Gnome-control-center (C-t ,)
(defprogram-shortcut :gnome-control-center :command "gnome-control-center" 
                     :props '(:class "Gnome-Control-Center")
                     :map *root-map* :key (kbd ","))

;; Totem (C-t .)
(defprogram-shortcut :video-player :command "totem"
                     :props '(:class "Totem")
                     :map *root-map* :key (kbd "."))

;; Intellij-idea (C-t j)
(defprogram-shortcut :intellij-idea :command "~/bin/idea.sh"
                     :props '(:class "java-lang-Thread")
                     :map *root-map* :key (kbd "j"))

;; File explorer nautilus (C-t n)
(defprogram-shortcut :nautilus :command "nautilus"
                     :props '(:instance "nautilus")
                     :map *root-map* :key (kbd "n"))

;; Transmission-gtk (C-t /)
(defprogram-shortcut :torrent :command "transmission-gtk"
                     :props '(:instance "transmission-gtk")
                     :map *root-map* :key (kbd "/"))

;; PDF reader evince (C-t C-e)
(defprogram-shortcut :evince :command "evince" 
                     :props '(:instance "evince")
                     :map *root-map* :key (stumpwm:kbd "C-e"))

;; Image reader eog (C-t C-o)
(defprogram-shortcut :eog :command "eog" 
                     :props '(:instance "eog")
                     :map *root-map* :key (stumpwm:kbd "C-o"))

;; Add a binding for gnome-screenshot (C-t C-s)
(defprogram-shortcut :screenshot :command "gnome-screenshot" 
                     :props '(:instance "gnome-screenshot")
                     :map *root-map* :key (stumpwm:kbd "C-s"))

;;Set the mouse policy to focus follows mouse;
(setf *mouse-focus-policy* :sloppy) ;; :click, :ignore, :sloppy

;; Launch commands
(run-shell-command "/usr/bin/gnome-settings-daemon")
(run-shell-command "gnome-terminal &")
(run-shell-command "/usr/bin/nm-applet &")
(run-shell-command "/usr/bin/bluetooth-applet &")
(run-shell-command "/usr/bin/pactl load-module module-x11-xsmp &")
(run-shell-command "gnome-power-manager")
(run-shell-command "gnome-panel &")
(run-shell-command "dropbox start")
(run-shell-command "nautilus --no-default-window")
</pre>



<p>
src: <a href="https://github.com/ardumont/stumpwm-config/blob/master/.stumpwmrc">https://github.com/ardumont/stumpwm-config/blob/master/.stumpwmrc</a>
</p>
</div>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Last points </h2>
<div class="outline-text-2" id="text-4">

<p>It's "emacs compatible". The prefix key is C-t whereas the prefix key of emacs is mostly C-x.
They work well together and they have a lot in common in their usability.
</p>
<p>
Here is a <a href="http://www.archive.org/details/TheStumpWMExperience">screencast</a> which presents rapidly how to use it.

</p></div>
</div>
<div id="postamble">
<p class="author"> Author: Antoine Romain Dumont
<a href="mailto:tony@dagobah">&lt;tony@dagobah&gt;</a>
</p>
<p class="date"> Date: 2011-08-14 16:37:41 CEST</p>
<p class="creator">HTML generated by org-mode 6.33x in emacs 23</p>
</div>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>380</wp:post_id>
		<wp:post_date>2011-08-13 13:44:33</wp:post_date>
		<wp:post_date_gmt>2011-08-13 11:44:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>howto-install-stumpwm-and-little-more</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Howto beamer with org-mode</title>
		<link>http://adumont.fr/blog/howto-beamer-with-org-mode/</link>
		<pubDate>Sun, 08 Apr 2012 08:32:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="content">
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
	<li><a href="#sec-1">1 Pre-requisites</a>
<ul>
	<li><a href="#sec-1-1">1.1 emacs</a></li>
	<li><a href="#sec-1-2">1.2 with org-mode</a></li>
</ul>
</li>
	<li><a href="#sec-2">2 Install the other pre-requisites</a></li>
	<li><a href="#sec-3">3 Init a org file</a>
<ul>
	<li><a href="#sec-3-1">3.1 Add some particular headers</a></li>
	<li><a href="#sec-3-2">3.2 Example of org-code and the output</a></li>
	<li><a href="#sec-3-3">3.3 There is automatically a front-page</a></li>
	<li><a href="#sec-3-4">3.4 And a outline page</a></li>
	<li><a href="#sec-3-5">3.5 Frame 1</a></li>
	<li><a href="#sec-3-6">3.6 Frame 2</a></li>
	<li><a href="#sec-3-7">3.7 A frame about clojure in another group</a></li>
	<li><a href="#sec-3-8">3.8 About emacs</a></li>
	<li><a href="#sec-3-9">3.9 Org</a>
<ul>
	<li><a href="#sec-3-9-1">3.9.1 <code>Wait!</code> What's with the syntax?</a></li>
</ul>
</li>
</ul>
</li>
	<li><a href="#sec-4">4 Launch the export</a></li>
	<li><a href="#sec-5">5 And that's it</a></li>
	<li><a href="#sec-6">6 Pros/Cons</a></li>
</ul>
</div>
</div>
<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Pre-requisites</h2>
<div id="text-1" class="outline-text-2"></div>
<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> emacs</h3>
<div id="text-1-1" class="outline-text-3"></div>
</div>
<div id="outline-container-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> with org-mode</h3>

update: <a href="http://adumont.fr/blog/how-to-install-emacs-24/">how to install emacs with some mode (including org-mode)</a>
<div id="text-1-2" class="outline-text-3"></div>
</div>
</div>
<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Install the other pre-requisites</h2>
<div id="text-2" class="outline-text-2">
<pre class="example">sudo aptitude install latex latex-beamer \
  texlive-latex-extra texlive-fonts-recommended ttf-marvosym</pre>
</div>
</div>
<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Init a org file</h2>
<div id="text-3" class="outline-text-2"></div>
<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Add some particular headers</h3>
<div id="text-3-1" class="outline-text-3">
<pre class="example">#+TITLE:     your-title
#+AUTHOR:    your-name
#+EMAIL:     your-email
#+DATE:      bootstrap-date
#+DESCRIPTION: some-description
#+KEYWORDS: some-keywords
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t &lt;:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME: 

#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]

#+BEAMER_FRAME_LEVEL: 2</pre>
</div>
</div>
<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Example of org-code and the output</h3>
<div id="text-3-2" class="outline-text-3"></div>
</div>
<div id="outline-container-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> There is automatically a front-page</h3>
<div id="text-3-3" class="outline-text-3">

The informations comes from the previous blocks.

<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/front-page.png" alt="frame-11 image" width="500" align="center" />

</div>
</div>
<div id="outline-container-3-4" class="outline-3">
<h3 id="sec-3-4"><span class="section-number-3">3.4</span> And a outline page</h3>
<div id="text-3-4" class="outline-text-3">

This will come from the content of the other frames below.

<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/outline.png" alt="frame-11 image" width="500" align="center" />

</div>
</div>
<div id="outline-container-3-5" class="outline-3">
<h3 id="sec-3-5"><span class="section-number-3">3.5</span> Frame 1</h3>
<div id="text-3-5" class="outline-text-3">
<pre class="example">* Some group of frames
** frame11
*** some stuff
*** to tell
*** in list elements</pre>
<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/frame-11.png" alt="frame-11 image" width="500" align="center" />

</div>
</div>
<div id="outline-container-3-6" class="outline-3">
<h3 id="sec-3-6"><span class="section-number-3">3.6</span> Frame 2</h3>
<div id="text-3-6" class="outline-text-3">
<pre class="example">** frame12
*** what do you know!
*** nice or what?</pre>
<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/frame-12.png" alt="frame-11 image" width="500" align="center" />

</div>
</div>
<div id="outline-container-3-7" class="outline-3">
<h3 id="sec-3-7"><span class="section-number-3">3.7</span> A frame about clojure in another group</h3>
<div id="text-3-7" class="outline-text-3">
<pre class="example">* Awesomeness!
** Clojure
*** code clojure
#+BEGIN_SRC clj
(fact (+ 1 1) =&gt; 2)
#+END_SRC
*** /Midje/, unit testing fwk is pretty awesome!</pre>
<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/frame-clojure.png" alt="frame-11 image" width="500" align="center" />

</div>
</div>
<div id="outline-container-3-8" class="outline-3">
<h3 id="sec-3-8"><span class="section-number-3">3.8</span> About emacs</h3>
<div id="text-3-8" class="outline-text-3">
<pre class="example">** Emacs
*** It's pretty cool too!</pre>
<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/frame-emacs.png" alt="frame-11 image" width="500" align="center" />

</div>
</div>
<div id="outline-container-3-9" class="outline-3">
<h3 id="sec-3-9"><span class="section-number-3">3.9</span> Org</h3>
<div id="text-3-9" class="outline-text-3">
<pre class="example">** Org-mode with beamer
*** rocks as we can present                                           :BMCOL:
: PROPERTIES:
:BEAMER_col: 0.5
:END:
*** in columns
*** and as always
: PROPERTIES:
:BEAMER_col: 0.5
:END:
[[./clj-pink.png]]
*** include images</pre>
<img title="First frame output example" src="http://adumont.fr/blog/wp-content/uploads/2012/04/frame-org.png" alt="frame-11 image" width="500" align="center" />

</div>
<div id="outline-container-3-9-1" class="outline-4">
<h4 id="sec-3-9-1"><span class="section-number-4">3.9.1</span> <code>Wait!</code> What's with the syntax?</h4>
<div id="text-3-9-1" class="outline-text-4">

It's a binding that does that for us.
Selection the item that you want in columns then <code>C-c C-b |</code>, this will ask you for the size of the column (ratio
between 0 and 1). Give, for example, 0.4 then hit enter. Do the same all the other columns.

</div>
</div>
</div>
</div>
<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Launch the export</h2>
<div id="text-4" class="outline-text-2">

C-c C-e will launch a buffer with the options for exporting in the format you want!
<table border="2" frame="hsides" rules="groups" cellspacing="0" cellpadding="6"><caption> </caption><colgroup> <col class="left" /> <col class="left" /> </colgroup>
<tbody>
<tr>
<td class="left">C-c C-e d</td>
<td class="left">compile in latex, then export to pdf and open it.</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> And that's it</h2>
<div id="text-5" class="outline-text-2"></div>
</div>

<div id="outline-container-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Pros/Cons</h2>
<div class="outline-text-2" id="text-6">

<p>Here's only what i think of, feel free to think otherwise.
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption></caption>
<colgroup><col class="left" /><col class="left" />
</colgroup>
<thead>
<tr><th scope="col" class="left">Pros</th><th scope="col" class="left">Cons</th></tr>
</thead>
<tbody>
<tr><td class="left">Simple</td><td class="left">Not editable in browser (as in google docs)</td></tr>
<tr><td class="left">Portability - Plain text</td><td class="left"></td></tr>
<tr><td class="left">Versionable (you choose your DVCS)</td><td class="left"></td></tr>
<tr><td class="left">Share easy</td><td class="left"></td></tr>
<tr><td class="left">Free as in free beer!</td><td class="left"></td></tr>
</tbody>
</table>


</div>

</div>

<div id="outline-container-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> Source</h2>
<div class="outline-text-2" id="text-7">

<p><a href="https://github.com/ardumont/my-org-files/blob/master/howto-beamer-with-org-mode.org">The example org source code</a>
<a href="https://github.com/ardumont/my-org-files/blob/master/org-beamer-examples/example0.pdf?raw=true">The example pdf</a>
<a href="http://orgmode.org/worg/org-tutorials/org-beamer/tutorial.html">Writing Beamer presentations in org-mode</a> 
</p></div>
</div>
</div>

<div id="postamble">
<p class="date">Date: 2012-04-08 10:28:40 CEST</p>
<p class="author">Author: Antoine R. Dumont</p>
<p class="creator">Org version 7.8.07 with Emacs version 24</p>
<a href="http://validator.w3.org/check?uri=referer">Validate XHTML 1.0</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2012-04-08 10:32:28</wp:post_date>
		<wp:post_date_gmt>2012-04-08 08:32:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>howto-beamer-with-org-mode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to install emacs 24</title>
		<link>http://adumont.fr/blog/how-to-install-emacs-24/</link>
		<pubDate>Sun, 08 Apr 2012 18:14:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=440</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This article will show how to install rapidly emacs 24 on a ubuntu 11.10.
</p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Pre-requisites:</a>
<ul>
<li><a href="#sec-1-1">1.1 ubuntu 11.10</a></li>
<li><a href="#sec-1-2">1.2 internet access</a></li>
</ul>
</li>
<li><a href="#sec-2">2 What will be installed?</a></li>
<li><a href="#sec-3">3 How to?</a>
<ul>
<li><a href="#sec-3-1">3.1 Install</a></li>
<li><a href="#sec-3-2">3.2 Start emacs</a></li>
</ul>
</li>
<li><a href="#sec-4">4 Some more details</a>
<ul>
<li><a href="#sec-4-1">4.1 deploy-emacs24.sh</a></li>
<li><a href="#sec-4-2">4.2 Content</a></li>
<li><a href="#sec-4-3">4.3 Details</a>
<ul>
<li><a href="#sec-4-3-1">4.3.1 Setup the script</a></li>
<li><a href="#sec-4-3-2">4.3.2 Modify <code>/etc/apt/sources.list</code> to add a new repository with emacs 24 packaged</a></li>
<li><a href="#sec-4-3-3">4.3.3 Then update the repositories</a></li>
<li><a href="#sec-4-3-4">4.3.4 Install emacs 24</a></li>
<li><a href="#sec-4-3-5">4.3.5 Check that the version is ok</a></li>
<li><a href="#sec-4-3-6">4.3.6 Then generate some setup file for emacs (cf. next script detail)</a></li>
</ul>
</li>
<li><a href="#sec-4-4">4.4 setup-emacs24.sh</a></li>
<li><a href="#sec-4-5">4.5 Content:</a></li>
<li><a href="#sec-4-6">4.6 Details</a>
<ul>
<li><a href="#sec-4-6-1">4.6.1 Setup the script</a></li>
<li><a href="#sec-4-6-2">4.6.2 Generate the file ~/init.el</a></li>
<li><a href="#sec-4-6-3">4.6.3 Setup the emacs package repositories</a></li>
<li><a href="#sec-4-6-4">4.6.4 emacs packages:</a></li>
<li><a href="#sec-4-6-5">4.6.5 Install the packages at emacs boot time if the packages are not present (so only once)</a></li>
<li><a href="#sec-4-6-6">4.6.6 Some global setup</a></li>
<li><a href="#sec-4-6-7">4.6.7 Add some setup for the clojure-mode</a></li>
<li><a href="#sec-4-6-8">4.6.8 Some basic setup for org-mode</a></li>
<li><a href="#sec-4-6-9">4.6.9 Add a mode that permits to see the line numbered on the emacs left side</a></li>
</ul></li>
</ul>
</li>
<li><a href="#sec-5">5 Sources:</a>
<ul>
<li><a href="#sec-5-1">5.1 setup-emacs24.sh</a></li>
<li><a href="#sec-5-2">5.2 deploy-emacs24.sh</a></li>
</ul>
</li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Pre-requisites:</h2>
<div class="outline-text-2" id="text-1">


</div>

<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> ubuntu 11.10</h3>
<div class="outline-text-3" id="text-1-1">

</div>

</div>

<div id="outline-container-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> internet access</h3>
<div class="outline-text-3" id="text-1-2">

</div>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> What will be installed?</h2>
<div class="outline-text-2" id="text-2">

<p><a href="http://www.gnu.org/software/emacs/">emacs</a> 24 with <a href="https://github.com/technomancy/emacs-starter-kit">emacs-starter-kit</a> and some interesting modes
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> How to?</h2>
<div class="outline-text-2" id="text-3">


</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Install</h3>
<div class="outline-text-3" id="text-3-1">

<p>Here are the scripts to download:
</p>


<pre class="example">wget https://github.com/ardumont/sh/blob/master/deploy-emacs24.sh 
wget https://github.com/ardumont/sh/blob/master/setup-emacs24.sh
chmod +x deploy-emacs24.sh &amp;&amp; deploy-emacs24.sh
</pre>

</div>

</div>

<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Start emacs</h3>
<div class="outline-text-3" id="text-3-2">




<pre class="example">emacs
</pre>

<p>
This will automatically search and install the asked packages (cf. next chapter for some more details).
</p></div>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Some more details</h2>
<div class="outline-text-2" id="text-4">


</div>

<div id="outline-container-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> deploy-emacs24.sh</h3>
<div class="outline-text-3" id="text-4-1">

</div>

</div>

<div id="outline-container-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> Content</h3>
<div class="outline-text-3" id="text-4-2">




<pre class="example">#!/bin/bash -x

WDIR=$(dirname $(readlink -f $0))
source /etc/lsb-release

##################### Prepare

# Update the repositories with the one for emacs 24
sudo tee -a /etc/apt/sources.list &lt;&lt;EOF

# For Emacs 24
deb http://ppa.launchpad.net/cassou/emacs/ubuntu $DISTRIB_RELEASE main
deb-src http://ppa.launchpad.net/cassou/emacs/ubuntu $DISTRIB_RELEASE main
EOF

# Update since the sources have been modified
sudo aptitude update

##################### Install emacs

# Install emacs
sudo aptitude install -y emacs-snapshot

emacs --version

#################### Setup emacs

$WDIR/setup-emacs24.sh
</pre>


</div>

</div>

<div id="outline-container-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> Details</h3>
<div class="outline-text-3" id="text-4-3">


</div>

<div id="outline-container-4-3-1" class="outline-4">
<h4 id="sec-4-3-1"><span class="section-number-4">4.3.1</span> Setup the script</h4>
<div class="outline-text-4" id="text-4-3-1">




<pre class="example">#!/bin/bash -x

WDIR=$(dirname $(readlink -f $0))
source /etc/lsb-release
</pre>


</div>

</div>

<div id="outline-container-4-3-2" class="outline-4">
<h4 id="sec-4-3-2"><span class="section-number-4">4.3.2</span> Modify <code>/etc/apt/sources.list</code> to add a new repository with emacs 24 packaged</h4>
<div class="outline-text-4" id="text-4-3-2">




<pre class="example">##################### Prepare

# Update the repositories with the one for emacs 24
sudo tee -a /etc/apt/sources.list &lt;&lt;EOF

# For Emacs 24
deb http://ppa.launchpad.net/cassou/emacs/ubuntu $DISTRIB_RELEASE main
deb-src http://ppa.launchpad.net/cassou/emacs/ubuntu $DISTRIB_RELEASE main
EOF
</pre>


</div>

</div>

<div id="outline-container-4-3-3" class="outline-4">
<h4 id="sec-4-3-3"><span class="section-number-4">4.3.3</span> Then update the repositories</h4>
<div class="outline-text-4" id="text-4-3-3">




<pre class="example"># Update since the sources have been modified
sudo aptitude update
</pre>


</div>

</div>

<div id="outline-container-4-3-4" class="outline-4">
<h4 id="sec-4-3-4"><span class="section-number-4">4.3.4</span> Install emacs 24</h4>
<div class="outline-text-4" id="text-4-3-4">




<pre class="example">##################### Install emacs

# Install emacs
sudo aptitude install -y emacs-snapshot
</pre>


</div>

</div>

<div id="outline-container-4-3-5" class="outline-4">
<h4 id="sec-4-3-5"><span class="section-number-4">4.3.5</span> Check that the version is ok</h4>
<div class="outline-text-4" id="text-4-3-5">




<pre class="example">emacs --version
</pre>


</div>

</div>

<div id="outline-container-4-3-6" class="outline-4">
<h4 id="sec-4-3-6"><span class="section-number-4">4.3.6</span> Then generate some setup file for emacs (cf. next script detail)</h4>
<div class="outline-text-4" id="text-4-3-6">




<pre class="example">$WDIR/setup-emacs24.sh
</pre>


</div>
</div>

</div>

<div id="outline-container-4-4" class="outline-3">
<h3 id="sec-4-4"><span class="section-number-3">4.4</span> setup-emacs24.sh</h3>
<div class="outline-text-3" id="text-4-4">

<p>This script is dedicated to the generation of the <code>~/init.el</code> which is one of the setup file loaded by emacs at startup
time.
</p></div>

</div>

<div id="outline-container-4-5" class="outline-3">
<h3 id="sec-4-5"><span class="section-number-3">4.5</span> Content:</h3>
<div class="outline-text-3" id="text-4-5">





<pre class="example">#!/bin/bash

##################### Setup emacs

EM_DIR=$HOME/.emacs.d

# Delete the old directory
[ -d $EM_DIR ] &amp;&amp; rm -rf $EM_DIR/*
mkdir -p $EM_DIR

tee "$EM_DIR"/init.el &lt;&lt;EOF
;; =============================================================================
;; Install needed packages if not present
;; =============================================================================

; some tricks from the emacs-starter-kit v2
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/") t)
(package-initialize)

(when (not package-archive-contents)
  (package-refresh-contents))

;; starter-kit-eshell starter-kit-js starter-kit-ruby)
;; Add in your own as you wish:
(defvar my-packages '(starter-kit starter-kit-bindings clojure-mode midje-mode multi-term switch-window slime ediff org flymake-shell graphviz-dot-mode)
  "A list of packages to ensure are installed at launch.")

(dolist (p my-packages)
  (when (not (package-installed-p p))
    (package-install p)))

;; =============================================================================
;; Display line number in the left margin
;; =============================================================================

;; put binding for line-mode in t
(global-set-key (kbd "C-c C-j") 'term-line-mode)

;; linum mode activated by default
(global-linum-mode 1)

;; justification
(setq-default fill-column 120)

;; =============================================================================
;; Autocomplete setup
;; =============================================================================

'(add-to-list 'ac-dictionary-directories "~/.emacs.d/elpa/auto-complete-1.4.20110207/dict")
'(require 'auto-complete-config)
'(ac-config-default)

;; =============================================================================
;; Clojure config
;; =============================================================================

(require 'clojure-mode)
(add-to-list 'auto-mode-alist '("\\.clj$" . clojure-mode))
(require 'midje-mode)
(add-hook 'clojure-mode-hook 'midje-mode)
(add-hook 'clojure-mode-hook (lambda () (paredit-mode +1)))

; add color into the repl via clojure-jack-in
(add-hook 'slime-repl-mode-hook
         (defun clojure-mode-slime-font-lock ()
           (let (font-lock-mode)
             (clojure-mode-font-lock-setup))))

;; paredit mode in the repl
(add-hook 'slime-repl-mode-hook (lambda () (paredit-mode +1)))

;; =============================================================================
;; Clojurescript config
;; =============================================================================

(add-to-list 'auto-mode-alist '("\.cljs$" . clojure-mode))

;; =============================================================================
;; Org config
;; =============================================================================

;; display column number

(column-number-mode)

;; org dir

(setq org-directory "~/org")

;; indentation

(setq org-startup-indented t)

;; log work done

(setq org-log-done 'time)

;; notes directory

(setq org-default-notes-file (concat org-directory "/notes.org"))

;; notes binding

(define-key global-map "\C-cc" 'org-capture)

;; tags

(setq org-tag-alist '(("howTo" . ?h)
                      ("tech" . ?t)
                      ("emacs" . ?e)
                      ("orgMode" . ?o)
                      ("faq" . ?f)
                      ("firefox")
                      ("conkeror")
                      ("linux")))

EOF

# Install linum.el file (have the lines numbered on the side)
wget http://web.student.tuwien.ac.at/~e0225855/linum/linum.el --output-document $EM_DIR/linum.el
</pre>


</div>

</div>

<div id="outline-container-4-6" class="outline-3">
<h3 id="sec-4-6"><span class="section-number-3">4.6</span> Details</h3>
<div class="outline-text-3" id="text-4-6">


</div>

<div id="outline-container-4-6-1" class="outline-4">
<h4 id="sec-4-6-1"><span class="section-number-4">4.6.1</span> Setup the script</h4>
<div class="outline-text-4" id="text-4-6-1">




<pre class="example">#!/bin/bash

##################### Setup emacs

EM_DIR=$HOME/.emacs.d

# Delete the old directory
[ -d $EM_DIR ] &amp;&amp; rm -rf $EM_DIR/*
mkdir -p $EM_DIR
</pre>


</div>

</div>

<div id="outline-container-4-6-2" class="outline-4">
<h4 id="sec-4-6-2"><span class="section-number-4">4.6.2</span> Generate the file ~/init.el</h4>
<div class="outline-text-4" id="text-4-6-2">




<pre class="example">tee "$EM_DIR"/init.el &lt;&lt;EOF
</pre>


</div>

</div>

<div id="outline-container-4-6-3" class="outline-4">
<h4 id="sec-4-6-3"><span class="section-number-4">4.6.3</span> Setup the emacs package repositories</h4>
<div class="outline-text-4" id="text-4-6-3">




<pre class="example">;; =============================================================================
;; Install needed packages if not present
;; =============================================================================

; some tricks from the emacs-starter-kit v2
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/") t)
(package-initialize)

(when (not package-archive-contents)
  (package-refresh-contents))
</pre>


</div>

</div>

<div id="outline-container-4-6-4" class="outline-4">
<h4 id="sec-4-6-4"><span class="section-number-4">4.6.4</span> emacs packages:</h4>
<div class="outline-text-4" id="text-4-6-4">

<ul>
<li><a href="https://github.com/technomancy/emacs-starter-kit">starter-kit*</a>: a emacs set of default setup 
</li>
<li><a href="https://github.com/technomancy/clojure-mode">clojure-mode</a>: Provides Emacs font-lock, indentation, and navigation for the Clojure language.
</li>
<li><a href="https://github.com/dnaumov/midje-mode">midje-mode</a>: Midje-mode is an Emacs minor mode for Midje - test framework for Clojure
</li>
<li><a href="http://emacswiki.org/emacs/MultiTerm">multi-term</a>: MultiTerm is an improve term.el mode, for managing multiple terminal buffers in Emacs.
</li>
<li><a href="http://common-lisp.net/project/slime/">slime</a>: The Superior Lisp Interaction Mode for Emacs
</li>
<li><a href="http://orgmode.org/">org</a>: an Emacs Mode for Notes, Planning, and Authoring
</li>
<li><a href="http://users.skynet.be/ppareit/projects/graphviz-dot-mode/graphviz-dot-mode.html">graphviz-dot-mode</a>: An emacs mode for the dot language
</li>
<li>etc&hellip;
</li>
</ul>




<pre class="example">;; starter-kit-eshell starter-kit-js starter-kit-ruby)
;; Add in your own as you wish:
(defvar my-packages '(starter-kit starter-kit-bindings clojure-mode midje-mode multi-term switch-window slime ediff org flymake-shell graphviz-dot-mode)
  "A list of packages to ensure are installed at launch.")
</pre>


</div>

</div>

<div id="outline-container-4-6-5" class="outline-4">
<h4 id="sec-4-6-5"><span class="section-number-4">4.6.5</span> Install the packages at emacs boot time if the packages are not present (so only once)</h4>
<div class="outline-text-4" id="text-4-6-5">




<pre class="example">(dolist (p my-packages)
  (when (not (package-installed-p p))
</pre>


</div>

</div>

<div id="outline-container-4-6-6" class="outline-4">
<h4 id="sec-4-6-6"><span class="section-number-4">4.6.6</span> Some global setup</h4>
<div class="outline-text-4" id="text-4-6-6">

<ul>
<li>linum-mode -&gt; number on the side automatically triggered for any file
</li>
<li>justification with a line at 120 characters
</li>
</ul>




<pre class="example">;; =============================================================================
;; Display line number in the left margin
;; =============================================================================

;; put binding for line-mode in t
(global-set-key (kbd "C-c C-j") 'term-line-mode)

;; linum mode activated by default
(global-linum-mode 1)

;; justification
(setq-default fill-column 120)
</pre>


</div>

</div>

<div id="outline-container-4-6-7" class="outline-4">
<h4 id="sec-4-6-7"><span class="section-number-4">4.6.7</span> Add some setup for the clojure-mode</h4>
<div class="outline-text-4" id="text-4-6-7">

<ul>
<li>Add the clojure-mode for any file ending with the right clojure (clj) or clojurescript (cljs) extension.
</li>
<li>Add the midje and paredit modes when a clojure-mode is triggered.
</li>
<li>Add some color on the slime-repl for clojure-mode
</li>
</ul>




<pre class="example">;; =============================================================================
;; Clojure config
;; =============================================================================

(require 'clojure-mode)
(add-to-list 'auto-mode-alist '("\\.clj$" . clojure-mode))
(require 'midje-mode)
(add-hook 'clojure-mode-hook 'midje-mode)
(add-hook 'clojure-mode-hook (lambda () (paredit-mode +1)))

; add color into the repl via clojure-jack-in
(add-hook 'slime-repl-mode-hook
         (defun clojure-mode-slime-font-lock ()
           (let (font-lock-mode)
             (clojure-mode-font-lock-setup))))

;; paredit mode in the repl
(add-hook 'slime-repl-mode-hook (lambda () (paredit-mode +1)))

;; =============================================================================
;; Clojurescript config
;; =============================================================================

(add-to-list 'auto-mode-alist '("\.cljs$" . clojure-mode))
</pre>


</div>

</div>

<div id="outline-container-4-6-8" class="outline-4">
<h4 id="sec-4-6-8"><span class="section-number-4">4.6.8</span> Some basic setup for org-mode</h4>
<div class="outline-text-4" id="text-4-6-8">




<pre class="example">#!/bin/bash

##################### Setup emacs

EM_DIR=$HOME/.emacs.d

# Delete the old directory
[ -d $EM_DIR ] &amp;&amp; rm -rf $EM_DIR/*
mkdir -p $EM_DIR

tee "$EM_DIR"/init.el &lt;&lt;EOF
;; =============================================================================
;; Install needed packages if not present
;; =============================================================================

; some tricks from the emacs-starter-kit v2
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/") t)
(package-initialize)

(when (not package-archive-contents)
  (package-refresh-contents))

;; starter-kit-eshell starter-kit-js starter-kit-ruby)
;; Add in your own as you wish:
(defvar my-packages '(starter-kit starter-kit-bindings clojure-mode midje-mode multi-term switch-window slime ediff org flymake-shell graphviz-dot-mode)
  "A list of packages to ensure are installed at launch.")

(dolist (p my-packages)
  (when (not (package-installed-p p))
    (package-install p)))

;; =============================================================================
;; Display line number in the left margin
;; =============================================================================

;; put binding for line-mode in t
(global-set-key (kbd "C-c C-j") 'term-line-mode)

;; linum mode activated by default
(global-linum-mode 1)

;; justification
(setq-default fill-column 120)

;; =============================================================================
;; Autocomplete setup
;; =============================================================================

'(add-to-list 'ac-dictionary-directories "~/.emacs.d/elpa/auto-complete-1.4.20110207/dict")
'(require 'auto-complete-config)
'(ac-config-default)

;; =============================================================================
;; Clojure config
;; =============================================================================

(require 'clojure-mode)
(add-to-list 'auto-mode-alist '("\\.clj$" . clojure-mode))
(require 'midje-mode)
(add-hook 'clojure-mode-hook 'midje-mode)
(add-hook 'clojure-mode-hook (lambda () (paredit-mode +1)))

; add color into the repl via clojure-jack-in
(add-hook 'slime-repl-mode-hook
         (defun clojure-mode-slime-font-lock ()
           (let (font-lock-mode)
             (clojure-mode-font-lock-setup))))

;; paredit mode in the repl
(add-hook 'slime-repl-mode-hook (lambda () (paredit-mode +1)))

;; =============================================================================
;; Clojurescript config
;; =============================================================================

(add-to-list 'auto-mode-alist '("\.cljs$" . clojure-mode))

;; =============================================================================
;; Org config
;; =============================================================================

;; display column number

(column-number-mode)

;; org dir

(setq org-directory "~/org")

;; indentation

(setq org-startup-indented t)

;; log work done

(setq org-log-done 'time)

;; notes directory

(setq org-default-notes-file (concat org-directory "/notes.org"))

;; notes binding

(define-key global-map "\C-cc" 'org-capture)

;; tags

(setq org-tag-alist '(("howTo" . ?h)
                      ("tech" . ?t)
                      ("emacs" . ?e)
                      ("orgMode" . ?o)
                      ("faq" . ?f)
                      ("firefox")
                      ("conkeror")
                      ("linux")))

EOF

# Install linum.el file (have the lines numbered on the side)
wget http://web.student.tuwien.ac.at/~e0225855/linum/linum.el --output-document $EM_DIR/linum.el
</pre>


</div>

</div>

<div id="outline-container-4-6-9" class="outline-4">
<h4 id="sec-4-6-9"><span class="section-number-4">4.6.9</span> Add a mode that permits to see the line numbered on the emacs left side</h4>
<div class="outline-text-4" id="text-4-6-9">




<pre class="example"><span class="linenr">1:  </span># Install linum.el file (have the lines numbered on the side)
<span class="linenr">2:  </span>wget http://web.student.tuwien.ac.at/~e0225855/linum/linum.el --output-document $EM_DIR/linum.el
</pre>


</div>
</div>
</div>

</div>

<div id="outline-container-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Sources:</h2>
<div class="outline-text-2" id="text-5">


</div>

<div id="outline-container-5-1" class="outline-3">
<h3 id="sec-5-1"><span class="section-number-3">5.1</span> <a href="https://github.com/ardumont/sh/blob/master/setup-emacs24.sh">setup-emacs24.sh</a></h3>
<div class="outline-text-3" id="text-5-1">

</div>

</div>

<div id="outline-container-5-2" class="outline-3">
<h3 id="sec-5-2"><span class="section-number-3">5.2</span> <a href="https://github.com/ardumont/sh/blob/master/deploy-emacs24.sh">deploy-emacs24.sh</a></h3>
<div class="outline-text-3" id="text-5-2">

</div>
</div>
</div>
</div>

<div id="postamble">
<p class="date">Date: 2012-04-08 18:46:32 CEST</p>
<p class="author">Author: Antoine R. Dumont</p>
<p class="creator">Org version 7.8.07 with Emacs version 24</p>
<a href="http://validator.w3.org/check?uri=referer">Validate XHTML 1.0</a>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date>2012-04-08 20:14:10</wp:post_date>
		<wp:post_date_gmt>2012-04-08 18:14:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-install-emacs-24</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to install the clojure development environment</title>
		<link>http://adumont.fr/blog/how-to-install-the-clojure-development-environment/</link>
		<pubDate>Tue, 24 Apr 2012 11:29:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=449</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this article, we will see how to rapidly install the clojure tools in a debian-like distribution (ubuntu 11.10 for example).
</p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Pre-requisites</a>
<ul>
<li><a href="#sec-1-1">1.1 emacs</a></li>
</ul>
</li>
<li><a href="#sec-2">2 Installation</a>
<ul>
<li><a href="#sec-2-1">2.1 clojure</a>
<ul>
<li><a href="#sec-2-1-1">2.1.1 install</a></li>
<li><a href="#sec-2-1-2">2.1.2 check</a></li>
</ul>
</li>
<li><a href="#sec-2-2">2.2 leiningen 1</a>
<ul>
<li><a href="#sec-2-2-1">2.2.1 install</a></li>
<li><a href="#sec-2-2-2">2.2.2 check</a></li>
</ul>
</li>
<li><a href="#sec-2-3">2.3 lein-midje</a>
<ul>
<li><a href="#sec-2-3-1">2.3.1 install</a></li>
<li><a href="#sec-2-3-2">2.3.2 check</a></li>
</ul>
</li>
<li><a href="#sec-2-4">2.4 jdk installed (either sun or openjdk)</a>
<ul>
<li><a href="#sec-2-4-1">2.4.1 install</a></li>
<li><a href="#sec-2-4-2">2.4.2 check</a></li>
</ul>
</li>
<li><a href="#sec-2-5">2.5 git (optional)</a>
<ul>
<li><a href="#sec-2-5-1">2.5.1 install</a></li>
<li><a href="#sec-2-5-2">2.5.2 check</a></li>
</ul></li>
</ul>
</li>
<li><a href="#sec-3">3 Conclusion</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Pre-requisites</h2>
<div class="outline-text-2" id="text-1">


</div>

<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> <a href="http://www.gnu.org/software/emacs/">emacs</a></h3>
<div class="outline-text-3" id="text-1-1">

<p>See this <a href="http://adumont.fr/blog/how-to-install-emacs-24/">previous post for installing it</a>
</p></div>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Installation</h2>
<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> <a href="http://clojure.org/">clojure</a></h3>
<div class="outline-text-3" id="text-2-1">


</div>

<div id="outline-container-2-1-1" class="outline-4">
<h4 id="sec-2-1-1"><span class="section-number-4">2.1.1</span> install</h4>
<div class="outline-text-4" id="text-2-1-1">




<pre class="example">sudo aptitude install clojure
</pre>


<p>
<b>Note</b> 
<code>apt-get</code> if you do not have <code>aptitude</code> installed.
</p>
</div>

</div>

<div id="outline-container-2-1-2" class="outline-4">
<h4 id="sec-2-1-2"><span class="section-number-4">2.1.2</span> check</h4>
<div class="outline-text-4" id="text-2-1-2">

<p>Type clojure in a shell
</p>


<pre class="example">clojure
user=&gt; 
</pre>


<p>
You will have a <a href="http://en.wikipedia.org/wiki/Read–eval–print_loop">repl</a> in which you could ask some functions to eval.
</p>


<pre class="example">user=&gt; (+ 1 1)
2
</pre>

</div>
</div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> <a href="https://github.com/technomancy/leiningen">leiningen</a> 1</h3>
<div class="outline-text-3" id="text-2-2">


</div>

<div id="outline-container-2-2-1" class="outline-4">
<h4 id="sec-2-2-1"><span class="section-number-4">2.2.1</span> install</h4>
<div class="outline-text-4" id="text-2-2-1">

<ul>
<li id="sec-2-2-1-1">The easy way<br/>



<pre class="example">sudo aptitude install leiningen
</pre>

<p>
If you do not have leiningen in the packages, then you must pass by the <b>not so hard</b> way.
</p></li>
</ul>
<ul>
<li id="sec-2-2-1-2">The not so hard way<br/>
<ul>
<li id="sec-2-2-1-2-1">Download the script<br/>



<pre class="example">wget https://raw.github.com/technomancy/leiningen/stable/bin/lein
</pre>

</li>
</ul>
<ul>
<li id="sec-2-2-1-2-2">Place it on your $PATH<br/>
I also like to use ~/bin.



<pre class="example">export PATH=~/bin/:$PATH
</pre>


<p>
I usually add this in the <code>~/.bashrc</code> file.
</p></li>
</ul>
<ul>
<li id="sec-2-2-1-2-3">Make it executable<br/>



<pre class="example">chmod 755 ~/bin/lein
</pre>

</li>
</ul>
<ul>
<li id="sec-2-2-1-2-4">Ask the version<br/>
This will download all it needs.



<pre class="example">lein version
</pre>

<p>
and finally gives you an output similar to this:
</p>


<pre class="example">tony@dagobah(0.11,) 09:56:26 ~/org (master) $ lein version
Leiningen 1.7.1 on Java 1.6.0_26 Java HotSpot(TM) Client VM
</pre>

</li>
</ul>
</li>
</ul>
</div>

</div>

<div id="outline-container-2-2-2" class="outline-4">
<h4 id="sec-2-2-2"><span class="section-number-4">2.2.2</span> check</h4>
<div class="outline-text-4" id="text-2-2-2">




<pre class="example">tony@dagobah(0.16,) 13:00:07 ~ $ lein repl
REPL started; server listening on localhost port 14778
user=&gt; 
</pre>


<p>
For example:
</p>


<pre class="example">user=&gt; (+ 1 1)
2
</pre>

</div>
</div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> <a href="https://github.com/marick/Midje/wiki/Lein-midje">lein-midje</a></h3>
<div class="outline-text-3" id="text-2-3">


</div>

<div id="outline-container-2-3-1" class="outline-4">
<h4 id="sec-2-3-1"><span class="section-number-4">2.3.1</span> install</h4>
<div class="outline-text-4" id="text-2-3-1">

<p>This is a leiningen plugin to launch unit tests for the unit test framework <a href="https://github.com/marick/Midje">midje</a>.
</p>


<pre class="example">lein plugin install lein-midje 1.0.9
</pre>


<p>
<b>Note</b>
The version [lein-midje "2.0.0-SNAPSHOT"] is leiningen 2 compatible so do not use this one.
</p></div>

</div>

<div id="outline-container-2-3-2" class="outline-4">
<h4 id="sec-2-3-2"><span class="section-number-4">2.3.2</span> check</h4>
<div class="outline-text-4" id="text-2-3-2">




<pre class="example">tony@dagobah(0.09,) 13:05:45 ~ $ lein midje --version
Couldn't find project.clj, which is needed for midje
</pre>

<p>
OK
</p></div>
</div>

</div>

<div id="outline-container-2-4" class="outline-3">
<h3 id="sec-2-4"><span class="section-number-3">2.4</span> jdk installed (either sun or openjdk)</h3>
<div class="outline-text-3" id="text-2-4">


</div>

<div id="outline-container-2-4-1" class="outline-4">
<h4 id="sec-2-4-1"><span class="section-number-4">2.4.1</span> instal</h4>
<div class="outline-text-4" id="text-2-4-1">

<ul>
<li id="sec-2-4-1-1">openjdk<br/>



<pre class="example">sudo aptitude install openjdk
</pre>

</li>
</ul>
<ul>
<li id="sec-2-4-1-2">sun jdk on ubuntu 11.04<br/>
<a href="https://github.com/ardumont/sh/blob/master/deploy-java-sun-11.04.sh">https://github.com/ardumont/sh/blob/master/deploy-java-sun-11.04.sh</a>
</li>
</ul>
<ul>
<li id="sec-2-4-1-3">sun jdk on ubuntu 11.10<br/>
<a href="https://github.com/ardumont/sh/blob/master/deploy-java-sun-11.10.sh">https://github.com/ardumont/sh/blob/master/deploy-java-sun-11.10.sh</a>
</li>
</ul>
</div>

</div>

<div id="outline-container-2-4-2" class="outline-4">
<h4 id="sec-2-4-2"><span class="section-number-4">2.4.2</span> check</h4>
<div class="outline-text-4" id="text-2-4-2">




<pre class="example">tony@dagobah(0.32,) 13:04:16 ~ $ java -version
java version "1.6.0_26"
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)
Java HotSpot(TM) Server VM (build 20.1-b02, mixed mode)

</pre>

</div>
</div>

</div>

<div id="outline-container-2-5" class="outline-3">
<h3 id="sec-2-5"><span class="section-number-3">2.5</span> git (optional)</h3>
<div class="outline-text-3" id="text-2-5">


</div>

<div id="outline-container-2-5-1" class="outline-4">
<h4 id="sec-2-5-1"><span class="section-number-4">2.5.1</span> install</h4>
<div class="outline-text-4" id="text-2-5-1">




<pre class="example">sudo aptitude install git
</pre>

</div>

</div>

<div id="outline-container-2-5-2" class="outline-4">
<h4 id="sec-2-5-2"><span class="section-number-4">2.5.2</span> check</h4>
<div class="outline-text-4" id="text-2-5-2">




<pre class="example">tony@dagobah(0.10,) 13:05:41 (129) ~ $ git version
git version 1.7.5.4
</pre>

</div>
</div>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Conclusion</h2>
<div class="outline-text-2" id="text-3">

<p>We have focused on the needed steps to install the clojure environment.
You now have all the tools to develop with clojure.
</p>
<p>
In a near future, i intend to make some other blog posts to focus on:
</p><ul>
<li>how to bootstrap a new clojure project using leiningen
</li>
<li>how to solve a simple problem in clojure and show how these tools work together
</li>
<li>continued integration with <a href="http://about.travis-ci.org/docs/user/getting-started/">travis-ci</a>
</li>
<li><a href="http://www.heroku.com/">heroku</a> for the deploying part
</li>
<li><a href="https://github.com/fogus/marginalia">marginalia</a> for the documentation generation and the <a href="#github">github</a> integration.
</li>
</ul>


</div>
</div>
</div>

<div id="postamble">
<p class="date">Date: 2012-04-24 13:22:39 CEST</p>
<p class="author">Author: Antoine R. Dumont</p>
<p class="creator">Org version 7.8.08 with Emacs version 24</p>
<a href="http://validator.w3.org/check?uri=referer">Validate XHTML 1.0</a>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>449</wp:post_id>
		<wp:post_date>2012-04-24 13:29:35</wp:post_date>
		<wp:post_date_gmt>2012-04-24 11:29:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-install-the-clojure-development-environment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="clojure"><![CDATA[clojure]]></category>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to boostrap a clojure project</title>
		<link>http://adumont.fr/blog/how-to-boostrap-a-clojure-project/</link>
		<pubDate>Tue, 24 Apr 2012 12:11:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=454</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this article, we will see how to rapidly startup a <a href="http://clojure.org/">clojure</a> project using <a href="https://github.com/technomancy/leiningen">leiningen</a>.
</p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Pre-requisites</a>
<ul>
<li><a href="#sec-1-1">1.1 emacs</a></li>
<li><a href="#sec-1-2">1.2 clojure environment</a></li>
<li><a href="#sec-1-3">1.3 a network to fetch dependencies</a></li>
</ul>
</li>
<li><a href="#sec-2">2 Create a new clojure project</a></li>
<li><a href="#sec-3">3 Launch a repl</a>
<ul>
<li><a href="#sec-3-1">3.1 clojure-jack-in</a></li>
<li><a href="#sec-3-2">3.2 Basic check</a></li>
</ul>
</li>
<li><a href="#sec-4">4 Setup dependencies</a>
<ul>
<li><a href="#sec-4-1">4.1 project.clj</a></li>
<li><a href="#sec-4-2">4.2 Add dependencies</a>
<ul>
<li><a href="#sec-4-2-1">4.2.1 dev-dependencies</a></li>
<li><a href="#sec-4-2-2">4.2.2 or dependencies</a></li>
</ul>
</li>
<li><a href="#sec-4-3">4.3 Update the dependencies</a></li>
</ul>
</li>
<li><a href="#sec-5">5 Setup environment</a>
<ul>
<li><a href="#sec-5-1">5.1 Rapid check</a></li>
<li><a href="#sec-5-2">5.2 Add a midje fact</a></li>
<li><a href="#sec-5-3">5.3 Another way of checking midje facts</a>
<ul>
<li><a href="#sec-5-3-1">5.3.1 Compilation</a></li>
<li><a href="#sec-5-3-2">5.3.2 Check one fact</a></li>
<li><a href="#sec-5-3-3">5.3.3 Ultimate way</a></li>
</ul></li>
</ul>
</li>
<li><a href="#sec-6">6 Conclusion</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Pre-requisites</h2>
<div class="outline-text-2" id="text-1">


</div>

<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> <a href="http://www.gnu.org/software/emacs/">emacs</a></h3>
<div class="outline-text-3" id="text-1-1">

<p>See this <a href="http://adumont.fr/blog/how-to-install-emacs-24/">previous post for installing it</a>
</p></div>

</div>

<div id="outline-container-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> <a href="http://clojure.org/">clojure</a> environment</h3>
<div class="outline-text-3" id="text-1-2">

<p>See this <a href="http://adumont.fr/blog/how-to-install-the-clojure-development-environment/">previous post</a>
</p></div>

</div>

<div id="outline-container-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> a network to fetch dependencies</h3>
<div class="outline-text-3" id="text-1-3">

</div>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Create a new clojure project</h2>
<div class="outline-text-2" id="text-2">




<pre class="example">lein new hello
</pre>


<p>
This will create an arborescence like this:
</p>


<pre class="example">/home/tony/repositories/test/hello/
├── .gitignore
├── project.clj
├── README
├── src
│   └── hello
│       └── core.clj
└── test
    └── hello
        └── test
            └── core.clj

5 directories, 4 files
</pre>


<p>
I usually initialize a git project to hold my modifications.
</p>



<pre class="example">git init &amp;&amp; git add . &amp;&amp; git commit -m "Bootstrap clojure project"
</pre>


</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Launch a <a href="http://en.wikipedia.org/wiki/Read–eval–print_loop">repl</a></h2>
<div class="outline-text-2" id="text-3">


</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> <a href="https://github.com/technomancy/swank-clojure">clojure-jack-in</a></h3>
<div class="outline-text-3" id="text-3-1">

<p>As we <a href="http://adumont.fr/blog/how-to-install-emacs-24/">already installed emacs</a>, we can launch the repl by doing simply:
</p><ul>
<li><code>M-x cd</code> to change the current folder emacs runs into the <code>hello folder</code> (the one containing the <code>project.clj</code> file)
</li>
<li><code>M-x clojure-jack-in</code> to launch the repl.
</li>
</ul>


<p>
A new <a href="http://www.cs.utah.edu/dept/old/texinfo/emacs18/emacs_20.html">buffer</a> must have launched itself (may take some time the first time).
</p>


<pre class="example">; SLIME 20100404
user&gt;
</pre>

</div>

</div>

<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Basic check</h3>
<div class="outline-text-3" id="text-3-2">


<p>
Launch some basic operations and hit enter to check that the repl reacts:
</p>


<pre class="example">; SLIME 20100404
user&gt; (+ 1 1)
2
user&gt; (reduce + [ 1 2 3 4])
10
user&gt; 
</pre>


</div>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Setup dependencies</h2>
<div class="outline-text-2" id="text-4">


</div>

<div id="outline-container-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> project.clj</h3>
<div class="outline-text-3" id="text-4-1">

<p>The <code>project.clj</code> file is the <a href="https://github.com/technomancy/leiningen">leiningen</a> file holding the metadata of your project.
This is this file that you want to edit to add dependencies or dev-dependencies.
</p>
<p>
By default, here is the content:
</p>


<pre class="example">(defproject hello "1.0.0-SNAPSHOT"
  :description "FIXME: write description"
  :dependencies [[org.clojure/clojure "1.3.0"]])
</pre>


<p>
This describes that the project :
</p><ul>
<li>if packaged, the version will be 1.0.0-SNAPSHOT
</li>
<li>a simple description to update
</li>
<li>holds only one runtime dependencies, clojure in its version 1.3.0 (currently, the 1.4.0
</li>
</ul>

<p>has been released).
</p>
<p>
<b>Note</b>
For those from the java world, you can see it as the equivalent of the maven pom.xml with less verbosity!
</p></div>

</div>

<div id="outline-container-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> Add dependencies</h3>
<div class="outline-text-3" id="text-4-2">

<p>As i'm a <a href="http://en.wikipedia.org/wiki/Test-driven_development">tdd</a> fanboy, i like to add <a href="https://github.com/marick/Midje">midje</a>, an excellent unit test framework for clojure.
</p>

</div>

<div id="outline-container-4-2-1" class="outline-4">
<h4 id="sec-4-2-1"><span class="section-number-4">4.2.1</span> dev-dependencies</h4>
<div class="outline-text-4" id="text-4-2-1">

<p>To add some dev-dependencies, add the :dev-dependencies in this file, like this:
</p>


<pre class="example">(defproject hello "1.0.0-SNAPSHOT"
  :description "A simple hello world from clojure"
  :dependencies [[org.clojure/clojure "1.3.0"]]
  :dev-dependencies [[midje "1.3.1"]])
</pre>


</div>

</div>

<div id="outline-container-4-2-2" class="outline-4">
<h4 id="sec-4-2-2"><span class="section-number-4">4.2.2</span> or dependencies</h4>
<div class="outline-text-4" id="text-4-2-2">


<p>
As midje is a unit test framework, this must be a dev-dependencies (to avoid having it in the jar at runtime).
</p>
<p>
But, considering that clojure is extremely expressive, i'd rather make midje a runtime dependencies so that my facts
(unit test in midje) stays with the code they tests.
</p>
<p>
Thus, my facts are another level of documentation (it's quite clear when using <a href="https://github.com/fogus/marginalia">marginalia</a> to generate documentations from the code).
</p>
<p>
If you're like me, then you can change the previous block into this
</p>


<pre class="example">(defproject hello "1.0.0-SNAPSHOT"
  :description "A simple hello world from clojure"
  :dependencies [[org.clojure/clojure "1.3.0"]
                 [midje "1.3.1"]])
</pre>


<p>
<b>Note</b>
Another plus side, we do not have any problems concerning the visibility of the functions.
A function private is still testable (you do have trouble otherwise).
</p></div>
</div>

</div>

<div id="outline-container-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> Update the dependencies</h3>
<div class="outline-text-3" id="text-4-3">

<p>Now that we modify this file, we need to update the jars locally.
To do this, we will tell leiningen "go fetch my dependencies" with the <code>deps</code> commands.
</p>


<pre class="example">lein deps
</pre>


<p>
This will use the <a href="http://clojars.org/">clojars</a> and/or <a href="http://maven.apache.org/">maven</a> artifacts around the world to satisfy my demands.
</p>
</div>
</div>

</div>

<div id="outline-container-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Setup environment</h2>
<div class="outline-text-2" id="text-5">


</div>

<div id="outline-container-5-1" class="outline-3">
<h3 id="sec-5-1"><span class="section-number-3">5.1</span> Rapid check</h3>
<div class="outline-text-3" id="text-5-1">

<p>Launch the unit tests, <code>lein midje</code>
</p>


<pre class="example">tony@dagobah(0.08,) 09:31:10 ~/repositories/test/hello $ lein midje
&gt;&gt;&gt; Output from clojure.test tests:

FAIL in (replace-me) (core.clj:6)
No tests have been written.
expected: false
  actual: false

&gt;&gt;&gt; clojure.test summary:
Ran 1 tests containing 1 assertions.
1 failures, 0 errors.
&gt;&gt;&gt; Midje summary:
All claimed facts (0) have been confirmed. 
</pre>


<p>
This is a success.
</p>
<p>
It's normal that the test fail as there is a default false claim in the file <code>test/hello/test/core.clj</code>
</p>


<pre class="example">(ns hello.test.core
  (:use [hello.core])
  (:use [clojure.test]))

(deftest replace-me ;; FIXME: write
  (is false "No tests have been written."))
</pre>


<p>
You can remove this file as we will write:
</p><ul>
<li>our tests in the source file directly.
</li>
<li>using midje (and not clojure.test, default one)
</li>
</ul>


</div>

</div>

<div id="outline-container-5-2" class="outline-3">
<h3 id="sec-5-2"><span class="section-number-3">5.2</span> Add a midje fact</h3>
<div class="outline-text-3" id="text-5-2">

<p>Open the file <code>src/hello/core.clj</code>.
This contains only the <code>ns</code> declaration without any dependencies yet.
</p>


<pre class="example">(ns hello.core)
</pre>


<p>
First of all, we want to solve this problem in tdd.
So a first step, is to add a framework that permits that, i chose to use midje.
</p>
<p>
For this, we add this namespace like this
</p>


<pre class="example">(ns hello.core
    (:use [midje.sweet]))
</pre>


<p>
To check that all is ok, we can add a false fact the midje way.
</p>


<pre class="example">(fact (+ 1 1) =&gt; 3)
</pre>


<p>
<b>Note</b>: We can read this fact like this: "This is a fact that (+ 1 1) gives 3"
We all know it's false but bare with me.
</p>
<p>
In the terminal, launch <code>lein midje</code> again
</p>


<pre class="example">tony@dagobah(0.14,) 10:21:37 ~/repositories/test/hello (master) $ lein midje

FAIL at (core.clj:4)
    Expected: 3
      Actual: 2
FAILURE: 1 fact was not confirmed. 
</pre>


<p>
Ok, the test is failing but it's ok, that's what we want.
</p>
<p>
Now, the ultimate test, check the output when the test is ok.
</p>
<p>
For this, change the fact with the right result.
</p>


<pre class="example">(fact (+ 1 1) =&gt; 2)
</pre>

<p>
<b>Note</b>
This is a fact that (+ 1 1) gives 2.
</p>
<p>
Now launch <code>lein midje</code>
</p>


<pre class="example">tony@dagobah(0.53,) 10:21:58 (1) ~/repositories/test/hello (master) $ lein midje
All claimed facts (1) have been confirmed. 
</pre>


</div>

</div>

<div id="outline-container-5-3" class="outline-3">
<h3 id="sec-5-3"><span class="section-number-3">5.3</span> Another way of checking midje facts</h3>
<div class="outline-text-3" id="text-5-3">


</div>

<div id="outline-container-5-3-1" class="outline-4">
<h4 id="sec-5-3-1"><span class="section-number-4">5.3.1</span> Compilation</h4>
<div class="outline-text-4" id="text-5-3-1">

<p>When in the <code>core.clj</code> buffer, <code>C-c C-k</code> launches the compilation of all the clj file.
The output of this compilation appears in the repl.
</p>
<p>
When in error:
</p>


<pre class="example">; SLIME 20100404
[31mFAIL[0m at (core.clj:4)
    Expected: 3
      Actual: 2

user&gt; 
</pre>


<p>
When there is no error, nothing appears (except if there are prints in your code).
</p></div>

</div>

<div id="outline-container-5-3-2" class="outline-4">
<h4 id="sec-5-3-2"><span class="section-number-4">5.3.2</span> Check one fact</h4>
<div class="outline-text-4" id="text-5-3-2">

<p>When in the <code>core.clj</code> buffer, =C-c ,= launch the evaluation of the fact.
If the fact is true, there will be a quotation just before the fact.
</p>


<pre class="example">;.;. Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius -- and a lot of
;.;. courage -- to move in the opposite direction. -- Schumacher
(fact (+ 1 1) =&gt; 2)
</pre>


<p>
Else, there will be a summary of the error
</p>


<pre class="example">;.;. [31mFAIL[0m at (NO_SOURCE_FILE:1)
;.;.     Expected: 3
;.;.       Actual: 2
(fact (+ 1 1) =&gt; 3)
</pre>


<p>
<b>Note</b>
No need to worry about the strange character <code>[31m</code>, it's a color in a shell environment.
This is not correctly interpreted in a clojure buffer.
</p>
</div>

</div>

<div id="outline-container-5-3-3" class="outline-4">
<h4 id="sec-5-3-3"><span class="section-number-4">5.3.3</span> Ultimate way</h4>
<div class="outline-text-4" id="text-5-3-3">

<p>There is an ultimate way for testing with midje that i prefer above all <code>lein midje --lazytest</code> 
</p>
<p>
At the moment, it seems there is a problem with my platform around the leiningen 1.7.1 version (by downgrading it to leiningen 1.6.2, this works) that i was not yet able to solve.
</p>
<p>
This mode permits to relaunch the facts after a modification on the file system has been done.
This is quite handy to avoid the manual compilation.
The output is the same as previously described.
</p>
<p>
When this work on my machine, I use it by opening a terminal buffer (<code>M-x multi-term</code>) in emacs in which i launch the
<code>lein midje --lazytest</code> command. 
</p>
<ul>
<li id="sec-5-3-3-1">Try lazytest<br/>
For those with leiningen 1.6.2 who wants to try it.

<ul>
<li>Change the project.clj file to this
</li>
</ul>




<pre class="example">(defproject hello "1.0.0-SNAPSHOT"
  :description "A simple project"
  :dependencies [[org.clojure/clojure "1.3.0"]
                 [midje "1.3.1"]]
  :dev-dependencies [[com.intelie/lazytest "1.0.0-SNAPSHOT" :exclusions [swank-clojure]]])
</pre>

<ul>
<li>Relaunch <code>lein deps</code>.
</li>
<li>Restart <code>emacs</code> and <code>clojure-jack-in</code>
</li>
<li>Open a new buffer with <code>multi-term</code> or <code>shell</code> or <code>eshell</code> or whatever (<code>M-x the-mode-you-chose</code>).
</li>
<li>Then launch the command in the terminal as said previously
</li>
</ul>

</li>
</ul>
</div>
</div>
</div>

</div>

<div id="outline-container-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Conclusion</h2>
<div class="outline-text-2" id="text-6">

<p>You're now able to setup a project in clojure and knows a little about midje.
</p>
<p>
In a near future, i intend to make some other blog posts to focus on:
</p><ul>
<li>a simple problem resolution using top down tdd in clojure with midje
</li>
<li>continued integration with <a href="http://about.travis-ci.org/docs/user/getting-started/">travis-ci</a>
</li>
<li><a href="http://www.heroku.com/">heroku</a> for the deploying part
</li>
<li><a href="https://github.com/fogus/marginalia">marginalia</a> for the documentation generation and the <a href="#github">github</a> integration.
</li>
</ul>


</div>
</div>
</div>

<div id="postamble">
<p class="date">Date: 2012-04-24 14:08:29 CEST</p>
<p class="author">Author: Antoine R. Dumont</p>
<p class="creator">Org version 7.8.08 with Emacs version 24</p>
<a href="http://validator.w3.org/check?uri=referer">Validate XHTML 1.0</a>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2012-04-24 14:11:09</wp:post_date>
		<wp:post_date_gmt>2012-04-24 12:11:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-boostrap-a-clojure-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="clojure"><![CDATA[clojure]]></category>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>One way to solve a problem in clojure</title>
		<link>http://adumont.fr/blog/one-way-to-solve-a-problem-in-clojure/</link>
		<pubDate>Tue, 24 Apr 2012 12:58:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://adumont.fr/blog/?p=461</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this article, we will see how to use the different tools at our disposal to solve a problem.
</p>
<p>
<b>Notes</b>
</p><ul>
<li>Clojure is in no way limited to simple problems.
</li>
<li>The problem is <b>not</b> an <b>impressive one</b> as i want to focus on how to start a clojure project and how to use the tools.
</li>
</ul>



<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Pre-requisites</a>
<ul>
<li><a href="#sec-1-1">1.1 emacs</a></li>
<li><a href="#sec-1-2">1.2 clojure environment setup</a></li>
</ul>
</li>
<li><a href="#sec-2">2 Problem</a></li>
<li><a href="#sec-3">3 To the solution in Top Down TDD</a>
<ul>
<li><a href="#sec-3-1">3.1 First fact</a></li>
<li><a href="#sec-3-2">3.2 Compilation problem</a></li>
<li><a href="#sec-3-3">3.3 Compilation ok, fact KO</a></li>
<li><a href="#sec-3-4">3.4 Top Down Test Driven Development</a></li>
<li><a href="#sec-3-5">3.5 First implementation, compilation ok, fact ok</a></li>
<li><a href="#sec-3-6">3.6 <code>mx</code> facts</a></li>
<li><a href="#sec-3-7">3.7 Final - Integration test</a></li>
<li><a href="#sec-3-8">3.8 Code</a></li>
</ul>
</li>
<li><a href="#sec-4">4 Conclusion</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Pre-requisites</h2>
<div class="outline-text-2" id="text-1">


</div>

<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> <a href="http://adumont.fr/blog/how-to-install-emacs-24/">emacs</a></h3>
<div class="outline-text-3" id="text-1-1">

</div>

</div>

<div id="outline-container-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> <a href="http://adumont.fr/blog/how-to-boostrap-a-clojure-project/">clojure environment setup</a></h3>
<div class="outline-text-3" id="text-1-2">

</div>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Problem</h2>
<div class="outline-text-2" id="text-2">

<p>Now to prove that we have all that we need, we will solve a little problem.
</p>
<p>
<code>Write a function which takes a variable number of parameters and returns the maximum value.</code>
</p>
<p>
<b>Note</b> There is already a <code>max</code> function but we will forbid ourselves to use it.
</p>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> To the solution in Top Down TDD</h2>
<div class="outline-text-2" id="text-3">


</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> First fact</h3>
<div class="outline-text-3" id="text-3-1">

<p>Let's design some facts to help us progress.
</p>


<pre class="example">(fact 
  (our-max 1 8 30) =&gt; 30)
</pre>


</div>

</div>

<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Compilation problem</h3>
<div class="outline-text-3" id="text-3-2">

<p>Compilation : <code>C-c C-k</code>
</p>
<p>
Here we will have a compilation problem as there is no function <code>our-max</code>
</p>
<p>
So add this before the fact:
</p>


<pre class="example">(defn our-max "Given an infinite list of int parameters, compute the max of all the input integers."
  [&amp; l])

(fact (our-max 1 8 30) =&gt; 30)
</pre>


<p>
<b>Explanations</b>
The declaration of the function:
</p><ul>
<li>is declared with <code>defn</code>
</li>
<li>followed by the name of the function we want, here <code>our-max</code>
</li>
<li>then a doc-string to explicit what the function does
</li>
<li>the vector of arguments (in square-brackets as all the vectors). The <code>&amp; l</code> means that the arguments is an indefinite number of parameters, that's exactly what we want!
</li>
<li>and at last the body of the function (the implementation), here we did nothing.
</li>
</ul>


</div>

</div>

<div id="outline-container-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> Compilation ok, fact KO</h3>
<div class="outline-text-3" id="text-3-3">

<p>Launch the compilation <code>C-c C-k</code>.
Now, the compilation is ok, but we got fail facts.
That's ok because, with no implementation, we got a nil result.
</p>



<pre class="example">;.;. [31mFAIL[0m at (NO_SOURCE_FILE:1)
;.;.     Expected: 30
;.;.       Actual: nil
(fact (our-max 1 8 30) =&gt; 30)
</pre>


<p>
We expected 30 but got nil.
</p>
<p>
<b>Note</b>
In clojure, a function always return something and in case of no implementation, we return nil.
</p>
</div>

</div>

<div id="outline-container-3-4" class="outline-3">
<h3 id="sec-3-4"><span class="section-number-3">3.4</span> Top Down Test Driven Development</h3>
<div class="outline-text-3" id="text-3-4">

<p>We will try a Top Down TDD approach, i.e. we will make the function work but based on mock implementations of sub functions.
And as soon as we have the top level done, we can develop the sub function we depend on.
</p>
<p>
So here, we can change the fact to depend on a <code>mx</code> function (really a <code>max</code> function) which computes the max between 2 integers.
</p>


<pre class="example">(unfinished mx)

(defn our-max "Our max implementation function"
  [&amp; l])

(fact
  (our-max 1 8 30) =&gt; 30
  (provided
    (mx 1 8 ) =&gt; 1
    (mx 1 30) =&gt; 30)
</pre>


<p>
<b>explanations</b>
</p>
<ul>
<li>The <code>(unfinished list)</code> is here to tell midje, it's ok that you do not have the implementation yet. Do not fail the compilation for such a small detail.

</li>
<li>We mock the call of a new function <code>mx</code> with the parameters <code>1 8</code> and with the <code>1 30</code>.

</li>
<li>I voluntarily tell midje that the max between 1 and 8 is 1 for everybody to see that this is a mock implementation and
  in no way the reality.
</li>
</ul>


<p>
By compiling this fact, Midje enriches its message for us:
</p>


<pre class="example">;.;. [31mFAIL[0m at (NO_SOURCE_FILE:1)
;.;. You claimed the following was needed, but it was never used:
;.;.     (mx 1 8 )
;.;. 
;.;. [31mFAIL[0m at (NO_SOURCE_FILE:1)
;.;. You claimed the following was needed, but it was never used:
;.;.     (mx 1 30)
;.;. 
;.;. [31mFAIL[0m at (NO_SOURCE_FILE:1)
;.;.     Expected: 30
(fact
  (our-max 1 8 30) =&gt; 30
  (provided
    (mx 1 8 ) =&gt; 1
    (mx 1 30) =&gt; 30))
</pre>


<p>
Basically, midje warns us about the absence of the <code>mx</code> call in our implementation.
Indeed, we did not yet complete our implementation.
</p>
<p>
<b>Note</b>
</p><ul>
<li>To add a not implemented function into the <code>unfinished list</code>, hit <code>C-c u</code>
</li>
</ul>


</div>

</div>

<div id="outline-container-3-5" class="outline-3">
<h3 id="sec-3-5"><span class="section-number-3">3.5</span> First implementation, compilation ok, fact ok</h3>
<div class="outline-text-3" id="text-3-5">


<p>
The way i see it is this, we want to <code>reduce</code> a list of elements to the max of its elements.
The function that does such a transformation is the <code>reduce</code> function.
</p>
<p>
In the repl, type <code>reduce</code> then <code>C-c C-d d</code>, this will open a browser with the documentation on this function.
</p>


<pre class="example">clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
</pre>


<p>
This indeed is exactly what we want with <code>mx</code> as our <code>f</code> function and <code>l</code> our <code>coll</code>.
So here comes our implementation:
</p>


<pre class="example">(defn our-max "Our max implementation function"
  [&amp; l]
  (reduce mx l))

;.;. Happiness comes when you believe that you have done something truly meaningful. -- Yan
(fact
  (our-max 1 8 30) =&gt; 30
  (provided
    (mx 1 8 ) =&gt; 1
    (mx 1 30) =&gt; 30)
</pre>


<p>
And this work!
</p>
<p>
<b>Explanations</b>
We want to compute the max in a list of integers, so we use <code>reduce</code> to loop over the elements and compute the max.
The detailed step:
</p><ul>
<li><code>(mx 1 8 )</code> will give 1 according to the contract
</li>
</ul>




<pre class="example">(provided (mx 1 8 ) =&gt; 1)
</pre>

<ul>
<li><code>(mx 1 30)</code> will give 30 according to the contract
</li>
</ul>




<pre class="example">(provided (mx 1 30) =&gt; 30)
</pre>

<ul>
<li>and that's it. The result is then <code>30</code> which indeed is what we expect.
</li>
</ul>


<p>
So the fact is ok!
</p>
<p>
Next step: implement the <code>mx</code> function.
</p>
</div>

</div>

<div id="outline-container-3-6" class="outline-3">
<h3 id="sec-3-6"><span class="section-number-3">3.6</span> <code>mx</code> facts</h3>
<div class="outline-text-3" id="text-3-6">

<p>It's just a max function, so here goes the facts:
</p>


<pre class="example">(unfinished )

(defn mx "max"
  [x y]
  (if (&lt; x y) y x))

;.;. Without work, all life goes rotten. -- Camus
(fact "mx"
  (mx 1 2) =&gt; 2
  (mx 2 100) =&gt; 100)
</pre>


<p>
<b>Note</b>
The arity of the function (number of arguments) needed was 2 as we described in the first fact (our-max).
</p></div>

</div>

<div id="outline-container-3-7" class="outline-3">
<h3 id="sec-3-7"><span class="section-number-3">3.7</span> Final - Integration test</h3>
<div class="outline-text-3" id="text-3-7">

<p>Now that we think we have everything, let's check it with a real fact (that is without mock).
</p>
<p>
For example, add this fact at the bottom of the file.
</p>


<pre class="example">;.;. Out of clutter find simplicity; from discord find harmony; in the middle of difficulty lies opportunity. -- Einstein
(fact
  (our-max 9786 4 7 87 9999 876 342 9876 999) =&gt; 9999)
</pre>


<p>
Ok!
</p>
</div>

</div>

<div id="outline-container-3-8" class="outline-3">
<h3 id="sec-3-8"><span class="section-number-3">3.8</span> Code</h3>
<div class="outline-text-3" id="text-3-8">

<p>Here is the final <code>core.clj</code> file.
</p>


<pre class="example">(ns hello.core
  (:use [midje.sweet]))

;; Write a function which takes a variable number of parameters and returns the maximum value.

(unfinished )

(defn mx "max"
  [x y]
  (if (&lt; x y) y x))

(fact "mx"
  (mx 1 2) =&gt; 2
  (mx 2 100) =&gt; 100)

(defn our-max "Our max implementation function"
  [&amp; l]
  (reduce mx l))

(fact "mock our-max"
  (our-max 1 8 30) =&gt; 30
  (provided
    (mx 1 8 ) =&gt; 1
    (mx 1 30) =&gt; 30))

;.;. Out of clutter find simplicity; from discord find harmony; in the middle of difficulty lies opportunity. -- Einstein
(fact "ITest our-max"
  (our-max 9786 4 7 87 9999 876 342 9876 999) =&gt; 9999)
</pre>


</div>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Conclusion</h2>
<div class="outline-text-2" id="text-4">

<p>With these posts and this one,
</p><ul>
<li><a href="http://adumont.fr/blog/how-to-install-emacs-24/">http://adumont.fr/blog/how-to-install-emacs-24/</a>
</li>
<li><a href="http://adumont.fr/blog/how-to-install-the-clojure-development-environment/">http://adumont.fr/blog/how-to-install-the-clojure-development-environment/</a>
</li>
<li><a href="http://adumont.fr/blog/how-to-boostrap-a-clojure-project/">http://adumont.fr/blog/how-to-boostrap-a-clojure-project/</a>
</li>
</ul>


<p>
You now have all you need to develop with clojure.
</p>
<p>
For documentation about the different tool i used, i recommend reading the README on each github project which are really well explained.
</p>
<p>
Also, if you have some time, there is a good <a href="http://vimeo.com/19404746">video</a> from <a href="http://www.exampler.com/about.html">Brian Marick himself</a> (midje's creator)
using top down tdd to solve a more complex problem than this one.
</p>
<p>
In a near future, i intend to make some other blog posts to focus on:
</p><ul>
<li>continued integration with <a href="http://about.travis-ci.org/docs/user/getting-started/">travis-ci</a>
</li>
<li><a href="http://www.heroku.com/">heroku</a> for the deploying part
</li>
<li><a href="https://github.com/fogus/marginalia">marginalia</a> for the documentation generation and the <a href="#github">github</a> integration.
</li>
</ul>

</div>
</div>
</div>

<div id="postamble">
<p class="date">Date: 2012-04-24 14:55:59 CEST</p>
<p class="author">Author: Antoine R. Dumont</p>
<p class="creator">Org version 7.8.08 with Emacs version 24</p>
<a href="http://validator.w3.org/check?uri=referer">Validate XHTML 1.0</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2012-04-24 14:58:49</wp:post_date>
		<wp:post_date_gmt>2012-04-24 12:58:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>one-way-to-solve-a-problem-in-clojure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="clojure"><![CDATA[clojure]]></category>
		<category domain="category" nicename="geek"><![CDATA[geek]]></category>
		<category domain="category" nicename="informatique"><![CDATA[info]]></category>
		<category domain="category" nicename="programmation-developpement"><![CDATA[prog]]></category>
		<category domain="category" nicename="tuto"><![CDATA[tuto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
