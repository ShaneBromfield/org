#+BLOG: tony-blog
#+POSTID: 517
#+DATE: [2012-12-22 Sat 14:20]
#+TITLE: Setup the asus zenbook
#+AUTHOR: Antoine R. Dumont
#+OPTIONS:
#+TAGS: setup GNU/Linux asus zenbook
#+CATEGORY: install/setup
#+DESCRIPTION: Small steps to setup my asus zenbook

Hi,

I finally succeeded in making my choice about a new pc - the asus zenbook (core i5, 24gb ssd, 500 gb, 4go ram...).

After having troubles (dark stories of bios/boot manager/partitioning system hell) installing GNU/Linux (linux mint 13 & 14), it now works like a charm.
Long story short, to keep the install system simple, now you must use x86_64 for x86_64 and x86 for x86 (at least, it's my conclusion for ubuntu/linuxmint system).

Anyway, the goal of this article is to show the tweaks for setuping the asus zenbook on an ubuntu based (maybe debian based).

- *Sources*
  - http://www.howtogeek.com/62761/how-to-tweak-your-ssd-in-ubuntu-for-better-performance/
  - https://help.ubuntu.com/community/AsusZenbookPrime

- *Advices*
Reboot after each system modifications (regarding file system or boot setup options).

Simply to be able to tell which modification broke the machine.

* First backup

Backup the current fstab to avoid any errors.

#+BEGIN_SRC sh
sudo cp /etc/fstab /etc/fstab.ori
#+END_SRC

(No need to reboot here)
* Update */etc/fstab*
** Remove writes
From the man `mount` page:

#+BEGIN_SRC man
       noatime
              Do not update inode access times on this filesystem (e.g., for faster access on the news spool to speed up news servers).
       nodiratime
              Do not update directory inode access times on this filesystem.
       discard/nodiscard
              Controls  whether  ext4  should issue discard/TRIM commands to the underlying block device when blocks are freed.  This is useful for SSD devices and
              sparse/thinly-provisioned LUNs, but it is off by default until sufficient testing has been done.

#+END_SRC

The asus zenkook owns 2 hdd, one SSD and one SATA.
The os is installed on the SSD one.

Adding *noatime* to avoid excessed writing about access times.

#+BEGIN_SRC fstab
UUID=xyz-blbl-abcd-dcba-xyz /   ext4    discard,noatime,errors=remount-ro 0 1
#+END_SRC

*Note*
*noatime* is a superset of *nodiratime* so only *noatime* is need.

** /tmp in ram

To minimize the writing in the ssd, it may be good to mount /tmp in ram.

#+BEGIN_SRC sh
tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0
#+END_SRC

** Reboot
* scheduler
** Check the possibilities of your hardware

if your ssd is /dev/sdb:

#+BEGIN_SRC sh
cat /sys/block/sdb/queue/scheduler
noop deadline [cfq]
#+END_SRC

We can use [[http://en.wikipedia.org/wiki/Deadline_scheduler][deadline]] over [[http://en.wikipedia.org/wiki/CFQ][cfq]].

** Make them permanent

Add those line to */etc/rc.local*

#+BEGIN_SRC sh
echo deadline > /sys/block/sdb/queue/scheduler
echo 1 > /sys/block/sdb/queue/iosched/fifo_batch
#+END_SRC
** Reboot
* Grub setup
** New options
Add this to */etc/default/grub*

*** =rootfstype=ext4=
To stress that */root* in in a ext4 partition.

*** =pcie_aspm=force=
To diminish the loss of power during idle time.

*** =drm.vblankoffdelay=1 i915.semaphores=1=
To save power.

*** =nmi_watchdog=0=
Deactivate the watchdog.

** Final Result

#+BEGIN_SRC sh
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash rootfstype=ext4 pcie_aspm=force drm.vblankoffdelay=1 i915.semaphores=1 nmi_watchdog=0"
#+END_SRC

** Update grub

#+BEGIN_SRC sh
sudo update-grub
#+END_SRC

** Reboot
* Gnome bindings (optional)

Those one does not entirely work, you may skip.

#+BEGIN_SRC sh
sudo aptitude install cheese
gconftool-2 -s /desktop/gnome/keybindings/custom0/name -t string 'Web Cam'
gconftool-2 -s /desktop/gnome/keybindings/custom0/binding -t string 'XF86WebCam'
gconftool-2 -s /desktop/gnome/keybindings/custom0/action -t string 'cheese'
#+END_SRC

* Reboot
Now enjoy.
