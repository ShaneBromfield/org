#+title: Self-organisation
#+author: tony

* TODO Domain Driven Design
* TODO Clojure data analysis cookbook
* TODO Parallel and concurrent programming in haskell
* TODO How to Design Programs: An Introduction to Programming and Computing
* TODO The Little Schemer
* TODO The Seasoned Schemer
* TODO The Reasoned Schemer
* TODO [[Http://riemann.io/index.html][riemann]] - monitors distributed systems
* TODO [[http://www.docker.io/][docker]] - an open source project to pack, ship and run any application as a lightweight container
* TODO [[http://www.packer.io/][packer]] - a tool for creating identical machine images for multiple platforms from a single source configuration.
* TODO [[http://www.opscode.com/chef/][Chef]] - infrastructure automation and configuration management framework - infrastructure as code
* TODO coding challenge which computes the complexity  - http://codility.com/
* IN-PROGRESS Structure and Interpretation of Computer Programs - video courses
* IN-PROGRESS Structure and Interpretation of Computer Programs - books
* IN-PROGRESS org-trello [96%]
minor mode to sync trello and org-mode
** DONE v0.0.1
CLOSED: [2013-07-07 dim. 09:58]
** DONE Deploy in melpa
CLOSED: [2013-07-07 dim. 09:58]
** DONE v0.0.2
CLOSED: [2013-07-07 dim. 09:58]
fix pb in 0.0.1
** DONE Deploy in melpa
CLOSED: [2013-07-07 dim. 09:58]
** DONE Deploy in marmalade
CLOSED: [2013-07-12 ven. 22:25]
** DONE v0.0.3
CLOSED: [2013-07-12 ven. 22:25]
** DONE v0.0.4
CLOSED: [2013-07-26 ven. 12:13]
** DONE v0.0.5
CLOSED: [2013-07-26 ven. 12:13]

** DONE v0.0.6
CLOSED: [2013-07-26 ven. 12:13]
** DONE v0.0.7
CLOSED: [2013-07-26 ven. 12:13]
** DONE v0.0.8
CLOSED: [2013-07-31 mer. 02:37]
** DONE 0.0.9
CLOSED: [2013-08-07 mer. 15:59]
** DONE 0.1.0
CLOSED: [2013-08-07 mer. 15:59]
** DONE 0.1.1
CLOSED: [2013-08-11 dim. 13:52]
** DONE 0.1.2
CLOSED: [2013-10-05 sam. 17:12]
** DONE 0.1.3
CLOSED: [2013-10-13 dim. 02:07]
** DONE 0.1.4
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.1.5
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.1.6
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.1.7
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.1.8
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.1.9
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.2.0
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.2.1
CLOSED: [2013-10-13 dim. 02:08]
** DONE 0.2.2
CLOSED: [2013-10-13 dim. 02:08]
** IN-PROGRESS 0.2.3
* IN-PROGRESS Emacs [100%]
** DONE install
CLOSED: [2012-04-21 Sat 12:02]
#+BEGIN_SRC sh
~/bin/deploy-emacs24.sh
#+END_SRC
** DONE setup
CLOSED: [2012-04-21 Sat 12:03]
#+BEGIN_SRC sh
setup-emacs24.sh
#+END_SRC
** DONE basics
CLOSED: [2012-04-21 Sat 12:02]
** DONE Howto [75%]
CLOSED: [2012-12-23 Sun 13:22]
*** DONE Add some emacs packages
CLOSED: [2012-04-21 Sat 12:05]
=M-x package-list-packages=
*** DONE Deactivate the linum-mode in org-mode?
CLOSED: [2012-04-21 Sat 12:41]
Add this to the init.el

#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook
          (lambda () (setq linum-mode nil)))
#+END_SRC

This basically tells, when org-mode launches, deactivate the linum-mode (which on my setup is globally activated)
*** DONE Toggle debug on error
CLOSED: [2012-04-22 Sun 09:37]
M-x toggle-debug-on-error
** DONE Problems [100%]
CLOSED: [2012-12-23 Sun 13:22]
*** DONE why clojure-jack-in does not work from a stumpwm emacs? [100%]
CLOSED: [2012-12-23 Sun 13:22]
**** DONE solution-12-23 Sun 1
CLOSED: [2012-12-23 Sun 13:22]
Because the emacs path spawned from the stumpwm is not the same from a terminal emacs

#+BEGIN_SRC
(getenv "PATH")
#+END_SRC

inside a stumpwm emacs, evaluates to:
#+begin_example
"/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"
#+end_example

against this inside a terminal emacs:

#+begin_example
"/home/tony/.lein:/home/tony/.lein/bin:/home/tony/.lein/plugins:/home/tony/applications/bin:/home/tony/work/bin:/home/tony/bin:/home/tony/.lein:/home/tony/.lein/bin:/home/tony/.lein/plugins:/home/tony/applications/bin:/home/tony/work/bin:/home/tony/bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"
#+end_example

**** DONE First solution: hacks
CLOSED: [2012-12-23 Sun 13:21]

In my *init.el*
#+BEGIN_SRC emacs-lisp
(setenv "PATH" (concat "/home/tony/bin:" (getenv "PATH")))
#+END_SRC

**** DONE Second solution: package
CLOSED: [2012-12-23 Sun 13:21]

I replace the hack and use an existing mode that setup emacs from the cli.
#+BEGIN_SRC emacs-lisp
;; setup the path
(require 'exec-path-from-shell) ;; if not using the ELPA package
(exec-path-from-shell-initialize)
#+END_SRC
So stumpwm now works
** DONE emacs-live [100%]
CLOSED: [2012-12-23 Sun 13:18]
*** DONE use it
CLOSED: [2012-12-23 Sun 13:18]
*** DONE learn how to make packs
CLOSED: [2012-12-23 Sun 13:18]
*** DONE create packs for my setup
CLOSED: [2012-12-23 Sun 13:18]
*** DONE update emacs live
CLOSED: [2013-03-02 sam. 15:50]
*** DONE organize packs
CLOSED: [2013-04-21 dim. 18:30]
** DONE Improve packs for them not to break at startup time
CLOSED: [2013-07-07 dim. 09:59]
*** DONE blog-pack
CLOSED: [2013-07-07 dim. 10:00]
*** DONE mail-pack
CLOSED: [2013-07-07 dim. 10:00]
*** DONE jabber-pack
CLOSED: [2013-07-07 dim. 10:00]

* IN-PROGRESS Scala [44%]
** DONE scala-pack
CLOSED: [2013-07-26 ven. 12:15]

** DONE coursera online courses video
CLOSED: [2013-07-26 ven. 12:15]
** DONE play basic tutorial
CLOSED: [2013-07-26 ven. 12:16]
** DONE scala koans [100%]
CLOSED: [2013-07-31 mer. 13:59]
*** DONE Install
CLOSED: [2013-07-27 sam. 09:33]
*** DONE create repo locally to push progress
CLOSED: [2013-07-27 sam. 09:33]
*** DONE koans
CLOSED: [2013-07-31 mer. 13:59]

** DONE Play intro
CLOSED: [2013-10-13 dim. 01:33]
** PENDING Improve tooling
*** [[http://aemoncannon.github.io/ensime/index.html][ensime doc]]
*** [[https://github.com/ardumont/scala-pack][scala-pack]]
*** [[https://github.com/rickynils/scalacheck][scalacheck]]
** IN-PROGRESS [[http://aperiodic.net/phil/scala/s-99/][99 problems in scala]] [86%]
- [X] P01 (*) Find the last element of a list.
- [X] P02 (*) Find the last but one element of a list.
- [X] P03 (*) Find the Kth element of a list.
- [X] P04 (*) Find the number of elements of a list.
- [X] P05 (*) Reverse a list.
- [X] P06 (*) Find out whether a list is a palindrome.
- [X] P07 (**) Flatten a nested list structure.
- [X] P08 (**) Eliminate consecutive duplicates of list elements.
- [X] P09 (**) Pack consecutive duplicates of list elements into sublists.
- [X] P10 (*) Run-length encoding of a list.
- [X] P11 (*) Modified run-length encoding.
- [X] P12 (**) Decode a run-length encoded list.
- [X] P13 (**) Run-length encoding of a list (direct solution).
- [X] P14 (*) Duplicate the elements of a list.
- [X] P15 (**) Duplicate the elements of a list a given number of times.
- [X] P16 (**) Drop every Nth element from a list.
- [X] P17 (*) Split a list into two parts.
- [X] P18 (**) Extract a slice from a list.
- [X] P19 (**) Rotate a list N places to the left.
- [X] P20 (*) Remove the Kth element from a list.
- [X] P21 (*) Insert an element at a given position into a list.
- [X] P22 (*) Create a list containing all integers within a given range.
- [X] P23 (**) Extract a given number of randomly selected elements from a list.
- [X] P24 (*) Lotto: Draw N different random numbers from the set 1..M.
- [X] P25 (*) Generate a random permutation of the elements of a list.
- [ ] P26 (**) Generate the combinations of K distinct objects chosen from the N elements of a list.
- [ ] P27 (**) Group the elements of a set into disjoint subsets.
- [ ] P28 (**) Sorting a list of lists according to length of sublists.
- [ ]
** IN-PROGRESS coursera's functional programming [83%]
- [X] example
- [X] fun with sets
- [X] recfun
- [X] objsets
- [X] patmat
- [ ] ...
** TODO Akka
** TODO Iteratee
* IN-PROGRESS guitar [37%]
** DONE coursera - week 1
CLOSED: [2013-08-03 sam. 10:17]
** DONE coursera - week 2
CLOSED: [2013-08-03 sam. 10:17]
** DONE coursera - week 3
CLOSED: [2013-08-04 dim. 07:06]
** TODO coursera - week 4
** TODO coursera - week 5
** TODO coursera - week 6
** IN-PROGRESS lilypond (music notation)
** IN-PROGRESS ob-lilypond (music notation on emacs org-mode)
* IN-PROGRESS crypto [33%]
** IN-PROGRESS coursera
** DONE matasano 1-8 [100%]
CLOSED: [2013-05-17 ven. 04:59]
**** DONE 1
CLOSED: [2013-05-03 ven. 18:12]
**** DONE 2
CLOSED: [2013-05-03 ven. 18:12]
**** DONE 3
CLOSED: [2013-05-17 ven. 04:55]
**** DONE 4
CLOSED: [2013-05-17 ven. 04:55]
**** DONE 5
CLOSED: [2013-05-17 ven. 04:55]
**** DONE 6
CLOSED: [2013-05-17 ven. 04:55]
**** DONE 7
CLOSED: [2013-05-17 ven. 04:55]
**** DONE 8
CLOSED: [2013-05-17 ven. 04:55]
**** DONE send mail
CLOSED: [2013-05-17 ven. 04:59]
** TODO matasano 9-48 suite
* IN-PROGRESS euler 27/434 [96%]
** DONE 1 - Multiples of 3 and 5
CLOSED: [2013-05-23 Thu 10:59]
** DONE 2 - Even Fibonacci numbers
CLOSED: [2013-05-23 Thu 10:54]
** DONE 3 - Largest prime factor
CLOSED: [2013-05-23 Thu 10:54]
** DONE 4 - Largest palindrome product
CLOSED: [2013-05-23 Thu 10:54]
** DONE 5 - Smallest multiple
CLOSED: [2013-05-23 Thu 10:54]
** DONE 6 - Sum square difference
CLOSED: [2013-05-23 Thu 10:54]
** DONE 7 - 10001st prime
CLOSED: [2013-05-23 Thu 10:54]
** DONE 8 - Largest product in a series
CLOSED: [2013-05-23 Thu 10:54]
** DONE 9 - Special Pythagorean triplet
CLOSED: [2013-05-23 Thu 10:54]
** DONE 10 - Summation of primes
CLOSED: [2013-05-23 Thu 10:54]
** DONE 11 - Largest product in a grid
CLOSED: [2013-05-23 Thu 10:54]
** DONE 12 - Highly divisible triangular number
CLOSED: [2013-05-23 Thu 10:54]
** DONE 13 - Large sum
CLOSED: [2013-05-23 Thu 10:54]
** DONE 14 - Longest Collatz sequence
CLOSED: [2013-05-23 Thu 10:54]
** DONE 15 - Lattice paths
CLOSED: [2013-05-23 Thu 10:54]
** DONE 16 - Power digit sum
CLOSED: [2013-05-23 Thu 10:54]
** DONE 17 - Number letter counts
CLOSED: [2013-05-23 Thu 10:54]
** DONE 18 - Maximum path sum I
CLOSED: [2013-05-23 Thu 10:54]
** DONE 19 - Counting Sundays
CLOSED: [2013-05-23 Thu 10:54]
** DONE 20 - Factorial digit sum
CLOSED: [2013-05-23 Thu 10:54]
** DONE 21 - Amicable numbers
CLOSED: [2013-05-23 Thu 10:54]
** DONE 22 - Names scores
CLOSED: [2013-05-23 Thu 10:54]
** DONE 23 - Non-abundant sums
CLOSED: [2013-05-23 Thu 10:54]
** DONE 24 - Lexicographic permutations
CLOSED: [2013-05-23 Thu 10:54]
** DONE 25 - 1000-digit Fibonacci number
CLOSED: [2013-05-23 Thu 10:54]
** DONE 26 - nReciprocal cycles
CLOSED: [2013-05-23 Thu 10:54]
** DONE 59 - XOR decryption
CLOSED: [2013-05-23 Thu 10:55]
** PENDING Finish the other exercises
* IN-PROGRESS 4clojure 144/155 [98%]
http://www.4clojure.com/users
http://www.4clojure.com/user/ardumont
** DONE 21
CLOSED: [2012-04-23 lun. 12:39]
** DONE 22
CLOSED: [2012-04-23 lun. 12:39]
** DONE 23
CLOSED: [2012-04-23 lun. 12:40]
** DONE 26
CLOSED: [2012-04-23 lun. 12:40]
** DONE 27
CLOSED: [2012-04-23 lun. 12:40]
** DONE 28
CLOSED: [2012-04-23 lun. 12:40]
** DONE 30
CLOSED: [2012-04-23 lun. 12:40]
** DONE 31
CLOSED: [2012-04-23 lun. 12:40]
** DONE 32
CLOSED: [2012-04-23 lun. 12:40]
** DONE 33
CLOSED: [2012-04-23 lun. 12:40]
** DONE 34
CLOSED: [2012-04-23 lun. 12:40]
** DONE 38
CLOSED: [2012-04-23 lun. 12:40]
** DONE 39
CLOSED: [2012-04-23 lun. 12:40]
** DONE 40
CLOSED: [2012-04-23 lun. 12:40]
** DONE 41
CLOSED: [2012-04-23 lun. 12:40]
** DONE 42
CLOSED: [2012-04-23 lun. 12:40]
** DONE 43
CLOSED: [2012-04-23 lun. 12:40]
** DONE 44
CLOSED: [2012-04-23 lun. 12:40]
** DONE 46
CLOSED: [2012-04-23 lun. 12:40]
** DONE 50
CLOSED: [2012-04-23 lun. 12:42]
** DONE 53
CLOSED: [2012-04-23 lun. 12:42]
** DONE 54
CLOSED: [2012-04-23 lun. 12:42]
** DONE 55
CLOSED: [2012-04-23 lun. 12:42]
** DONE 56
CLOSED: [2012-04-23 lun. 12:42]
** DONE 58
CLOSED: [2012-04-23 lun. 12:42]
** DONE 59
CLOSED: [2012-04-23 lun. 12:42]
** DONE 60
CLOSED: [2012-04-23 lun. 12:42]
** DONE 61
CLOSED: [2012-04-23 lun. 12:42]
** DONE 62
CLOSED: [2012-04-23 lun. 12:42]
** DONE 63
CLOSED: [2012-04-23 lun. 12:42]
** DONE 65
CLOSED: [2012-04-23 lun. 12:42]
** DONE 66
CLOSED: [2012-04-23 lun. 12:42]
** DONE 67
CLOSED: [2012-04-23 lun. 12:42]
** DONE 69
CLOSED: [2012-04-23 lun. 12:42]
** DONE 70
CLOSED: [2012-04-23 lun. 12:42]
** DONE 73
CLOSED: [2012-04-23 lun. 12:43]
** DONE 74
CLOSED: [2012-04-23 lun. 12:43]
** DONE 75
CLOSED: [2012-04-23 lun. 12:43]
** DONE 77
CLOSED: [2012-04-23 lun. 12:43]
** DONE 78
CLOSED: [2012-04-23 lun. 12:43]
** DONE 79 - Triangle minimal path
CLOSED: [2012-05-01 mar. 18:36]
** DONE 80
CLOSED: [2012-04-23 lun. 12:43]
** DONE 81
CLOSED: [2012-04-23 lun. 12:43]
** DONE 83
CLOSED: [2012-04-23 lun. 12:43]
** DONE 85
CLOSED: [2012-04-23 lun. 12:43]
** DONE 86
CLOSED: [2012-04-23 lun. 12:43]
** DONE 90
CLOSED: [2012-04-23 lun. 12:43]
** DONE 91
CLOSED: [2012-04-23 lun. 12:43]
** DONE 92
CLOSED: [2012-04-23 lun. 12:43]
** DONE 93
CLOSED: [2012-04-23 lun. 12:43]
** DONE 94
CLOSED: [2012-04-23 lun. 12:43]
** DONE 95
CLOSED: [2012-04-23 lun. 12:43]
** DONE 96
CLOSED: [2012-04-23 lun. 12:43]
** DONE 97
CLOSED: [2012-04-23 lun. 12:43]
** DONE 98
CLOSED: [2012-04-23 lun. 12:43]
** DONE 99
CLOSED: [2012-04-23 lun. 12:43]
** DONE 100
CLOSED: [2012-04-23 lun. 12:43]
** DONE 102
CLOSED: [2012-04-23 lun. 12:43]
** DONE 103
CLOSED: [2012-04-23 lun. 12:43]
** DONE 104
CLOSED: [2012-04-23 lun. 12:43]
** DONE 105
CLOSED: [2012-04-23 lun. 12:43]
** DONE 108
CLOSED: [2012-04-23 lun. 12:43]
** DONE 110
CLOSED: [2012-04-23 lun. 12:43]
** DONE 112
CLOSED: [2012-04-23 lun. 12:43]
** DONE 114
CLOSED: [2012-04-23 lun. 12:43]
** DONE 115
CLOSED: [2012-04-23 lun. 12:43]
** DONE 116
CLOSED: [2012-04-23 lun. 12:43]
** DONE 118
CLOSED: [2012-04-23 lun. 12:43]
** DONE 120
CLOSED: [2012-04-23 lun. 12:43]
** DONE 121
CLOSED: [2012-04-23 lun. 12:43]
** DONE 122
CLOSED: [2012-04-23 lun. 12:43]
** DONE 128
CLOSED: [2012-04-23 lun. 12:43]
** DONE 131
CLOSED: [2012-04-23 lun. 12:43]
** DONE 132
CLOSED: [2012-04-23 lun. 12:43]
** DONE 135
CLOSED: [2012-04-23 lun. 12:43]
** DONE 137
CLOSED: [2012-04-23 lun. 12:43]
** DONE 143
CLOSED: [2012-04-23 lun. 12:43]
** DONE 144
CLOSED: [2012-04-23 lun. 12:43]
** DONE 146
CLOSED: [2012-04-23 lun. 12:43]
** DONE 147
CLOSED: [2012-04-23 lun. 12:43]
** DONE 148
CLOSED: [2012-04-23 lun. 12:43]
** DONE 150 - Palindromic number
CLOSED: [2012-04-27 ven. 13:22]
** DONE 153 - Pairwise disjoint cells
CLOSED: [2012-04-23 lun. 11:44]
http://www.4clojure.com/problem/153
https://github.com/ardumont/my-4clojure-lab/blob/master/src/my_4clojure_lab/199/core153.clj
** DONE 82 - Word Chains
CLOSED: [2012-04-30 lun. 15:05]
** DONE 156 - Map defaults
CLOSED: [2012-04-30 lun. 15:05]
** DONE 157 - Indexing sequence
CLOSED: [2012-04-30 lun. 15:05]
** DONE 141 - Tricky card games
CLOSED: [2012-05-01 mar. 20:45]
** DONE 113 - Making data dance
CLOSED: [2013-05-23 Thu 10:45]
** DONE 117 - For science!
CLOSED: [2013-05-23 Thu 10:45]
** PENDING Finish the other exercises

* PENDING Articles [94%]
** DONE Chroot to save one's GNU/Linux
CLOSED: [2012-04-21 Sat 18:07]
http://adumont.fr/blog/chroot-pour-sauver-son-gnulinux/
** DONE public/private key generation
CLOSED: [2012-04-21 Sat 18:06]
http://adumont.fr/blog/generation-cle-priveepublique/
** DONE Possible team workflow with git
CLOSED: [2012-04-21 Sat 12:45]
http://adumont.fr/blog/possible-team-workflow-with-git/
** DONE How to install stumpwm
CLOSED: [2012-04-21 Sat 12:43]
http://adumont.fr/blog/howto-install-stumpwm-and-little-more/
** DONE How to beamer with org-mode
CLOSED: [2012-04-21 Sat 12:44]
http://adumont.fr/blog/howto-beamer-with-org-mode/
** DONE How to install emacs 24
CLOSED: [2012-04-21 Sat 12:44]
http://adumont.fr/blog/how-to-install-emacs-24/
** DONE How to install the clojure environment [100%]
CLOSED: [2012-04-24 mar. 13:34]
*** DONE org
CLOSED: [2012-04-24 mar. 13:25]
*** DONE blog
CLOSED: [2012-04-24 mar. 13:34]
http://adumont.fr/blog/how-to-install-the-clojure-development-environment/
** DONE How to bootstrap a clojure project [100%]
CLOSED: [2012-04-24 mar. 14:17]
*** DONE org
CLOSED: [2012-04-24 mar. 14:17]
*** DONE blog
CLOSED: [2012-04-24 mar. 14:17]
http://adumont.fr/blog/how-to-boostrap-a-clojure-project/
** DONE One way to solve a problem in clojure [100%]
CLOSED: [2012-04-24 mar. 15:00]
*** DONE org
CLOSED: [2012-04-24 mar. 14:17]
*** DONE blog
CLOSED: [2012-04-24 mar. 14:58]
http://adumont.fr/blog/one-way-to-solve-a-problem-in-clojure/
** DONE setup asus zenbook
CLOSED: [2012-12-23 Sun 13:14]
http://adumont.fr/blog/setup-the-asus-zenbook/
** DONE blogging with org-mode/org2blog/wordpress
CLOSED: [2012-12-23 Sun 13:14]
http://adumont.fr/blog/blogging-with-org-mode-and-org2blog-to-publish-on-wordpress/
** DONE my emacs tools
CLOSED: [2012-12-23 Sun 13:14]
http://adumont.fr/blog/my-emacs-tools/
** DONE programming in haskell - Ch1 - Introduction - exercises
CLOSED: [2012-12-24 Mon 13:47]
http://adumont.fr/blog/programming-in-haskell-exercices-intro/
** DONE programming in haskell - Ch2 - First steps - exercises
CLOSED: [2012-12-25 Tue 10:48]
http://adumont.fr/blog/programming-in-haskell-ch2-first-steps-exercises/
** DONE Vagrant tools
CLOSED: [2012-12-26 mer. 17:27]
http://adumont.fr/blog/vagrant-tools/
** DONE programming in haskell - Ch3 - Types and classes - exercises
CLOSED: [2012-12-26 mer. 23:18]
http://adumont.fr/blog/programming-in-haskell-ch3-types-and-classes-exercises/
** DONE Git aliases/System git aliases
CLOSED: [2012-12-27 jeu. 19:09]
http://adumont.fr/blog/git-aliasessystem-git-aliases/
** DONE programming in haskell - Ch4 - Defining functions - exercises
CLOSED: [2012-12-28 ven. 18:56]
http://adumont.fr/blog/programming-in-haskell-ch4-defining-functions-exercises/
** DONE Daily git 1/2
CLOSED: [2012-12-29 sam. 13:20]
http://adumont.fr/blog/daily-git-12/
** DONE Activate/Deactivate touchpad from the shell
http://adumont.fr/blog/activatedeactivate-touchpad-from-the-shell/
CLOSED: [2012-12-29 sam. 15:10]
** DONE Stumpwm - Activate/Deactivate touchpad
CLOSED: [2012-12-29 sam. 15:55]
http://adumont.fr/blog/stumpwm-activatedeactivate-touchpad/
** DONE Daily git 2/2
CLOSED: [2012-12-30 dim. 12:21]
http://adumont.fr/blog/daily-git-22/
** DONE Programming in haskell - ch5 - Lists comprehension - exercises
CLOSED: [2012-12-30 dim. 15:31]
http://adumont.fr/blog/programming-in-haskell-ch5-lists-comprehension-exercises/
** DONE Stumpwm - Display result of bash commands using zenity
CLOSED: [2012-12-31 lun. 19:53]
http://adumont.fr/blog/stumpwm-display-result-of-bash-commands-using-zenity/
** DONE Emacs - Activate touchpad when org-mode exports html
CLOSED: [2013-01-01 mar. 12:41]
http://adumont.fr/blog/emacs-activate-touchpad-when-org-mode-exports-html/
** DONE Programming in haskell - ch6 - Recursive functions - exercises
CLOSED: [2013-01-02 mer. 21:37]
http://adumont.fr/blog/programming-in-haskell-ch6-recursive-functions/
** DONE Programming in haskell - ch7 - Higher-order functions - exercises 1/3
CLOSED: [2013-01-05 sam. 15:51]
http://adumont.fr/blog/pih-ch7-higher-order-functions-12/
** DONE Programming in haskell - ch7 - Higher-order functions - exercises - 2/3
CLOSED: [2013-01-07 lun. 21:57]
http://adumont.fr/blog/pih-ch7-higher-order-functions-23/
** DONE Programming in haskell - ch7 - Higher-order functions - exercises - 3/3
CLOSED: [2013-01-08 mar. 19:56]
http://adumont.fr/blog/pih-ch7-higher-order-functions-33/
** DONE polipo simple setup
CLOSED: [2013-01-12 sam. 03:46]
http://adumont.fr/blog/polipo-setup/
** DONE gtalk in emacs using jabber mode
CLOSED: [2013-01-13 dim. 18:44]
http://adumont.fr/blog/gtalk-in-emacs-using-jabber-mode/
** DONE problem intervals on 4clojure
CLOSED: [2013-01-27 dim. 03:10]
http://adumont.fr/blog/intervals/
** DONE number maze problem on 4clojure
CLOSED: [2013-01-28 lun. 22:38]
http://adumont.fr/blog/4clojure-number-maze-problem/
** DONE Decomposition into a product of 2 numbers
CLOSED: [2013-01-29 mar. 20:27]
http://adumont.fr/blog/problem-decomposition-into-a-product-of-2-numbers/
** DONE Analyze a tic-tac-toe board
CLOSED: [2013-01-30 mer. 00:35]
http://adumont.fr/blog/4clojure-analyze-a-tic-tac-toe-problem/
** DONE Win a tic-tac-toe board
CLOSED: [2013-04-13 sam. 22:40]
** DONE Levenshtein distance
CLOSED: [2013-04-13 sam. 22:40]
** DONE Programming in Haskell - chapter 8 - 1/2 - functional parsers exercises
CLOSED: [2013-04-13 sam. 22:41]
http://adumont.fr/blog/pih-ch8-12-functional-parsers-exercises/
** DONE Programming in Haskell - chapter 8 - 1/2 - functional parsers exercises
CLOSED: [2013-04-14 dim. 17:25]
http://adumont.fr/blog/pih-ch8-22-functional-parsers-exercises/
** DONE Programming in Haskell - Chapter 9
CLOSED: [2013-04-25 jeu. 22:00]
http://adumont.fr/blog/pih-ch9-interactive-programs-exercises/
** DONE Programming in Haskell - Chapter 10 - 1/3
CLOSED: [2013-04-27 sam. 15:56]
** DONE Programming in Haskell - Chaper 10 - 2/3
CLOSED: [2013-05-01 mer. 12:51]
** DONE Programming in Haskell - Chapter 10 - 3/3
CLOSED: [2013-05-08 mer. 10:44]
** DONE emacs-live-packs - blog-pack
CLOSED: [2013-04-29 lun. 01:25]
http://adumont.fr/blog/emacs-live-pack-blog-pack/
** DONE clj-of-life
CLOSED: [2013-05-01 mer. 17:55]
http://adumont.fr/blog/game-of-life-in-clojure-demo/
** DONE Decode/Encode base64 in Clojure
CLOSED: [2013-05-04 sam. 16:40]
** DONE Fun with Sets in Haskell
CLOSED: [2013-05-16 jeu. 22:54]
** DONE XOR decryption - euler 59
CLOSED: [2013-05-11 sam. 15:50]
** DONE euler 26
CLOSED: [2013-05-20 lun. 10:50]
** DONE Sieve of Eratosthenes
CLOSED: [2013-05-20 lun. 10:43]
** DONE BinarySearchTree in Haskell
CLOSED: [2013-05-23 jeu. 19:42]

** PENDING AVL in Haskell
** DONE PIH - ch11 - The countdown problem - exercises
CLOSED: [2013-05-26 dim. 13:18]
** DONE PIH - ch12 - lazyness - exercises
CLOSED: [2013-05-29 mer. 20:24]
** DONE PIH - ch13 - Reasoning about programs - exercises
CLOSED: [2013-06-04 mar. 20:29]
** PENDING Functional approach in haskell - Ch. 2
** PENDING Functional Approach in Haskell - Ch. 3 - The efficiency of functional programs
** DONE org-trello
CLOSED: [2013-07-12 ven. 22:25]
** DONE org-trello - new feature
CLOSED: [2013-08-07 mer. 16:00]
* PENDING Clojure [50%]
** DONE start [100%]
CLOSED: [2012-04-21 Sat 18:18]
*** DONE install
CLOSED: [2012-04-21 Sat 12:07]
#+BEGIN_SRC sh
~/bin/deploy-clojure.sh
#+END_SRC
*** DONE setup env
CLOSED: [2012-04-21 Sat 18:18]
#+BEGIN_SRC sh
~/bin/setup-emacs24.sh
#+END_SRC
*** DONE play with it
CLOSED: [2012-04-21 Sat 12:09]

** DONE Create a basic rss reader
CLOSED: [2012-12-25 Tue 10:51]
** DONE [[https://github.com/weavejester/environ][environ]]
CLOSED: [2013-03-02 sam. 15:46]
library to manage environment settings from a number of different sources

** DONE clj-ssh
CLOSED: [2013-03-02 sam. 15:12]
** DONE Cloduino basis [100%]
CLOSED: [2013-08-10 sam. 10:35]
*** DONE led
CLOSED: [2013-03-02 sam. 15:11]
*** DONE blinking led
CLOSED: [2013-03-02 sam. 15:11]
** TODO [[https://github.com/pallet/ritz][ritz]]
collection of library and servers for clojure dev env and for debuggers.
** TODO [[https://github.com/pallet/pallet][pallet]] [66%]
*** DONE my-pallet-lab bootstrap
CLOSED: [2013-03-02 sam. 15:11]
*** IN-PROGRESS reading [[http://palletops.com/doc/reference/0.8/][documentation]]
*** DONE setup for ec2
CLOSED: [2013-03-02 sam. 20:06]
*** DONE provision an ec2 node with pallet
CLOSED: [2013-03-02 sam. 20:06]
*** DONE migrate from 0.7.3 to 0.8.0-beta1
CLOSED: [2013-03-02 sam. 20:06]
*** TODO create one small crate

** TODO [[https://github.com/ztellman/aleph][Aleph]]
** TODO [[https://github.com/clojure/core.logic][core.logic]]
** TODO [[https://github.com/clojure/core.async][core.async]]
* PENDING CPUG [80%]
** DONE make a vm to ease the beginning for newbies
CLOSED: [2013-03-03 dim. 00:05]
** DONE make a vagrant box out of this vm
CLOSED: [2013-03-03 dim. 00:06]
** PENDING upload this vm somewhere and reference it (where?)
** DONE make a [[https://github.com/ardumont/cpug-vm][cpug-vm repository]]
CLOSED: [2013-03-03 dim. 00:06]

** DONE make a decent cpug-vm/Vagrantfile startup
CLOSED: [2013-03-03 dim. 01:45]
* IN-PROGRESS haskell [54%]
** DONE setuping environment
CLOSED: [2013-04-19 ven. 22:33]
** DONE blogging about haskell
CLOSED: [2013-04-19 ven. 22:33]
** DONE Cabal basics
CLOSED: [2013-10-13 dim. 02:04]
** DONE QuickCheck intro
CLOSED: [2013-10-13 dim. 11:19]
** DONE HUnit - http://hunit.sourceforge.net/HUnit-1.0/Guide.html
CLOSED: [2013-10-13 dim. 11:25]
** DONE Huffman algorithm - https://github.com/ardumont/haskell-lab/blob/master/src/Huffman.hs
CLOSED: [2013-10-13 dim. 20:05]
Using HUnit tests - https://github.com/ardumont/haskell-lab/blob/master/src/HuffmanTests.hs
** IN-PROGRESS Collection implementations [75%]
*** DONE set
CLOSED: [2013-05-03 ven. 18:13]
*** DONE binary search tree
CLOSED: [2013-05-03 ven. 18:13]
*** DONE AVL
CLOSED: [2013-08-10 sam. 10:33]
*** IN-PROGRESS Red-Black tree
** TODO test-framework - http://batterseapower.github.io/test-framework/
** TODO Concurrency/Parallelism
** TODO Web services [0%]
*** TODO Yesod
*** TODO Snap
** TODO Common Architecture for Building Application and Libraries (CABAL)
http://about.travis-ci.org/docs/user/languages/haskell/
http://www.haskell.org/cabal/
http://www.haskell.org/haskellwiki/How_to_write_a_Haskell_program#Add_a_build_system
http://ivanmiljenovic.wordpress.com/2010/03/15/repeat-after-me-cabal-is-not-a-package-manager/
* PENDING (o)caml [50%]
** DONE setup environment
CLOSED: [2013-04-19 ven. 22:36]
** IN-PROGRESS Read
*** IN-PROGRESS old [27%]
**** DONE chapter 1
CLOSED: [2013-04-19 ven. 22:39]
**** DONE chapter 2
CLOSED: [2013-04-19 ven. 22:39]
**** DONE chapter 3
CLOSED: [2013-04-19 ven. 22:39]
**** TODO chapter 4
**** TODO chapter 5
**** TODO chapter 6
**** TODO chapter 7
**** TODO chapter 8
**** TODO chapter 9
**** TODO chapter 10
**** TODO chapter 11
*** TODO new
 http://www.dicosmo.org/CourseNotes/pfav/
* DONE practical clojure
CLOSED: [2012-04-21 Sat 18:20]
* DONE joy of clojure
CLOSED: [2013-07-07 dim. 10:04]
* DONE clojure in action
CLOSED: [2013-07-07 dim. 10:04]
* DONE Clojure programming
CLOSED: [2012-12-23 Sun 13:24]
* DONE Programming in haskell [100%]
CLOSED: [2013-08-10 sam. 10:33]
** DONE chapter 1
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 2
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 3
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 4
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 5
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 6
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 7
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 8
CLOSED: [2013-04-19 ven. 22:32]
** DONE chapter 9
CLOSED: [2013-05-03 ven. 18:14]
** DONE chapter 10
CLOSED: [2013-05-03 ven. 18:14]
** DONE chapter 11
CLOSED: [2013-08-10 sam. 10:33]
** DONE chapter 12
CLOSED: [2013-08-10 sam. 10:33]
** DONE chapter 13
CLOSED: [2013-08-10 sam. 10:33]
** DONE http://yannesposito.com/Scratch/en/blog/Haskell-the-Hard-Way/
CLOSED: [2013-04-19 ven. 22:35]
** DONE http://learnyouahaskell.com/input-and-output
CLOSED: [2013-04-21 dim. 20:34]
** DONE http://learnyouahaskell.com/types-and-typeclasses
CLOSED: [2013-04-22 lun. 18:17]
* DONE sh [100%]
CLOSED: [2012-04-21 Sat 12:08]
** DONE init
CLOSED: [2012-04-21 Sat 12:21]
** DONE cleanup
CLOSED: [2012-04-21 Sat 17:47]
* DONE stumpwm [100%]
CLOSED: [2012-04-21 Sat 12:07]
** DONE install
CLOSED: [2012-04-21 Sat 12:07]
** DONE setup
CLOSED: [2012-04-21 Sat 12:07]

** DONE Updating setup
CLOSED: [2012-04-21 Sat 17:48]
* DONE migrate blog [100%]
CLOSED: [2012-12-30 dim. 15:37]
** CANCELLED migrate tonys-blog with static and nakkaya [100%]
CLOSED: [2012-12-23 Sun 13:12]
*** DONE static [100%]
CLOSED: [2012-04-21 Sat 12:48]
**** DONE fork
CLOSED: [2012-04-21 Sat 11:56]
**** DONE clone
CLOSED: [2012-04-21 Sat 11:56]
**** DONE try and play with it
CLOSED: [2012-04-19 Thu 11:56]
*** CANCELLED nakkaya.com -> tonys-blog [80%]
CLOSED: [2012-12-23 Sun 13:11]
**** DONE fork
CLOSED: [2012-04-21 Sat 11:57]
**** DONE clone
CLOSED: [2012-04-21 Sat 11:57]
**** DONE migrate nakkaya.com with tonys-blog
CLOSED: [2012-04-21 Sat 11:57]
**** FAIL make it work completely
CLOSED: [2012-04-21 Sat 12:56]
The generating emacs-lisp to make emacs export the org-mode files into html does not work!
**** TODO pb with the emacs generation
Try and see what's not working
**** Finish the migration
** DONE org2blog [100%]
CLOSED: [2012-12-30 dim. 15:37]
*** DONE Setup org2blog to be able to edit org-mode file and then push them to wordpress.
CLOSED: [2012-12-23 Sun 13:12]
*** DONE publish/sync english articles to wordpress using org2blog [100%]
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/howto-install-stumpwm-and-little-more/
CLOSED: [2012-12-23 Sun 13:16]
**** DONE http://adumont.fr/blog/howto-beamer-with-org-mode/
CLOSED: [2012-12-23 Sun 13:16]
**** DONE http://adumont.fr/blog/how-to-install-emacs-24/
CLOSED: [2012-12-23 Sun 13:16]
**** DONE http://adumont.fr/blog/how-to-install-the-clojure-development-environment/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/how-to-boostrap-a-clojure-project/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/one-way-to-solve-a-problem-in-clojure/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/my-first-steps-with-arduinoclodiuno/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/clodiuno-command-a-led-from-the-repl/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/hello-world-in-morse-with-arduinoclodiuno/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/video-rich-hikey-are-we-there-yet/
CLOSED: [2012-12-23 Sun 13:17]
**** DONE http://adumont.fr/blog/possible-team-workflow-with-git/
CLOSED: [2012-12-23 Sun 13:17]
* DONE Modifying theme [100%]
CLOSED: [2013-01-01 mar. 20:10]
** DONE find one
CLOSED: [2013-01-01 mar. 20:09]
** DONE setup it
CLOSED: [2013-01-01 mar. 20:09]
** DONE licence CC-SA
CLOSED: [2013-01-01 mar. 20:10]
** DONE ok with mobile
CLOSED: [2013-01-01 mar. 20:10]
* DONE emacs-live [100%]
CLOSED: [2013-04-15 lun. 21:12]
** DONE merge starter-kit and emacs-live's init.el
CLOSED: [2013-04-15 lun. 19:59]
** DONE Use emacs-live and the tony branch to develop my own emacs-live packs
CLOSED: [2013-04-15 lun. 20:00]
** DONE Separate my packs from emacs-live's own
CLOSED: [2013-04-15 lun. 20:00]
** DONE Create git repositories for each pack [100%]
CLOSED: [2013-04-15 lun. 21:12]
*** DONE blog-pack
CLOSED: [2013-04-15 lun. 20:02]
*** DONE buffer-pack
CLOSED: [2013-04-15 lun. 20:02]
*** DONE install-packages-pack
CLOSED: [2013-04-15 lun. 21:11]
*** DONE user-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE haskell-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE orgmode-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE lisp-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE git-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE mail-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE shell-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE browser-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE chat-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE clojure-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE nrepl-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE clojurescript-pack
CLOSED: [2013-04-15 lun. 21:12]
*** DONE caml-pack
CLOSED: [2013-04-15 lun. 21:12]

** DONE adding all packs as git submodules to emacs-live-packs
CLOSED: [2013-04-15 lun. 21:12]
* DONE curriculum [100%]
CLOSED: [2013-04-19 ven. 22:40]
** DONE update blog
CLOSED: [2013-04-07 dim. 12:56]
** DONE create a curriculum site in clojurescript
CLOSED: [2013-04-07 dim. 11:54]
https://github.com/ardumont/glowing-octo-archer.git

** DONE make it printable
CLOSED: [2013-04-07 dim. 11:54]

** DONE deploy it
CLOSED: [2013-04-07 dim. 12:28]
find how to deploy clojurescript app

At the moment deploying via sftp.

http://adumont.fr/cv/curriculum-app.html

** DONE make links to it from everywhere (gravatar, linkedin, viadeo, blog, etc...) [100%]
CLOSED: [2013-04-07 dim. 12:56]
*** DONE blog
CLOSED: [2013-04-07 dim. 12:30]
http://adumont.fr/blog/about/ the link "my resume" is updated.
*** DONE gravatar
CLOSED: [2013-04-07 dim. 12:46]
*** DONE linkedin
CLOSED: [2013-04-07 dim. 12:56]
*** DONE viadeo
CLOSED: [2013-04-07 dim. 12:56]
** DONE find old cv used for sfeir
CLOSED: [2013-04-07 dim. 13:05]
** DONE update cv according to those
CLOSED: [2013-04-19 ven. 22:40]* PENDING org-mode [80%]
** DONE Howto install it?
CLOSED: [2012-04-21 Sat 11:58]
see =~/bin/setup-emacs24.sh= (in the init.el, there is some emacs-lisp that launches the install of different modes,
including org)
** DONE basics
CLOSED: [2012-04-21 Sat 11:58]
** DONE How to add some keywords (FAIL, PENDING, etc...)
CLOSED: [2012-04-21 Sat 12:29]
2 solutions:
- per file:
Add a line at the beginning of the file like this
#+BEGIN_SRC org
\#+TODO: TODO PENDING | FAIL DONE DELEGATED CANCELLED
#+END_SRC
then =C-c C-c= to reload the file in org-mode.

[[http://orgmode.org/manual/Per_002dfile-keywords.html]]

- global to org-mode:

Add this to your ~/.emacs.d/init.el
#+BEGIN_SRC emacs-lisp
     (setq org-todo-keywords
       '((sequence "TODO" "PENDING" "|" "DONE" "FAIL" "DELEGATED" "CANCELLED")))
#+END_SRC

** DONE Add this in the emacs setup.
CLOSED: [2012-04-21 Sat 12:31]
** TODO org-babel [66%]
*** DONE intro [100%]
CLOSED: [2012-04-22 Sun 10:33]
http://orgmode.org/worg/org-contrib/babel/intro.html
**** DONE Introduction
CLOSED: [2012-04-22 Sun 10:12]
- can be used as a meta programming language
- ultimate litterate programming tools
- one result of a function in a language can be passed to another language block
**** DONE Overview
CLOSED: [2012-04-22 Sun 10:14]
**** DONE Initial Configuration
CLOSED: [2012-04-22 Sun 10:14]
**** DONE Code Blocks [100%]
CLOSED: [2012-04-22 Sun 10:14]
***** DONE Code Blocks in Org
CLOSED: [2012-04-22 Sun 10:15]
***** DONE Code Blocks in Babel
CLOSED: [2012-04-22 Sun 10:14]
**** DONE Source Code Execution [100%]
CLOSED: [2012-04-22 Sun 10:16]
***** DONE Capturing the Results of Code Evaluation
CLOSED: [2012-04-22 Sun 10:15]
***** DONE Session-based Evaluation
CLOSED: [2012-04-22 Sun 10:15]
***** DONE Arguments to Code Blocks
CLOSED: [2012-04-22 Sun 10:15]
***** DONE In-line Code Blocks
CLOSED: [2012-04-22 Sun 10:15]
***** DONE Code Block Body Expansion
CLOSED: [2012-04-22 Sun 10:15]
***** DONE A Meta-programming Language for Org-mode
CLOSED: [2012-04-22 Sun 10:16]
**** DONE Using Code Blocks in Org Tables
CLOSED: [2012-04-22 Sun 10:32]
**** DONE The Library of Babel
CLOSED: [2012-04-22 Sun 10:32]
**** DONE Literate Programming
CLOSED: [2012-04-22 Sun 10:32]
**** DONE Reproducible Research
CLOSED: [2012-04-22 Sun 10:33]
Not only the thesis but everything that make all the research reproducible.
*** DONE org-babel, a sample of its power
CLOSED: [2012-04-22 Sun 10:14]

Add an input table.
#+tblname: fibonacci-inputs
| 1 | 2 | 3 | 4 |  5 |  6 |  7 |  8 |  9 | 10 |
| 2 | 4 | 6 | 8 | 10 | 12 | 14 | 16 | 18 | 20 |

Create a block of code that takes the previous table as input
#+name: fibonacci-seq(fib-inputs=fibonacci-inputs)
#+BEGIN_SRC emacs-lisp
  (defun fibonacci (n)
    (if (or (= n 0) (= n 1))
        n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))

  (mapcar (lambda (row)
            (mapcar #'fibonacci row)) fib-inputs)
#+END_SRC

*Note*:
=C-c C-o= will open another buffer with the result in it.

Hit =C-c C-c= to launch the evaluationm and then, this result table is generated
#+RESULTS: fibonacci-seq
| 1 | 1 | 2 |  3 |  5 |   8 |  13 |  21 |   34 |   55 |
| 1 | 3 | 8 | 21 | 55 | 144 | 377 | 987 | 2584 | 6765 |

CLOSED: [2012-04-22 Sun 11:13]
#+name: directories
#+BEGIN_SRC sh :results replace
  cd ~ && du -sc * |grep -v total
#+END_SRC
Need some setup.
*** IN-PROGRESS setup it to have access to different languages
* DONE [[www.infoq.com/resource/minibooks/domain-driven-design-quickly/en/pdf/DomainDrivenDesignQuicklyOnline.pdf][DDD quickly]]
CLOSED: [2013-08-10 sam. 10:31]
* TODO mouseless file manager
Does not seem to find one!
Code it!
* TODO keysnail
- [ ] swap tab
- [ ] select text to kill and yank
* TODO Arduino [0%]
- [ ] Get back in touch
- [ ] Dig more
* TODO Raspberry-PI [%]
- [ ] Learn
