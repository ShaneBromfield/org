#+BLOG: tony-blog
#+TITLE: Programming in haskell - ch9 - Interactive programs - exercises
#+AUTHOR: Antoine R. Dumont
#+OPTIONS:
#+TAGS: haskell, exercises, functional-programming, IO, Interactive programs
#+CATEGORY: haskell, exercises, functional-programming, IO, Integractive programs
#+DESCRIPTION: Learning haskell and solving problems using reasoning and 'repl'ing
#+STARTUP: indent
#+STARTUP: hidestars odd

There are some compatibilities issues on this chapter between what's explained and the rendering.
Furthermore, I'm not interested with the graphical part of haskell yet.
To sum up, I will concentrate on the *nim* exercise.

#+begin_quote
Nim is a game that is played on a board comprising five numbered rows of stars, which is initially set up as follows:

1:∗∗∗∗∗

2:∗∗∗∗

3:∗∗∗

4:∗∗

5:∗

Two players take it in turn to remove one or more stars from the end of a single row.
The winner is the player who removes the last star or stars from the board.
Implement the game of nim in Haskell.

_Hint:_ represent the board as a list comprising the number of stars remaining on each row, with the initial board being =[5, 4, 3, 2, 1]=.
#+end_quote
