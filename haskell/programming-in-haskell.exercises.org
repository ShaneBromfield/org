#+title: Programming in haskell - exercices
#+author: Antoine R. Dumont

* Introduction
1. Give another possible calculation for the result of double (double 2).

#+begin_src pseudo
double (double 2) = (double 2) + (double 2)
                  = (double 2) + (2 + 2)
                  = (double 2) + 4
                  = (2 + 2) + 4
                  = 4 + 4
                  = 8
#+end_src

2. Show that sum [x] = x for any number x.

sum:
#+begin_src haskell
sum :: Num a => [a] -> a
sum [] = 0
sum (x:xs) = x + sum xs
#+end_src

Given the definition of the sum function:
#+begin_src demo
sum [x] = x + sum []
        = x + 0
        = x
#+end_src

3. Define a function product that produces the product of a list of numbers,
and show using your definition that product [2, 3, 4] = 24.

product:
#+begin_src haskell
pdt :: Num a => [a] -> a
pdt [] = 1
pdt (x:xs) = x * pdt xs
#+end_src

product [2,3,4] = 24?
#+begin_src demo
pdt [2,3,4] = 2 * pdt [3,4]
            = 2 * 3 * pdt [4]
            = 2 * 3 * 4 * pdt []
            = 2 * 3 * 4 * 1
            = 24
#+end_src

4. How should the definition of the function qsort be modified so that it
produces a reverse sorted version of a list?

5. What would be the effect of replacing by < in the original definition
of qsort ? Hint: consider the example qsort [2, 2, 3, 1, 1].
