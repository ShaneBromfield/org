#+title: Notes on cryptography
#+author: Antoine R. Dumont
#+STYLE: <SCRIPT SRC="/usr/share/jsmath/easy/load.js"></SCRIPT>

#+COLUMNS:
* Intro
** keywords
confidentiality
integrity
** crypto is everywhere
*** web traffic -> https (SSL/TLS)
*** wireless -> 802.11i wpa2, bluetooth
*** protecting file on disk
*** dvd -> Content Scrambling System
*** blu-ray -> AACS
*** user authentication
** public key crypto
** protecting file
metaphor about files: store a file is like sending a message to oneself in the future
** symmetric encryption
E(k, m) = c

D(k, c) = m

E encrypting
D decrypting
k key
m message
c cipher

All encryption algorithms are publicly known!
The only secret is the key!

Note: Never use a proprietary encryption algorithm

** Use cases
*** single use -> to encrypt only one message (for email for example)
*** multiple use -> to encrypt file system

* What is cryptography
** goal
- secret key establishment
- secure comm

for confidentiality and integrity
** digital signature
In the real world, as a person, we sign multiple documents with one signature

In the digital world, we cannot do a signature with just one because if it's stolen, everybody can act as us.
So the digital signature contract is the same as in reality but its implementation differs.

Implementation Idea: the digital signature is a FUNCTION of the content being signed!
** anonymous communication

** anonymous digital cash

** protocols
*** elections
*** private auctions
*** private authority
theorem: Anything that you can compute with the private authority, can be done without it.
** a rigorous science
3 steps
*** precisely specify threat model
*** propose a construction
*** prove that breaking construction under threat model will solve an underlaying hard problem
* History of cryptography
** symmetric ciphers
is called symmetric because the 2 persons (Alice and Bob) communicating use the same key
** Example of broken symmetric ciphers
- substitution cipher
- caesar cipher (substitution cipher with a fixed substitution, shift by 3)
** how to break a substition cipher
- What's the size of the key space?
- frequency attack possible (letter, digrams, trigrams, etc...)
** Vigener cipher (Renaissance)
E(k, m) = c:
Given a key k, repeat the key as much as needed to have the same size of the text.
Transpose the repeated key beside the text to encrypt.
Compute the sum of the letter of the text with its side key character `mod` 26.
The result is the cipher.

Breaking:
To break it, we need to know the length of the key l.
Then, slice the ciphered text into l blocks.
Now we will look at the first character of each block, all those charaters are ciphered with the same letter of the key.
As we suppose the text is in english and the most common letter in english is 'e'
The most common letter amongst the first letter is likely to be 'e'.
So substracting such letter to 'e' will give the key's first character.

And so on and so forth to retrieve the key.
** Rotor machine (mechanical age)
Like a typewriter but the output is encrypted.
Every time you input a character, the character is enciphered with an embedded dictionary encryption (inside a physical disk), which then rotates according to the previous input.
*** Hebern machine
1 rotor with a 1 frequency rotation
very weak

*** the Enigma
3-5 rotors with different frequency rotations.
The initial states of the rotors gives a different key.
As there are 26 characters, you've got potentially 26^n, with n the number of rotors (n in [3..5])

** Data Encryption Standard (digital age)
Government puts up an official demand
IBM 1974

keys: 2^56, encrypts 8 characters at a time (= 64 bits) contrary to rotor (only 1 character)
Weak.

** AES
encrypts 16 characters, 128 bits
* Discrete probability crash course

** Definitions
U universe is a finite set, for example \( U: {0,1}^n \)

def: Probability distribution P over U is such that:

\( P: U → [0,1] \)

\( ∑_{x ∈ U} P(x) = 1 \)

*** Uniform distribution

\( ∀ x ∈ U, P(x) = \frac{1}{|U|} \)

*** Point distribution at x0:

\( P(x_0) = 1 \)

\( ∀ x ≠ x_0, P(x) = 0 \)

*** Events

A a set

\( A ⊆ U, Pr[A] = ∑_{x ∈ A} P(x) \in [0, 1] \)

*Note:* Pr[U] = 1

A is an event


*** the union bound

\( A_1, A_2 ⊂ U, Pr [ A_1 ⋃ A_2 ] ≤ Pr [ A_1 ] + Pr [ A_2 ] \)

*Note*:
\( A_1 ⋂ A_2 = ∅ ⇒ Pr [ A_1 ⋃ A_2 ] = Pr [ A_1 ] + Pr [ A_2 ] \)
* Discrete probability crash course 2/2
** Random variable
A random variable is a function \( X: U \rightarrow@ → V \)
X takes values in V and defines a distribution on V

** Indenpendence
Def: A, B events, \( A ∐ B ⇔ Pr [ A and B ] = Pr[A] × Pr[B] \)

random variables X, Y taking values in V are independent if:

\( ∀ a,b ∈ V, Pr[ X=a and Y=b ] = Pr[ X=a ] × Pr[ Y=b ] \)

** Xor

|---+---+---|
| ⊕ | 1 | 0 |
|---+---+---|
| 1 | 0 | 1 |
| 0 | 1 | 0 |
|---+---+---|

Thm: Y a random variable over {0,1}^n, X an independent uniform variable on {0,1}^n
Then Z:=Y ⊕ X is a uniform variable on {0,1}^n
