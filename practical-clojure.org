#+Title: practical clojure
#+author: Antoine Romain Dumont
#+STARTUP: indent
#+STARTUP: hidestars odd

* DONE About the Authors.......................................................................................... xiv
* DONE About the Technical Reviewer .............................................................................. xv
* DONE Acknowledgments ........................................................................................... xvi
* DONE Chapter 1: The Clojure Way [3/3] .............................................................................1
*** DONE Clojure’s Philosophy and Special Features ................................................................1
***** DONE A Next-Generation Language................................................................................ 1
The future so why fight it!?
***** DONE Dynamic and Powerful (Yes, It’s a Lisp) .................................................................. 1
ugly for some but excellent for others, clojure is awsome as a lisp language.
***** DONE The Java Platform......................................................................................... 2
The jvm is a real good piece of software. Clojure uses it at its advantages.
*** DONE Functional Programming [8/8] .............................................................................2
***** DONE Purely Functional Programming ............................................................................ 4
Based on pure function:
- only inputs (parameters) and output
- no interaction with the outside
- no state
- more simple to test
- black box
***** DONE Clojure’s Compromise ..................................................................................... 6
Coding purely functional functions is impossible but clojure tends
towards it as much as it can.
As clojure can manipulate java objects, there is no purity (java
objects are by definition stateful) when
manipulating those.
***** DONE Immutability.............................................................................................. 7
Structures are immutable.
When needed to change, a new object is copied but share the common
structure - this shared structure is called persitence.
The old shared structure which is not shared anymore will be silently garbage collected.

Many structures:
- Linked list
- Vectors
- Hash maps
- Sorted maps
- Hash and sorted sets
***** DONE What about Object-Oriented Programming? .................................................................. 9
- Clojure is not object oriented.
    - mutability
    - no facility in code modularization and abstraction -> spaghetti code
    - inheritance is fragile and can be dangerous
    - code bloat -> needs some frameworks to improve the code -> more
      boilerplates and interface not serving the soft...
- Clojure shares the good parts of the OO paradigm
    - modularity
    - polymorphism
    - encapsulation
    - reusability
- Another difference
***** DONE Structure of a clojure program .......................................................................... 10
***** DONE State Management ........................................................................................ 11
stateful objects == new spaghetti code
***** DONE State and Identity ...................................................................................... 12
***** DONE Software Transactional Memory ........................................................................... 13
*** DONE Summary .................................................................................................15
* DONE Chapter 2: The Clojure Environment [7/7] ....................................................................17
*** DONE "Hello World" in Clojure.................................................................................17
REPL: Read Evaluate Print Loop
Launch clojure:
#+BEGIN_SRC sh
tony@dagobah $ clojure
#+END_SRC
*** DONE Clojure Forms [4/4] .....................................................................................18
Any unit of code that can be evaluated to return a value.
4 types of form
***** DONE Literals................................................................................................ 18
Forms that resolve to themselves. ~ constants
***** DONE Symbols................................................................................................. 19
Forms that resolve to a value. ~ local variables
***** DONE Composite Forms......................................................................................... 19
Everything that's wrapped with parenthesis (list) or brackets
(vectors) or braces (map).
Entire programs is lists.
Code is data and data can be code.
***** DONE Special Forms........................................................................................... 19
Special system form that is part of the clojure core.
*** DONE Writing and Running Source Files ........................................................................20
Loading clojure code from the repl through a file:
#+BEGIN_SRC clj
user=> (load-file "./hello-world.clj")
Hello, World!
I'm running Clojure code from a file.
nil
#+END_SRC

From the cli:
#+BEGIN_SRC sh
java –jar clojure-1.0.0.jar ./hello-world.clj
#+END_SRC
*** DONE Vars, Namespaces, and the Environment....................................................................21
Vars are "global variables". Declared with "def".
Beware of the order in which you're declaring variables (difference
between REPL and launching the file).
Do NOT redefine Vars.
*** DONE Symbols and Symbol Resolution [2/2]......................................................................23
***** DONE Symbol Names ........................................................................................... 23
***** DONE Symbol Resolution and Scope ............................................................................ 24
*** DONE Namespaces [3/3] ........................................................................................24
***** DONE Declaring Namespaces.................................................................................... 25
***** DONE Referencing Namespaces.................................................................................. 25
***** DONE Structuring Source Files ............................................................................... 26
*** DONE Summary .................................................................................................26
4 main units called forms: literals, symbols, special forms and
composites.
Vars are some sort of "global variables" with a limited scope, its namespace.
Break into multiple files with for each file a namespace.
Use namespaces and :use them.
* TODO Chapter 3: Controlling Program Flow [0/12] ..................................................................29
*** TODO Functions [0/6] .........................................................................................29
***** TODO First-Class Functions................................................................................... 29
***** TODO Defining Functions with fn ............................................................................. 29
***** TODO Defining Functions with defn............................................................................ 31
***** TODO Functions of Multiple Arities........................................................................... 31
***** TODO Functions with Variable Arguments....................................................................... 32
***** TODO Shorthand Function Declaration ......................................................................... 33
*** TODO Conditional Expressions..................................................................................34
*** TODO Local Bindings ..........................................................................................35
*** TODO Looping and Recursion ...................................................................................36
***** TODO Tail Recursion.......................................................................................... 39
*** TODO Deliberate Side Effects [0/2] ...........................................................................42
***** TODO Using do................................................................................................ 42
***** TODO Side Effects in Function Definitions.................................................................... 43
*** TODO Functional Programming Techniques [0/4] .................................................................43
***** TODO First-Class Functions................................................................................... 43
***** TODO Closures................................................................................................ 46
***** TODO Currying and Composing Functions........................................................................ 46
***** TODO Putting It All Together................................................................................. 48
* TODO Chapter 4: Data in Clojure [0/14] ...........................................................................51
*** TODO How to Represent and Manipulate Data ....................................................................51
*** TODO Nil .................................................................................................... 52
*** TODO Primitive Types .........................................................................................52
*** TODO Numbers ................................................................................................ 52
*** TODO Strings ................................................................................................ 57
*** TODO Boolean................................................................................................. 60
*** TODO Characters ............................................................................................. 61
*** TODO Keywords................................................................................................ 61
*** TODO Collections .............................................................................................62
*** TODO Lists .................................................................................................. 63
*** TODO Vectors................................................................................................. 64
*** TODO Maps.................................................................................................... 66
*** TODO Sets ................................................................................................... 71
*** TODO Summary .................................................................................................72
* TODO Chapter 5: Sequences [0/11] .................................................................................73
*** TODO What Are Sequences?......................................................................................73
*** TODO Sequenceable Types...................................................................................... 75
*** TODO Anatomy of a Sequence....................................................................................75
*** TODO Constructing Sequences...................................................................................76
*** TODO Lazy Sequences...........................................................................................77
*** TODO An Example of Laziness.................................................................................. 78
*** TODO Constructing Lazy Sequences ............................................................................ 80
*** TODO Lazy Sequences and Memory Management.................................................................... 82
*** TODO The Sequence API.........................................................................................83
*** TODO Sequence Creation ...................................................................................... 83
*** TODO Summary .................................................................................................95
* TODO Chapter 6: State Management [0/22] ..........................................................................95
*** TODO State in an Immutable ...................................................................................95
*** TODO The Old Way............................................................................................. 95
*** TODO State and Identity ..................................................................................... 96
*** TODO State and Identity in Clojure .......................................................................... 96
*** TODO Refs and Transactions ...................................................................................97
*** TODO Creating and Accessing refs............................................................................. 98
*** TODO Updating refs .......................................................................................... 98
*** TODO Atoms...................................................................................................104
*** TODO Using Atoms ........................................................................................... 104
*** TODO When to Use Atoms ..................................................................................... 105
*** TODO Asynchronous Agents ....................................................................................105
*** TODO Creating and Updating Agents........................................................................... 105
*** TODO Errors and Agents...................................................................................... 107
*** TODO Waiting for Agents .................................................................................... 108
*** TODO Shutting Down Agents .................................................................................. 108
*** TODO When to Use Agents .................................................................................... 109
*** TODO Vars and Thread-Local State ............................................................................109
*** TODO When to Use Thread-Local Vars ......................................................................... 110
*** TODO Keeping Track of Identities ............................................................................111
*** TODO Validators............................................................................................. 111
*** TODO Watches................................................................................................ 112
*** TODO Summary ................................................................................................113
* TODO Chapter 7: Namespaces and Libraries [0/21] .................................................................115
*** TODO Organizing Clojure Code ................................................................................115
*** TODO Namespace Basics .......................................................................................115
*** TODO Switching Namespaces with in-ns........................................................................ 115
*** TODO Referring to Other Namespaces ......................................................................... 116
*** TODO Loading Other Namespaces................................................................................117
*** TODO Loading from a File or Stream.......................................................................... 117
*** TODO Loading from the Classpath............................................................................. 118
*** TODO Loading and Referring Namespaces in One Step .......................................................... 120
*** TODO Importing Java Classes ................................................................................ 120
*** TODO Bringing It All Together: Namespace Declarations .......................................................121
*** TODO Symbols and Namespaces..................................................................................121
*** TODO Namespace Metadata..................................................................................... 122
*** TODO Forward Declarations .................................................................................. 122
*** TODO Namespace-Qualified Symbols and Keywords............................................................... 122
*** TODO Constructing Symbols and Keywords...................................................................... 123
*** TODO Public and Private Vars................................................................................ 123
*** TODO Advanced Namespace Operations...........................................................................124
*** TODO Querying Namespaces.................................................................................... 124
*** TODO Manipulating Namespaces ............................................................................... 125
*** TODO Namespaces As References ...............................................................................126
*** TODO Summary ................................................................................................126
* TODO Chapter 8: Metadata [0/8] ..................................................................................127
*** TODO Reading and Writing Metadata ...........................................................................127
*** TODO Metadata-Preserving Operations..........................................................................128
*** TODO Read-Time Metadata .....................................................................................129
*** TODO Metadata on Vars........................................................................................129
*** TODO Type Tags ............................................................................................. 131
*** TODO Private Vars .......................................................................................... 131
*** TODO Metadata on Reference Types ............................................................................131
*** TODO Summary ................................................................................................131
* TODO Chapter 9: Multimethods and Hierarchies [0/12] .............................................................133
*** TODO Multimethods............................................................................................133
*** TODO Multiple Dispatch...................................................................................... 135
*** TODO Default Dispatch Values................................................................................ 135
*** TODO Hierarchies ............................................................................................136
*** TODO Querying Hierarchies .................................................................................. 137
*** TODO Hierarchies with Multimethods...........................................................................137
*** TODO Hierarchies with Java Classes.......................................................................... 138
*** TODO More Hierarchy Queries................................................................................. 139
*** TODO Resolving Conflicts ................................................................................... 139
*** TODO Type Tags ............................................................................................. 141
*** TODO User-Defined Hierarchies ...............................................................................141
*** TODO Summary ................................................................................................142
* TODO Chapter 10: Java Interoperability [0/12] ...................................................................143
*** TODO Calling Java from Clojure...............................................................................143
*** TODO Java Interop Special Forms ............................................................................ 143
*** TODO Java Interop Preferred Forms........................................................................... 144
*** TODO Clojure Types and Java Interfaces...................................................................... 145
*** TODO Java Arrays............................................................................................ 146
*** TODO Calling Clojure from Java...............................................................................148
*** TODO Loading and Evaluating Clojure Code ................................................................... 149
*** TODO Using Clojure Functions and Vars....................................................................... 149
*** TODO Creating Java Classes ..................................................................................150
*** TODO Proxying Java Classes ................................................................................. 150
*** TODO Generating Java Classes ............................................................................... 151
*** TODO Summary ................................................................................................157
* TODO Chapter 11: Parallel Programming [0/13] ....................................................................159
*** TODO Parallelism in Clojure..................................................................................159
*** TODO Agents..................................................................................................159
*** TODO Agent Thread Pools..................................................................................... 159
*** TODO Agent Example.......................................................................................... 160
*** TODO Concurrent Agent Performance .......................................................................... 161
*** TODO Concurrency Functions ..................................................................................161
*** TODO Overhead and Performance............................................................................... 162
*** TODO Futures and Promises....................................................................................163
*** TODO Futures ............................................................................................... 163
*** TODO Promises............................................................................................... 164
*** TODO Java-based Threading ...................................................................................165
*** TODO Creating a Thread ..................................................................................... 165
*** TODO Summary ................................................................................................166
* TODO Chapter 12: Macros and Metaprogramming [0/11] ..............................................................167
*** TODO What Is Metaprogramming? ...............................................................................167
*** TODO Code vs. Data.......................................................................................... 167
*** TODO Homoiconicity.......................................................................................... 167
*** TODO Macros..................................................................................................168
*** TODO Working with Macros.................................................................................... 169
*** TODO Code Templating........................................................................................ 171
*** TODO Generating Symbols .................................................................................... 172
*** TODO When to Use Macros..................................................................................... 173
*** TODO Using Macros........................................................................................... 173
*** TODO Using Macros to Create DSLs ........................................................................... 177
*** TODO Summary ................................................................................................178
* TODO Chapter 13: Datatypes and Protocols [0/14] .................................................................179
*** TODO Protocols...............................................................................................179
*** TODO Protocols As Interfaces................................................................................ 180
*** TODO Datatypes...............................................................................................180
*** TODO Implementing Protocols and Interfaces...................................................................181
*** TODO In-Line Methods........................................................................................ 181
*** TODO Extending Java Interfaces ............................................................................. 182
*** TODO Datatypes As Classes .................................................................................. 183
*** TODO Extending Protocols to Pre-Existing Types ..............................................................183
*** TODO Extending Java Classes and Interfaces ................................................................. 184
*** TODO Reifying Anonymous Datatypes ...........................................................................184
*** TODO Working with Datatypes and Protocols....................................................................185
*** TODO A Complete Example..................................................................................... 186
*** TODO Advanced Datatypes .....................................................................................186
*** TODO Summary ................................................................................................187
* TODO Chapter 14: Performance [0/15] .............................................................................189
*** TODO Profiling on the JVM....................................................................................189
*** TODO General Tips for Java Performance ..................................................................... 189
*** TODO Simple Profiling with Time ............................................................................ 190
*** TODO Using Java Profiling Tools ............................................................................ 190
*** TODO Memoization ............................................................................................191
*** TODO Reflection and Type Hints...............................................................................191
*** TODO Working with Primitives.................................................................................193
*** TODO Loop Primitives........................................................................................ 193
*** TODO Unchecked Integer Arithmetic .......................................................................... 194
*** TODO Primitive Arrays ...................................................................................... 195
*** TODO Transients..............................................................................................195
*** TODO Var Lookups ............................................................................................196
*** TODO Inlining ...............................................................................................197
*** TODO Macros and definline .................................................................................. 197
*** TODO Summary ................................................................................................197
* TODO Index ......................................................................................................199

